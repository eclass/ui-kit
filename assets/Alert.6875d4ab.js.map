{"version":3,"file":"Alert.6875d4ab.js","sources":["../../src/organisms/Alerts/Alert.tsx"],"sourcesContent":["import { Box, useMediaQuery } from '@chakra-ui/react'\n\nimport { BtnLink, BtnPrimary } from '@/molecules'\nimport { vars } from '@/theme'\nimport { IAlertProps } from './types.d'\nimport { alertStates } from './utils/alertStates'\nimport { Close } from '@/atoms/Icons'\n\n/**\n * Componente de alerta embebida que puede tener 4 estados diferentes.\n * Opcionalmente puede llevar un botón. El botón puede mostrar sólo un texto\n * o un texto junto a un ícono.\n * @example Implementación de alerta con botón y margen\n * <Alert\n * state='info'\n * buttonName='Texto botón'\n * buttonIcon={<Multimedia />}\n * onClick={() => alert('hola')}\n * m='0 20px'>\n * Mensaje\n * </Alert>\n */\n\nexport function Alert({\n  children,\n  canDismiss = false,\n  buttonText,\n  buttonIcon,\n  buttonLink = false,\n  fullWidth = false,\n  isFlash = false,\n  onClick,\n  state,\n  m,\n  endTextLink,\n  onClickLink,\n}: IAlertProps): JSX.Element {\n  const [isMobile] = useMediaQuery('(max-width: 425px)')\n\n  const handleClick = (): any => {\n    if (onClick) {\n      onClick()\n    }\n  }\n\n  let buttonType: undefined | 'link' | 'normal'\n  if (buttonText) {\n    buttonType = buttonLink ? 'link' : 'normal'\n  }\n\n  return (\n    <Box\n      className={isFlash ? 'flashNotification' : 'e_alert'}\n      alignItems={!isMobile ? 'center' : 'unset'}\n      backgroundColor={alertStates[state].bg}\n      borderRadius=\"8px\"\n      display=\"flex\"\n      flexFlow={isMobile ? 'column' : 'row'}\n      gap={!isFlash ? '16px' : ''}\n      justifyContent={!isMobile ? 'space-between' : ''}\n      margin={m}\n      width={fullWidth ? '100%' : 'fit-content'}\n      maxWidth={fullWidth ? 'none' : '796px'}\n      p=\"1rem\"\n      pr={canDismiss ? '1.75rem' : '1rem'}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        gap=\"10px\"\n        className=\"alertContent\"\n        sx={{\n          '.linkButton': {\n            fontSize: '16px',\n          },\n          a: {\n            fontWeight: '500',\n            color: vars('colors-main-deepSkyBlue'),\n            textDecoration: 'underline',\n          },\n          'a:hover': {\n            color: vars('colors-neutral-darkCharcoal'),\n          },\n        }}\n      >\n        <Box\n          className=\"iconContainer\"\n          sx={{\n            svg: {\n              width: 'auto',\n            },\n          }}\n        >\n          {alertStates[state].icon}\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box\n            as=\"p\"\n            alignSelf=\"center\"\n            fontFamily=\"Roboto\"\n            fontSize=\"16px\"\n            fontWeight=\"400\"\n            lineHeight=\"28px\"\n            color={vars('colors-neutral-darkCharcoal')}\n          >\n            {children}\n            {endTextLink && onClickLink && <BtnLink onClick={onClickLink}>{endTextLink}</BtnLink>}\n          </Box>\n          {buttonType === 'link' && <BtnLink onClick={handleClick}>{buttonText}</BtnLink>}\n        </Box>\n      </Box>\n\n      {buttonType === 'normal' && (\n        <BtnPrimary isFullWidth={!!isMobile} leftIcon={buttonIcon} onClick={handleClick}>\n          {buttonText}\n        </BtnPrimary>\n      )}\n      {canDismiss && (\n        <Box\n          data-testid=\"closeButton\"\n          cursor=\"pointer\"\n          marginLeft=\"12px\"\n          sx={{\n            svg: {\n              position: 'absolute',\n              top: '16px',\n              right: '12px',\n            },\n          }}\n          onClick={onClick}\n        >\n          <Close />\n        </Box>\n      )}\n    </Box>\n  )\n}\n"],"names":["Alert","children","canDismiss","buttonText","buttonIcon","buttonLink","fullWidth","isFlash","onClick","state","m","endTextLink","onClickLink","isMobile","useMediaQuery","handleClick","buttonType","Box","className","alignItems","backgroundColor","alertStates","bg","borderRadius","display","flexFlow","gap","justifyContent","margin","width","maxWidth","p","pr","position","_jsxs","sx","fontSize","a","fontWeight","color","vars","textDecoration","_jsx","svg","icon","as","alignSelf","fontFamily","lineHeight","BtnLink","BtnPrimary","isFullWidth","leftIcon","cursor","marginLeft","top","right","Close"],"mappings":"2MAuBO,SAASA,EAAM,CACpBC,SAAAA,EACAC,WAAAA,EAAa,GACbC,WAAAA,EACAC,WAAAA,EACAC,WAAAA,EAAa,GACbC,UAAAA,EAAY,GACZC,QAAAA,EAAU,GACVC,QAAAA,EACAC,MAAAA,EACAC,EAAAA,EACAC,YAAAA,EACAC,YAAAA,CACW,EAAgB,CAC3B,KAAM,CAACC,CAAQ,EAAIC,EAAc,oBAAoB,EAE/CC,EAAcA,IAAW,CACzBP,GACMA,GACV,EAGEQ,IAAAA,EACJ,OAAIb,IACFa,EAAaX,EAAa,OAAS,YAIlCY,EAAG,CACFC,UAAWX,EAAU,oBAAsB,UAC3CY,WAAaN,EAAsB,QAAX,SACxBO,gBAAiBC,EAAYZ,GAAOa,GACpCC,aAAa,MACbC,QAAQ,OACRC,SAAUZ,EAAW,SAAW,MAChCa,IAAMnB,EAAmB,GAAT,OAChBoB,eAAiBd,EAA6B,GAAlB,gBAC5Be,OAAQlB,EACRmB,MAAOvB,EAAY,OAAS,cAC5BwB,SAAUxB,EAAY,OAAS,QAC/ByB,EAAE,OACFC,GAAI9B,EAAa,UAAY,OAC7B+B,SAAS,WAAUhC,SAAA,CAEnBiC,EAACjB,EAAG,CACFO,QAAQ,OACRE,IAAI,OACJR,UAAU,eACViB,GAAI,CACF,cAAe,CACbC,SAAU,MACZ,EACAC,EAAG,CACDC,WAAY,MACZC,MAAOC,EAAK,yBAAyB,EACrCC,eAAgB,WAClB,EACA,UAAW,CACTF,MAAOC,EAAK,6BAA6B,CAC3C,CACF,EAAEvC,SAAA,CAEFyC,EAACzB,EAAG,CACFC,UAAU,gBACViB,GAAI,CACFQ,IAAK,CACHd,MAAO,MACT,CACF,EAAE5B,SAEDoB,EAAYZ,GAAOmC,IAAAA,CACjB,EACLV,EAACjB,EAAG,CAACO,QAAQ,OAAOL,WAAW,SAAQlB,SAAA,CACrCiC,EAACjB,EAAG,CACF4B,GAAG,IACHC,UAAU,SACVC,WAAW,SACXX,SAAS,OACTE,WAAW,MACXU,WAAW,OACXT,MAAOC,EAAK,6BAA6B,EAAEvC,SAAA,CAE1CA,EACAU,GAAeC,KAAgBqC,EAAO,CAACzC,QAASI,EAAYX,SAAEU,CAAAA,CAAqB,CAAC,CAClF,CAAA,EACJK,IAAe,UAAWiC,EAAO,CAACzC,QAASO,EAAYd,SAAEE,CAAAA,CAAoB,CAAC,CAAA,CAC5E,CAAC,CACH,CAAA,EAEJa,IAAe,YACbkC,EAAU,CAACC,YAAa,CAAC,CAACtC,EAAUuC,SAAUhD,EAAYI,QAASO,EAAYd,SAC7EE,CAAAA,CACS,EAEbD,GACCwC,EAACzB,EAAG,CACF,cAAY,cACZoC,OAAO,UACPC,WAAW,OACXnB,GAAI,CACFQ,IAAK,CACHV,SAAU,WACVsB,IAAK,OACLC,MAAO,MACT,CACF,EACAhD,QAAAA,EAAiBP,SAEjByC,EAACe,EAAO,EAAA,CAAA,CACL,CACN,CAAA,CACE,CAET"}
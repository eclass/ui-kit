{"version":3,"file":"javadoclike.f2d3a107.js","sources":["../../node_modules/refractor/lang/javadoclike.js"],"sourcesContent":["'use strict'\n\nmodule.exports = javadoclike\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\nfunction javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n"],"names":["javadoclike_1","javadoclike","Prism","javaDocLike","docCommentSupport","lang","callback","tokenName","grammar","token","definition","l","addSupport","languages","docLanguage","pattern"],"mappings":"kWAEA,IAAAA,EAAiBC,EACjBA,EAAY,YAAc,cAC1BA,EAAY,QAAU,CAAE,EACxB,SAASA,EAAYC,EAAO,EACxB,SAAUA,EAAO,CACjB,IAAIC,EAAeD,EAAM,UAAU,YAAc,CAC/C,UAAW,CACT,QACE,iEACF,WAAY,EACb,EACD,QAAS,CAGP,QAAS,wDACT,WAAY,EACb,EACD,YAAa,MACnB,EAOI,SAASE,EAAkBC,EAAMC,EAAU,CACzC,IAAIC,EAAY,cACZC,EAAUN,EAAM,UAAUG,GAC9B,GAAI,EAACG,EAGL,KAAIC,EAAQD,EAAQD,GACpB,GAAI,CAACE,EAAO,CAEV,IAAIC,EAAa,CAAE,EACnBA,EAAWH,GAAa,CACtB,QAAS,wCACT,WAAY,GACZ,MAAO,SACR,EACDC,EAAUN,EAAM,UAAU,aAAaG,EAAM,UAAWK,CAAU,EAClED,EAAQD,EAAQD,EACjB,CAOD,GANIE,aAAiB,SAEnBA,EAAQD,EAAQD,GAAa,CAC3B,QAASE,CACV,GAEC,MAAM,QAAQA,CAAK,EACrB,QAAS,EAAI,EAAGE,EAAIF,EAAM,OAAQ,EAAIE,EAAG,IACnCF,EAAM,aAAc,SACtBA,EAAM,GAAK,CACT,QAASA,EAAM,EAChB,GAEHH,EAASG,EAAM,EAAE,OAGnBH,EAASG,CAAK,EAEjB,CAOD,SAASG,EAAWC,EAAWC,EAAa,CACtC,OAAOD,GAAc,WACvBA,EAAY,CAACA,CAAS,GAExBA,EAAU,QAAQ,SAAUR,EAAM,CAChCD,EAAkBC,EAAM,SAAUU,EAAS,CACpCA,EAAQ,SACXA,EAAQ,OAAS,CAAE,GAErBA,EAAQ,OAAO,KAAOD,CAChC,CAAS,CACT,CAAO,CACF,CACD,OAAO,eAAeX,EAAa,aAAc,CAC/C,MAAOS,CACb,CAAK,EACDT,EAAY,WAAW,CAAC,OAAQ,aAAc,KAAK,EAAGA,CAAW,CAClE,GAAED,CAAK,CACV"}
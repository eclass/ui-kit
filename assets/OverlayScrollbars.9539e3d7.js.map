{"version":3,"file":"OverlayScrollbars.9539e3d7.js","sources":["../../node_modules/overlayscrollbars/js/OverlayScrollbars.js","../../node_modules/@storybook/components/dist/esm/ScrollArea/OverlayScrollbars.js"],"sourcesContent":["/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.3\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 20.07.2022\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n\t\t\t\t\tif (!_destroyed) {\r\n\t\t\t\t\t\tvar target = event.target;\r\n\t\t\t\t\t\tvar elm = FRAMEWORK(event.target);\r\n\t\t\t\t\t\tvar index = FRAMEWORK.inArray(target, _updateOnLoadElms);\r\n\t\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t\t_updateOnLoadElms.splice(index, 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\teachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n\t\t\t\t\t\t\tif (elm.is(updateOnLoadSelector)) {\r\n\t\t\t\t\t\t\t\tupdate({ _contentSizeChanged: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        _initialized = true; // workaround so the onInitializationWithdrawn callback below is fired\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _initialized = false;\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));","import \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.assign.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport OverlayScrollbars from 'overlayscrollbars';\n\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\nexport var OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_ref) {\n  var _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options,\n      extensions = _ref.extensions,\n      className = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = React.useRef();\n  var osInstance = React.useRef();\n  React.useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  React.useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-padding\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\nOverlayScrollbarsComponent.displayName = \"OverlayScrollbarsComponent\";\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport default OverlayScrollbarsComponent;"],"names":["global","factory","module","this","window","document","undefined","PLUGINNAME","TYPES","LEXICON","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","name","result","uppercasedName","elmStyle","resultPossibilities","i","v","currVendorWithoutDashes","property","values","suffix","dummyStyle","possbleValues","preparedSuffix","prop","isInterface","fallback","COMPATIBILITY","windowSize","x","bind","func","thisObj","proto","aArgs","fNOP","fBound","id","event","strPage","strClient","strX","strY","target","eventDoc","doc","body","touch","button","item","arr","def","obj","MATH","JQUERY","EASING","_easingsMath","t","b","c","s","p","a","o","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","extend","src","copyIsArray","copy","options","clone","length","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","each","callback","isArrayLike","stripAndCollapse","value","tokens","matches","elem","selector","nodeList","insertAdjacentElement","el","strategy","child","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","animate","setAnimationValue","props","easing","complete","guaranteedNext","hasOptions","from","to","progress","step","specialEasing","duration","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","clearQ","jumpToEnd","elementIsVisible","base","elements","elms","eventName","handler","eventNameLength","oneEventName","oneHandler","e","parentNode","parents","parent","wrapperHTML","nodes","wrapper","deepest","previousSibling","nextSibling","contents","styles","cptStyle","getCptStyle","className","classNamePrepared","classList","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","attrName","rect","scrollLeft","scrollTop","children","ch","childs","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","type","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","convert","template","recursive","valType","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","scrollSize","scrollSize2","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportsPassive","abs","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","valOne","valTwo","absValOne","absValTwo","dDPI","sDPI","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","now","OverlayScrollbarsInstance","pluginTargetElement","extensions","autoUpdateLoop","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","setupResponsiveEventListener","element","eventNames","listener","remove","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","capture","nativeParam","addDestroyEventListener","setupResizeObserver","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","onScroll","expandChildCSS","observerElementCSS","setTopRightBottomLeft","attachEvent","isIE","findFirst","wnd","directionChanged","dir","css","scrollLeftValue","update","resizeObserverObj","createMutationObservers","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","createHostClassNameRegExp","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","connectMutationObservers","disconnectMutationObservers","hostOnResized","changed","hostSize","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","setupHostMouseTouchEvents","destroy","bodyMinSizeChanged","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","attributeName","mutationType","strClosest","updateAutoContentSizeChanged","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","meaningfulAttrsChanged","curr","cache","changedAttrs","checks","check","attr","isSizeAffectingCSSProperty","propertyName","flexGrow","flexShrink","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","updateHints","hostSizeChanged","contentSizeChanged","force","changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resize","resizeChanged","paddingAbsolute","paddingAbsoluteChanged","clipAlways","clipAlwaysChanged","sizeAutoCapable","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdate","autoUpdateChanged","overflowBehavior","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","removeClass","addClass","oldSize","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","resetBottomTmp","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","strWH","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","xy","widthHeight","scrollMax","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","elementStyle","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","cursorRow","cursorCol","widestRow","lastRow","lastCol","cursorPos","cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","updateElementsOnLoad","setOptions","newOptions","validatedOpts","setupStructureDOM","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","updateTextarea","doClearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","setupScrollbarsDOM","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","resetScrollbarDOM","horizontalElements","verticalElements","setupScrollbarEvents","scrollbarVarsInfo","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","originalEvent","isTouchEvent","documentDragMove","trackLength","handleLength","scrollRange","scrollRaw","scrollDeltaPercent","scrollDelta","documentMouseTouchUp","mouseInsideHost","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","hide","handleCSS","digit","handleRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","offset","unsnappedScrollRatio","snappedHandleOffset","getCSSTransitionString","isTrack","element1","element2","setupScrollbarCornerDOM","setupScrollbarCornerEvents","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","args","dependent","extensionOnName","ext","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","withCurrClassNameOption","withOldClassNameOption","split","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","a1","a2","k","toFloat","num","textareaCursorPosition","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","getObjectPropVal","path","splits","setObjectPropVal","splitsLength","extendObj","extendObjRoot","updateOnLoad","current","doAdd","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","option","changedOps","extName","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","normalizeRTL","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","possibleOperator","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","param1","param2","param3","elementName","stateProperty","prepare","extended","changePropertyName","privateMethods","extensionOptions","registeredExtensionObj","instanceAdded","instanceContract","contractResult","contractFulfilled","instanceRemoved","construct","initBodyScroll","bodyMouseTouchDownListener","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extension","extNameTypeString","_elements","_extends","source","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","sourceKeys","OverlayScrollbarsComponent","_ref","_ref$options","rest","osTargetRef","React","OverlayScrollbars","mergeHostClassNames","_osInstance$getElemen","host","osClassNames"],"mappings":";;;;;;;;;;;kBAaC,SAAUA,EAAQC,GAAS,CAIpBC,GAAA,QAAiBD,GAAQD,EAAQA,EAAO,SAAU,MAAS,CAGnE,GAAE,OAAO,QAAW,YAAc,OAASG,GACvC,SAAUC,EAAQC,GAAUC,EAAW,CAEnC,IAAIC,GAAa,oBACbC,EAAQ,CACR,EAAG,SACH,EAAG,WACH,EAAG,QACH,EAAG,SACH,EAAG,UACH,EAAG,SACH,EAAG,YACH,EAAG,MAKf,EACYC,EAAU,CACV,EAAG,QACH,EAAG,QACH,EAAG,KACH,EAAG,SACH,EAAG,YACH,GAAI,WACJ,GAAI,eACJ,GAAI,eACJ,GAAI,eACJ,GAAI,cACJ,GAAI,cACJ,GAAI,cACJ,IAAK,iBACL,IAAK,uBACjB,EACYC,GAAW,UAAY,CAEvB,IAAIC,EAAU,CAAA,EACVC,EAAW,CAAA,EACXC,EAAc,CAAC,WAAY,QAAS,MAAO,MAAM,EACjDC,EAAa,CAAC,SAAU,MAAO,IAAK,IAAI,EAC5C,SAASC,EAAmBC,EAAK,CAC7B,OAAOA,EAAI,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAI,MAAM,CAAC,CACnD,CAED,MAAO,CACH,aAAcH,EACd,YAAaC,EACb,aAAc,SAAUG,EAAM,CAC1B,IAAIC,EAASN,EAASK,GAEtB,GAAIL,EAASH,EAAQ,KAAKQ,CAAI,EAC1B,OAAOC,EASX,QAPIC,GAAiBJ,EAAmBE,CAAI,EACxCG,GAAWf,GAAS,cAAc,KAAK,EAAEI,EAAQ,GACjDY,EACAC,EAAI,EACJC,GACAC,EAEGF,EAAIT,EAAY,OAAQS,IAQ3B,IAPAE,EAA0BX,EAAYS,GAAG,QAAQ,KAAM,EAAE,EACzDD,EAAsB,CAClBJ,EACAJ,EAAYS,GAAKL,EACjBO,EAA0BL,GAC1BJ,EAAmBS,CAAuB,EAAIL,EAC1E,EAC6BI,GAAI,EAAGA,GAAIF,EAAoBZ,EAAQ,GAAIc,KAC5C,GAAIH,GAASC,EAAoBE,OAAQjB,EAAW,CAChDY,EAASG,EAAoBE,IAC7B,KACH,CAIT,OAAAX,EAASK,GAAQC,EACVA,CACV,EACD,kBAAmB,SAAUO,EAAUC,EAAQC,GAAQ,CACnD,IAAIV,GAAOQ,EAAW,IAAMC,EACxBR,EAASN,EAASK,IAEtB,GAAIL,EAASH,EAAQ,KAAKQ,EAAI,EAC1B,OAAOC,EASX,QAPIU,EAAavB,GAAS,cAAc,KAAK,EAAEI,EAAQ,GACnDoB,GAAgBH,EAAO,MAAM,GAAG,EAChCI,EAAiBH,IAAU,GAC3BL,GAAI,EACJC,EAAI,GACJQ,EAEGT,GAAIO,GAAcpB,EAAQ,GAAIa,KACjC,KAAOC,EAAIb,GAAQ,aAAaD,EAAQ,GAAIc,IAGxC,GAFAQ,EAAOR,EAAI,EAAIM,GAAcP,IAAKZ,GAAQ,aAAaa,GAAKM,GAAcP,IAC1EM,EAAW,QAAUH,EAAW,IAAMM,EAAOD,EACzCF,EAAWnB,EAAQ,GAAI,CACvBS,EAASa,EACT,KACH,CAIT,OAAAnB,EAASK,IAAQC,EACVA,CACV,EACD,OAAQ,SAAUD,EAAMe,EAAaC,GAAU,CAC3C,IAAIX,GAAI,EACJJ,EAASP,EAAQM,GAErB,GAAI,CAACN,EAAQF,EAAQ,KAAKQ,CAAI,EAAG,CAE7B,IADAC,EAASd,EAAOa,GACTK,GAAIR,EAAWL,EAAQ,GAAIa,KAC9BJ,EAASA,GAAUd,GAAQ4B,EAAclB,EAAWQ,IAAKR,EAAWQ,IAAG,YAAW,GAAMP,EAAmBE,CAAI,GACnHN,EAAQM,GAAQC,CACnB,CACD,OAAOA,GAAUe,EACpB,CACJ,CACb,IACYC,EAAiB,UAAY,CAC7B,SAASC,EAAWC,EAAG,CACnB,OAAOA,EAAIhC,EAAO,YAAcC,GAAS,gBAAgBI,EAAQ,KAAOJ,GAAS,KAAKI,EAAQ,IAAML,EAAO,aAAeC,GAAS,gBAAgBI,EAAQ,KAAOJ,GAAS,KAAKI,EAAQ,GAC3L,CACD,SAAS4B,EAAKC,EAAMC,EAAS,CACzB,GAAI,OAAOD,GAAQ9B,EAAM,EACrB,KAAM,uBAKV,IAAIgC,EAAQ/B,EAAQ,EAChBgC,EAAQ,MAAMD,GAAO,MAAM,KAAK,UAAW,CAAC,EAC5CE,EAAO,UAAY,GACnBC,GAAS,UAAY,CAAE,OAAOL,EAAK,MAAM,gBAAgBI,EAAO,KAAOH,EAASE,EAAM,OAAO,MAAMD,GAAO,MAAM,KAAK,SAAS,CAAC,CAAC,GAEpI,OAAIF,EAAKE,KACLE,EAAKF,GAASF,EAAKE,IACvBG,GAAOH,GAAS,IAAIE,EAEbC,EACV,CAED,MAAO,CAKH,GAAIN,EAAKF,EAAY,EAAG,EAAI,EAM5B,GAAIE,EAAKF,EAAY,CAAC,EAMtB,GAAIE,EAAK3B,GAAQ,OAAQ,EAAG,mBAAoB,EAAI,EAMpD,GAAI2B,EAAK3B,GAAQ,OAAQ,EAAG,iBAAkB,EAAI,EAMlD,IAAK2B,EAAK3B,GAAQ,OAAQ,EAAG,wBAAyB,GAAO,SAAU4B,EAAM,CAAE,OAAOlC,EAAO,WAAWkC,EAAM,IAAO,EAAE,EAAI,EAM3H,IAAKD,EAAK3B,GAAQ,OAAQ,EAAG,uBAAwB,GAAO,SAAUkC,EAAI,CAAE,OAAOxC,EAAO,aAAawC,CAAE,CAAE,CAAE,EAM7G,IAAK,UAAY,CACb,OAAO,KAAK,KAAO,KAAK,IAAK,GAAI,IAAI,KAAI,EAAG,SAC/C,EAMD,KAAM,SAAUC,EAAO,CACfA,EAAM,gBACNA,EAAM,gBAAe,EAErBA,EAAM,aAAe,EAC5B,EAMD,KAAM,SAAUA,EAAO,CACfA,EAAM,gBAAkBA,EAAM,WAC9BA,EAAM,eAAc,EAEpBA,EAAM,YAAc,EAC3B,EAOD,KAAM,SAAUA,EAAO,CACnBA,EAAQA,EAAM,eAAiBA,EAE/B,IAAIC,EAAU,OACVC,EAAY,SACZC,EAAO,IACPC,EAAO,IACPC,GAASL,EAAM,QAAUA,EAAM,YAAcxC,GAC7C8C,GAAWD,GAAO,eAAiB7C,GACnC+C,EAAMD,GAAS,gBACfE,EAAOF,GAAS,KAGpB,GAAIN,EAAM,UAAYvC,EAAW,CAC7B,IAAIgD,GAAQT,EAAM,QAAQ,GAC1B,MAAO,CACH,EAAGS,GAAMR,EAAUE,GACnB,EAAGM,GAAMR,EAAUG,EACtB,CACJ,CAGD,MAAI,CAACJ,EAAMC,EAAUE,IAASH,EAAME,EAAYC,IAASH,EAAME,EAAYC,IAAS,KAEzE,CACH,EAAGH,EAAME,EAAYC,IAChBI,GAAOA,EAAI,YAAcC,GAAQA,EAAK,YAAc,IACpDD,GAAOA,EAAI,YAAcC,GAAQA,EAAK,YAAc,GACzD,EAAGR,EAAME,EAAYE,IAChBG,GAAOA,EAAI,WAAaC,GAAQA,EAAK,WAAa,IAClDD,GAAOA,EAAI,WAAaC,GAAQA,EAAK,WAAa,EAC1D,EAEE,CACH,EAAGR,EAAMC,EAAUE,GACnB,EAAGH,EAAMC,EAAUG,EAC3C,CACiB,EAOD,KAAM,SAAUJ,EAAO,CACnB,IAAIU,EAASV,EAAM,OACnB,MAAI,CAACA,EAAM,OAASU,IAAWjD,EACnBiD,EAAS,EAAI,EAAKA,EAAS,EAAI,EAAKA,EAAS,EAAI,EAAI,EAEtDV,EAAM,KACpB,EAQD,IAAK,SAAUW,EAAMC,EAAK,CACtB,QAASnC,EAAI,EAAGA,EAAImC,EAAIhD,EAAQ,GAAIa,IAEhC,GAAI,CACA,GAAImC,EAAInC,KAAOkC,EACX,OAAOlC,CACd,MACD,CAAa,CACjB,MAAO,EACV,EAOD,IAAK,SAAUmC,EAAK,CAChB,IAAIC,EAAM,MAAM,QAChB,OAAOA,EAAMA,EAAID,CAAG,EAAI,KAAK,KAAKA,CAAG,GAAKjD,EAAM,CACnD,EAOD,KAAM,SAAUmD,EAAK,CAGjB,OAFIA,IAAQrD,GAERqD,IAAQ,KACDA,EAAM,GACV,OAAOlD,EAAQ,GAAG,SAAS,KAAKkD,CAAG,EAAE,QAAQ,oBAAqB,IAAI,EAAE,YAAW,CAC7F,EAGD,KAAMtB,CAcT,CACb,IAGYuB,EAAO,KACPC,GAASzD,EAAO,OAChB0D,GAAU,UAAY,CACtB,IAAIC,EAAe,CACf,EAAGH,EAAK,GACR,EAAGA,EAAK,IACR,EAAGA,EAAK,IACR,EAAGA,EAAK,IACR,EAAGA,EAAK,KACR,EAAGA,EAAK,KACR,EAAGA,EAAK,IACR,EAAG,OACnB,EAYY,MAAO,CACH,MAAO,SAAUxB,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAC5B,MAAO,IAAMH,EAAa,EAAE3B,EAAI2B,EAAa,CAAC,EAAI,CACrD,EACD,OAAQ,SAAU3B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAC7B,OAAO9B,CACV,EACD,WAAY,SAAUA,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACjC,OAAOA,GAAKF,GAAK,GAAKA,EAAIC,CAC7B,EACD,YAAa,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAClC,MAAO,CAACA,GAAKF,GAAK,IAAMA,EAAI,GAAKC,CACpC,EACD,cAAe,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACpC,OAASF,GAAK,EAAI,GAAK,EAAKE,EAAI,EAAIF,EAAIA,EAAIC,EAAI,CAACC,EAAI,GAAM,EAAEF,GAAMA,EAAI,GAAK,GAAKC,CACpF,EACD,YAAa,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAClC,OAAOA,GAAKF,GAAK,GAAKA,EAAIA,EAAIC,CACjC,EACD,aAAc,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACnC,OAAOA,IAAMF,EAAIA,EAAI,EAAI,GAAKA,EAAIA,EAAI,GAAKC,CAC9C,EACD,eAAgB,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACrC,OAASF,GAAK,EAAI,GAAK,EAAKE,EAAI,EAAIF,EAAIA,EAAIA,EAAIC,EAAIC,EAAI,IAAMF,GAAK,GAAKA,EAAIA,EAAI,GAAKC,CACxF,EACD,YAAa,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAClC,OAAOA,GAAKF,GAAK,GAAKA,EAAIA,EAAIA,EAAIC,CACrC,EACD,aAAc,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACnC,MAAO,CAACA,IAAMF,EAAIA,EAAI,EAAI,GAAKA,EAAIA,EAAIA,EAAI,GAAKC,CACnD,EACD,eAAgB,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACrC,OAASF,GAAK,EAAI,GAAK,EAAKE,EAAI,EAAIF,EAAIA,EAAIA,EAAIA,EAAIC,EAAI,CAACC,EAAI,IAAMF,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAAKC,CACjG,EACD,YAAa,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAClC,OAAOA,GAAKF,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAIC,CACzC,EACD,aAAc,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACnC,OAAOA,IAAMF,EAAIA,EAAI,EAAI,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAAKC,CACtD,EACD,eAAgB,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACrC,OAASF,GAAK,EAAI,GAAK,EAAKE,EAAI,EAAIF,EAAIA,EAAIA,EAAIA,EAAIA,EAAIC,EAAIC,EAAI,IAAMF,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAAKC,CACxG,EACD,WAAY,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACjC,MAAO,CAACA,EAAIH,EAAa,EAAEC,EAAI,GAAKD,EAAa,EAAI,EAAE,EAAIG,EAAID,CAClE,EACD,YAAa,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAClC,OAAOA,EAAIH,EAAa,EAAEC,EAAI,GAAKD,EAAa,EAAI,EAAE,EAAIE,CAC7D,EACD,cAAe,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACpC,MAAO,CAACA,EAAI,GAAKH,EAAa,EAAEA,EAAa,EAAIC,EAAI,CAAC,EAAI,GAAKC,CAClE,EACD,WAAY,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACjC,OAAQF,GAAK,EAAKC,EAAIC,EAAIH,EAAa,EAAE,EAAG,IAAMC,EAAI,EAAI,EAAE,EAAIC,CACnE,EACD,YAAa,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAClC,OAAQF,GAAK,EAAKC,EAAIC,EAAIA,GAAK,CAACH,EAAa,EAAE,EAAG,IAAMC,EAAI,CAAC,EAAI,GAAKC,CACzE,EACD,cAAe,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACpC,OAAIF,GAAK,EAAUC,EACfD,GAAK,EAAUC,EAAIC,GAClBF,GAAK,EAAI,GAAK,EAAUE,EAAI,EAAIH,EAAa,EAAE,EAAG,IAAMC,EAAI,EAAE,EAAIC,EAChEC,EAAI,GAAK,CAACH,EAAa,EAAE,EAAG,IAAM,EAAEC,CAAC,EAAI,GAAKC,CACxD,EACD,WAAY,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACjC,MAAO,CAACA,GAAKH,EAAa,EAAE,GAAKC,GAAK,GAAKA,CAAC,EAAI,GAAKC,CACxD,EACD,YAAa,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CAClC,OAAOA,EAAIH,EAAa,EAAE,GAAKC,EAAIA,EAAI,EAAI,GAAKA,CAAC,EAAIC,CACxD,EACD,cAAe,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACpC,OAASF,GAAK,EAAI,GAAK,EAAK,CAACE,EAAI,GAAKH,EAAa,EAAE,EAAIC,EAAIA,CAAC,EAAI,GAAKC,EAAIC,EAAI,GAAKH,EAAa,EAAE,GAAKC,GAAK,GAAKA,CAAC,EAAI,GAAKC,CAC/H,EACD,cAAe,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACpC,IAAIC,EAAIJ,EAAa,EAAOK,GAAI,EAAOC,GAAIH,EAC3C,OAAIF,GAAK,EAAUC,GAAQD,GAAK,IAAM,EAAUC,EAAIC,GAAQE,KAAGA,GAAI,EAAI,IACnEC,GAAIN,EAAa,EAAEG,CAAC,GAAKG,GAAIH,EAAGC,EAAIC,GAAI,GACvCD,EAAIC,IAAK,EAAIL,EAAa,GAAKA,EAAa,EAAEG,EAAIG,EAAC,EACjD,EAAEA,GAAIN,EAAa,EAAE,EAAG,IAAMC,GAAK,EAAE,EAAID,EAAa,GAAGC,EAAI,EAAIG,IAAM,EAAIJ,EAAa,GAAKK,EAAC,GAAKH,EAC7G,EACD,eAAgB,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACrC,IAAIC,EAAIJ,EAAa,EAAOK,GAAI,EAAOC,GAAIH,EAC3C,OAAIF,GAAK,EAAUC,GACdD,GAAK,IAAM,EAAUC,EAAIC,GACzBE,KAAGA,GAAI,EAAI,IACZC,GAAIN,EAAa,EAAEG,CAAC,GAAKG,GAAIH,EAAGC,EAAIC,GAAI,GACvCD,EAAIC,IAAK,EAAIL,EAAa,GAAKA,EAAa,EAAEG,EAAIG,EAAC,EACjDA,GAAIN,EAAa,EAAE,EAAG,IAAMC,CAAC,EAAID,EAAa,GAAGC,EAAI,EAAIG,IAAM,EAAIJ,EAAa,GAAKK,EAAC,EAAIF,EAAID,EACxG,EACD,iBAAkB,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACvC,IAAIC,EAAIJ,EAAa,EAAOK,GAAI,EAAOC,GAAIH,EAC3C,OAAIF,GAAK,EAAUC,GACdD,GAAK,EAAI,IAAM,EAAUC,EAAIC,GAC7BE,KAAGA,GAAI,GAAK,GAAK,MAClBC,GAAIN,EAAa,EAAEG,CAAC,GAAKG,GAAIH,EAAGC,EAAIC,GAAI,GACvCD,EAAIC,IAAK,EAAIL,EAAa,GAAKA,EAAa,EAAEG,EAAIG,EAAC,EACpDL,EAAI,EAAU,KAAOK,GAAIN,EAAa,EAAE,EAAG,IAAMC,GAAK,EAAE,EAAID,EAAa,GAAGC,EAAI,EAAIG,IAAM,EAAIJ,EAAa,GAAKK,EAAC,GAAKH,EACnHI,GAAIN,EAAa,EAAE,EAAG,KAAOC,GAAK,EAAE,EAAID,EAAa,GAAGC,EAAI,EAAIG,IAAM,EAAIJ,EAAa,GAAKK,EAAC,EAAI,GAAKF,EAAID,EACpH,EACD,WAAY,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAGC,EAAG,CACpC,OAAAA,EAAIA,GAAKJ,EAAa,EACfG,GAAKF,GAAK,GAAKA,IAAMG,EAAI,GAAKH,EAAIG,GAAKF,CACjD,EACD,YAAa,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAGC,EAAG,CACrC,OAAAA,EAAIA,GAAKJ,EAAa,EACfG,IAAMF,EAAIA,EAAI,EAAI,GAAKA,IAAMG,EAAI,GAAKH,EAAIG,GAAK,GAAKF,CAC9D,EACD,cAAe,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAGC,EAAG,CACvC,OAAAA,EAAIA,GAAKJ,EAAa,GACbC,GAAK,EAAI,GAAK,EAAKE,EAAI,GAAKF,EAAIA,KAAOG,GAAM,OAAU,GAAKH,EAAIG,IAAMF,EAAIC,EAAI,IAAMF,GAAK,GAAKA,KAAOG,GAAM,OAAU,GAAKH,EAAIG,GAAK,GAAKF,CACpJ,EACD,aAAc,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACnC,OAAOA,EAAI,KAAK,cAAc9B,EAAG,EAAI4B,EAAG,EAAGE,EAAG,CAAC,EAAID,CACtD,EACD,cAAe,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACpC,IAAII,EAAI,OACR,OAAKN,GAAK,GAAM,EAAI,KACTE,GAAKI,EAAIN,EAAIA,GAAKC,EAClBD,EAAK,EAAI,KACTE,GAAKI,GAAKN,GAAM,IAAM,MAASA,EAAI,KAAOC,EAC1CD,EAAK,IAAM,KACXE,GAAKI,GAAKN,GAAM,KAAO,MAASA,EAAI,OAASC,EAE7CC,GAAKI,GAAKN,GAAM,MAAQ,MAASA,EAAI,SAAWC,CAE9D,EACD,gBAAiB,SAAU7B,EAAG4B,EAAGC,EAAGC,EAAG,EAAG,CACtC,OAAQF,EAAI,EAAI,EAAK,KAAK,aAAa5B,EAAG4B,EAAI,EAAG,EAAGE,EAAG,CAAC,EAAI,GAAKD,EAAI,KAAK,cAAc7B,EAAG4B,EAAI,EAAI,EAAG,EAAGE,EAAG,CAAC,EAAI,GAAKA,EAAI,GAAKD,CAClI,CACjB,CAiCA,IACYM,EAAa,UAAY,CACzB,IAAIC,EAAkB,oBAClBC,EAAY,IACZC,EAAY,GACZC,EAAiB,aACjBC,EAAgB,YAChBC,EAAc,CAAA,EACdC,EAAQ5C,EAAc,KACtB6C,GAAa,CACb,wBAAyB,GACzB,YAAa,GACb,YAAa,GACb,SAAU,GACV,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,QAAS,GACT,MAAO,GACP,QAAS,GACT,OAAQ,GACR,OAAQ,GACR,KAAM,EACtB,EAEY,SAASC,IAAS,CACd,IAAIC,EAAKC,EAAaC,EAAMlE,EAAMmE,EAASC,EAAOnC,EAAS,UAAU,IAAM,CAAE,EACzE5B,EAAI,EACJgE,EAAS,UAAU7E,EAAQ,GAC3B8E,EAAO,GAqBX,IAlBIT,EAAM5B,CAAM,GAAK1C,EAAM,IACvB+E,EAAOrC,EACPA,EAAS,UAAU,IAAM,GAEzB5B,EAAI,GAIJwD,EAAM5B,CAAM,GAAK1C,EAAM,GAAK,CAACsE,EAAM5B,CAAM,GAAK1C,EAAM,IACpD0C,EAAS,CAAA,GAIToC,IAAWhE,IACX4B,EAASsC,EACT,EAAElE,GAGCA,EAAIgE,EAAQhE,IAEf,IAAK8D,EAAU,UAAU9D,KAAO,KAE5B,IAAKL,KAAQmE,EACTH,EAAM/B,EAAOjC,GACbkE,EAAOC,EAAQnE,GAGXiC,IAAWiC,IAKXI,GAAQJ,IAASM,EAAcN,CAAI,IAAMD,EAAchD,EAAc,IAAIiD,CAAI,KACzED,GACAA,EAAc,GACdG,EAAQJ,GAAO/C,EAAc,IAAI+C,CAAG,EAAIA,EAAM,IAG9CI,EAAQJ,GAAOQ,EAAcR,CAAG,EAAIA,EAAM,CAAA,EAI9C/B,EAAOjC,GAAQ+D,GAAOO,EAAMF,EAAOF,CAAI,GAGhCA,IAAS7E,IAChB4C,EAAOjC,GAAQkE,IAO/B,OAAOjC,CAEvB,CACY,SAASwC,EAAQlC,EAAMC,EAAKkC,EAAW,CACnC,QAASrE,EAAIqE,GAAa,EAAGrE,EAAImC,EAAIhD,EAAQ,GAAIa,IAC7C,GAAImC,EAAInC,KAAOkC,EACX,OAAOlC,EACf,MAAO,EACV,CAED,SAASsE,EAAWjC,EAAK,CACrB,OAAOmB,EAAMnB,CAAG,GAAKnD,EAAM,CAE3C,CACY,SAASqF,GAAclC,EAAK,CACxB,QAAS1C,KAAQ0C,EACb,MAAO,GACX,MAAO,EAEvB,CACY,SAAS8B,EAAc9B,EAAK,CACxB,GAAI,CAACA,GAAOmB,EAAMnB,CAAG,GAAKnD,EAAM,EAC5B,MAAO,GAEX,IAAIsF,EACAtD,EAAQ/B,EAAQ,EAChBsF,EAAiB,OAAOvD,GAAO,eAC/BwD,EAAoBD,EAAe,KAAKpC,EAAK,aAAa,EAC1DsC,EAAmBtC,EAAI,aAAeA,EAAI,YAAYnB,IAAUuD,EAAe,KAAKpC,EAAI,YAAYnB,GAAQ,eAAe,EAE/H,GAAImB,EAAI,aAAe,CAACqC,GAAqB,CAACC,EAC1C,MAAO,GAIX,IAAKH,KAAOnC,EAAK,CAEjB,OAAOmB,EAAMgB,CAAG,GAAKtF,EAAM,GAAKuF,EAAe,KAAKpC,EAAKmC,CAAG,CAE5E,CACY,SAASI,GAAKvC,EAAKwC,EAAU,CACzB,IAAI7E,EAAI,EAER,GAAI8E,EAAYzC,CAAG,EACf,KAAOrC,EAAIqC,EAAIlD,EAAQ,IACf0F,EAAS,KAAKxC,EAAIrC,GAAIA,EAAGqC,EAAIrC,EAAE,IAAM,GADlBA,IACvB,KAKJ,KAAKA,KAAKqC,EACN,GAAIwC,EAAS,KAAKxC,EAAIrC,GAAIA,EAAGqC,EAAIrC,EAAE,IAAM,GACrC,MAIZ,OAAOqC,CAEvB,CACY,SAASyC,EAAYzC,EAAK,CACtB,IAAI2B,EAAS,CAAC,CAAC3B,GAAO,CAAClD,EAAQ,CAAC,IAAKkD,GAAOA,EAAIlD,EAAQ,GACpDuD,EAAIc,EAAMnB,CAAG,EACjB,OAAOiC,EAAW5B,CAAC,EAAI,GAASA,GAAKxD,EAAM,GAAK8E,IAAW,GAAKR,EAAMQ,CAAM,GAAK9E,EAAM,GAAK8E,EAAS,GAAMA,EAAS,KAAM3B,CAC7H,CAED,SAAS0C,EAAiBC,EAAO,CAC7B,IAAIC,EAASD,EAAM,MAAM9B,CAAc,GAAK,CAAA,EAC5C,OAAO+B,EAAO,KAAK9B,CAAS,CAC/B,CAED,SAAS+B,GAAQC,EAAMC,EAAU,CAI7B,QAHIC,GAAYF,EAAK,YAAcpG,IAAU,iBAAiBqG,CAAQ,GAAK,GACvEpF,EAAIqF,EAASlG,EAAQ,GAElBa,KACH,GAAIqF,EAASrF,IAAMmF,EACf,MAAO,GAEf,MAAO,EACV,CAED,SAASG,EAAsBC,EAAIC,EAAUC,EAAO,CAChD,GAAI7E,EAAc,IAAI6E,CAAK,EACvB,QAASzF,EAAI,EAAGA,EAAIyF,EAAMtG,EAAQ,GAAIa,IAClCsF,EAAsBC,EAAIC,EAAUC,EAAMzF,EAAE,OAE3CwD,EAAMiC,CAAK,GAAKvG,EAAM,EAC3BqG,EAAG,mBAAmBC,EAAUC,CAAK,EAErCF,EAAG,sBAAsBC,EAAUC,EAAM,SAAWA,EAAQA,EAAM,EAAE,CAC3E,CAED,SAASC,GAAUH,EAAI9E,EAAMkF,EAAK,CAC9B,GAAI,CACIJ,EAAGpG,EAAQ,GAAGsB,KAAUzB,IACxBuG,EAAGpG,EAAQ,GAAGsB,GAAQmF,GAAYnF,EAAMkF,CAAG,EACnE,MAAkB,CAAa,CAClB,CAED,SAASC,GAAYnF,EAAMkF,EAAK,CAC5B,MAAI,CAAClC,GAAWhD,EAAK,YAAW,IAAO+C,EAAMmC,CAAG,GAAKzG,EAAM,IACvDyG,GAAO,MACJA,CACV,CAED,SAASE,EAAsBC,EAASC,EAAa,CACjD,IAAIC,EACAC,EACAF,IAAgB,IAChBD,EAAQ,EAAE,OAAO,EAAG,CAAC,EACrBA,EAAQ,EAAE3G,EAAQ,GAAK,GACvB8G,EAAWH,EAAQ,EAAE,GACrBI,EAAQJ,EAAQ,GAAIG,EAAS,MAAOA,EAAS,SAAUA,EAAS,OAAQA,EAAS,SAAU,EAAI,IAG/FD,EAAQ5B,EAAQ0B,EAASvC,CAAW,EAChCyC,EAAQ,IACRzC,EAAY,OAAOyC,EAAO,CAAC,EAEtC,CAED,SAASG,GAAkBZ,EAAI9E,EAAMuE,EAAO,CACpCvE,IAAS4C,GAAkB5C,IAAS6C,EACpCiC,EAAG9E,GAAQuE,EAEXU,GAAUH,EAAI9E,EAAMuE,CAAK,CAChC,CAED,SAASkB,EAAQX,EAAIa,EAAOtC,EAASuC,EAAQC,EAAUC,EAAgB,CACnE,IAAIC,EAAarC,EAAcL,CAAO,EAClC2C,EAAO,CAAA,EACPC,EAAK,CAAA,EACL1G,EAAI,EACJwE,EACAsB,GAEAa,GACAC,GACAC,GACAC,GAiBJ,IAhBIN,GACAH,EAASvC,EAAQ,OACTA,EAAQ,MAChB6C,GAAW7C,EAAQ,SACnB8C,GAAO9C,EAAQ,KACf+C,GAAgB/C,EAAQ,cACxBwC,EAAWxC,EAAQ,SACnBgD,GAAWhD,EAAQ,UAGnBgD,GAAWhD,EACf+C,GAAgBA,IAAiB,GACjCC,GAAWA,IAAY,IACvBT,EAASA,GAAU,QACnBE,EAAiBA,GAAkB,GAE5BvG,EAAIuD,EAAYpE,EAAQ,GAAIa,IAC/B,GAAIuD,EAAYvD,GAAG,KAAOuF,EAAI,CAC1BO,GAAUvC,EAAYvD,GACtB,KACH,CAGA8F,KACDA,GAAU,CACN,GAAIP,EACJ,EAAG,CAAE,CAC7B,EACoBhC,EAAY,KAAKuC,EAAO,GAG5B,IAAKtB,KAAO4B,EACJ5B,IAAQnB,GAAkBmB,IAAQlB,EAClCmD,EAAKjC,GAAOe,EAAGf,GAEfiC,EAAKjC,GAAON,EAAWqB,CAAE,EAAE,IAAIf,CAAG,EAG1C,IAAKA,KAAOiC,EACJA,EAAKjC,KAAS4B,EAAM5B,IAAQ4B,EAAM5B,KAASxF,IAC3C0H,EAAGlC,GAAO4B,EAAM5B,IAGxB,GAAKD,GAAcmC,CAAE,EA4EZH,GACLV,EAAsBC,EAAO,MA7ET,CACpB,IAAIiB,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAAOjB,EAAiB,EAAInC,EAAQqD,GAAM3B,GAAQ,CAAC,EACnD2B,GAAO,CACP,MAAOf,EACP,SAAUF,EAAa1C,EAAUgD,GACjC,OAAQT,EACR,SAAUC,CAClC,EAMoB,GALIkB,KAAS,KACTA,GAAO1B,GAAQ,EAAE3G,EAAQ,GACzB2G,GAAQ,EAAE,KAAK2B,EAAI,GAGnBD,KAAS,EACT,GAAIV,GAAW,EACXO,GAAYzG,EAAc,MAC1B0G,GAAQ,UAAY,CAChBP,GAAUnG,EAAc,MACxB2G,GAAWR,GAAUM,GACrBL,GAAMS,GAAK,MAAQF,IAAWT,GAC9BG,GAAU,GAAM3E,EAAK,IAAI,EAAG+E,GAAYP,GAAWC,EAAO,EAAID,IAAa,GAE3E,IAAKtC,KAAOkC,EACRQ,GAAU,WAAWT,EAAKjC,EAAI,EAC9B2C,GAAQ,WAAWT,EAAGlC,EAAI,EAC1B4C,IAAYD,GAAQD,IAAW1E,GAAOqE,GAAcrC,IAAQ6B,GAAQY,GAASA,GAAUH,GAAU,EAAG,EAAGA,EAAQ,EAAII,GACnHf,GAAkBZ,EAAIf,EAAK4C,EAAQ,EAC/B9C,EAAWsC,EAAI,GACfA,GAAKQ,GAAU,CACX,KAAM7B,EACN,KAAMf,EACN,MAAO0C,GACP,IAAKE,GACL,IAAKD,GACL,IAAKF,GACL,QAAS,CACL,OAAQZ,EACR,eAAgBQ,GAChB,SAAUC,GACV,SAAUR,EACV,KAAMM,EACT,EACD,UAAWS,EACvD,CAAyC,EAIL/C,EAAWqC,EAAQ,GACnBA,GAAS,CAAA,EAAIM,GAAS3E,EAAK,IAAI,EAAGwE,GAAWS,EAAO,CAAC,EAErDP,IACAnB,EAAsBC,EAAO,EACzBxB,EAAWgC,CAAQ,GACnBA,KAGJmB,GAAK,MAAQ7G,EAAc,IAAK,EAAC0G,EAAK,CAC1E,EAC4BG,GAAK,MAAQ7G,EAAc,IAAK,EAAC0G,EAAK,MAErC,CACD,IAAK9C,KAAOkC,EACRP,GAAkBZ,EAAIf,EAAKkC,EAAGlC,EAAI,EACtCqB,EAAsBC,EAAO,CAChC,CAER,CAGJ,CAED,SAAS4B,GAAKnC,EAAIoC,EAAQC,EAAW,CAKjC,QAJI9B,EACA2B,EACAjD,EACAxE,EAAI,EACDA,EAAIuD,EAAYpE,EAAQ,GAAIa,IAE/B,GADA8F,EAAUvC,EAAYvD,GAClB8F,EAAQ,KAAOP,EAAI,CACnB,GAAIO,EAAQ,EAAE3G,EAAQ,GAAK,EAAG,CAM1B,GALAsI,EAAO3B,EAAQ,EAAE,GACjB2B,EAAK,KAAO,GACZ7G,EAAc,IAAG,EAAG6G,EAAK,KAAK,EAC9B3B,EAAQ,EAAE,OAAO,EAAG,CAAC,EAEjB8B,EACA,IAAKpD,KAAOiD,EAAK,MACbtB,GAAkBZ,EAAIf,EAAKiD,EAAK,MAAMjD,EAAI,EAE9CmD,EACA7B,EAAQ,EAAI,GAEZD,EAAsBC,EAAS,EAAK,CAC3C,CACD,KACH,CAER,CAED,SAAS+B,GAAiBtC,EAAI,CAC1B,MAAO,CAAC,EAAEA,EAAGpG,EAAQ,KAAOoG,EAAGpG,EAAQ,KAAOoG,EAAG,eAAc,EAAGpG,EAAQ,GAC7E,CAED,SAAS+E,EAAWkB,EAAU,CAC1B,GAAI,UAAUjG,EAAQ,KAAO,EACzB,OAAO,KAEX,IAAI2I,EAAO,IAAI5D,EACX6D,EAAW3C,EACXpF,EAAI,EACJgI,EACAzC,EAEJ,GAAI/B,EAAM4B,CAAQ,GAAKlG,EAAM,EAWzB,IAVA6I,EAAW,CAAA,EACP3C,EAAS,OAAO,CAAC,IAAM,KACvBG,EAAKxG,GAAS,cAAc,KAAK,EACjCwG,EAAG,UAAYH,EACf4C,EAAOzC,EAAG,UAGVyC,EAAOjJ,GAAS,iBAAiBqG,CAAQ,EAGtCpF,EAAIgI,EAAK7I,EAAQ,GAAIa,IACxB+H,EAAS,KAAKC,EAAKhI,EAAE,EAG7B,GAAI+H,EAAU,CAIV,IAHIvE,EAAMuE,CAAQ,GAAK7I,EAAM,IAAM,CAAC4F,EAAYiD,CAAQ,GAAKA,IAAajJ,GAAUiJ,IAAaA,EAAS,QACtGA,EAAW,CAACA,CAAQ,GAEnB/H,EAAI,EAAGA,EAAI+H,EAAS5I,EAAQ,GAAIa,IACjC8H,EAAK9H,GAAK+H,EAAS/H,GAEvB8H,EAAK3I,EAAQ,GAAK4I,EAAS5I,EAAQ,EACtC,CAED,OAAO2I,CAEvB,CACY,OAAA5D,EAAW/E,EAAQ,GAAK,CAIpB,GAAI,SAAU8I,EAAWC,EAAS,CAC9BD,GAAaA,GAAa7E,GAAW,MAAMF,CAAc,GAAK,CAACE,CAAS,EAExE,IAAI+E,EAAkBF,EAAU9I,EAAQ,GACpCa,EAAI,EACJuF,EACJ,OAAO,KAAK,KAAK,UAAY,CACzBA,EAAK,KACL,GAAI,CACA,GAAIA,EAAG,iBACH,KAAOvF,EAAImI,EAAiBnI,IACxBuF,EAAG,iBAAiB0C,EAAUjI,GAAIkI,CAAO,UAExC3C,EAAG,YACR,KAAOvF,EAAImI,EAAiBnI,IACxBuF,EAAG,YAAY,KAAO0C,EAAUjI,GAAIkI,CAAO,CAE/E,MAA0B,CAAa,CACvC,CAAqB,CACJ,EAED,IAAK,SAAUD,EAAWC,EAAS,CAC/BD,GAAaA,GAAa7E,GAAW,MAAMF,CAAc,GAAK,CAACE,CAAS,EAExE,IAAI+E,EAAkBF,EAAU9I,EAAQ,GACpCa,EAAI,EACJuF,EACJ,OAAO,KAAK,KAAK,UAAY,CACzBA,EAAK,KACL,GAAI,CACA,GAAIA,EAAG,oBACH,KAAOvF,EAAImI,EAAiBnI,IACxBuF,EAAG,oBAAoB0C,EAAUjI,GAAIkI,CAAO,UAE3C3C,EAAG,YACR,KAAOvF,EAAImI,EAAiBnI,IACxBuF,EAAG,YAAY,KAAO0C,EAAUjI,GAAIkI,CAAO,CAE/E,MAA0B,CAAa,CACvC,CAAqB,CACJ,EAED,IAAK,SAAUD,EAAWC,EAAS,CAC/B,OAAAD,GAAaA,GAAa7E,GAAW,MAAMF,CAAc,GAAK,CAACE,CAAS,EACjE,KAAK,KAAK,UAAY,CACzB,IAAImC,EAAKrB,EAAW,IAAI,EACxBA,EAAW,KAAK+D,EAAW,SAAUjI,EAAGoI,EAAc,CAClD,IAAIC,EAAa,SAAUC,EAAG,CAC1BJ,EAAQ,KAAK,KAAMI,CAAC,EACpB/C,EAAG,IAAI6C,EAAcC,CAAU,CAC/D,EAC4B9C,EAAG,GAAG6C,EAAcC,CAAU,CAC1D,CAAyB,CACzB,CAAqB,CACJ,EAED,QAAS,SAAUJ,EAAW,CAC1B,IAAI1C,EACAhE,EACJ,OAAO,KAAK,KAAK,UAAY,CACzBgE,EAAK,KACDxG,GAAS,aACTwC,EAAQxC,GAAS,YAAY,YAAY,EACzCwC,EAAM,UAAU0G,EAAW,GAAM,EAAK,EACtC1C,EAAG,cAAchE,CAAK,GAGtBgE,EAAG,UAAU,KAAO0C,CAAS,CAEzD,CAAqB,CACJ,EAID,OAAQ,SAAUxC,EAAO,CACrB,OAAO,KAAK,KAAK,UAAY,CAAEH,EAAsB,KAAM,YAAaG,CAAK,CAAE,CAAE,CACpF,EAED,QAAS,SAAUA,EAAO,CACtB,OAAO,KAAK,KAAK,UAAY,CAAEH,EAAsB,KAAM,aAAcG,CAAK,CAAE,CAAE,CACrF,EAED,OAAQ,SAAUA,EAAO,CACrB,OAAO,KAAK,KAAK,UAAY,CAAEH,EAAsB,KAAM,cAAeG,CAAK,CAAE,CAAE,CACtF,EAED,MAAO,SAAUA,EAAO,CACpB,OAAO,KAAK,KAAK,UAAY,CAAEH,EAAsB,KAAM,WAAYG,CAAK,CAAE,CAAE,CACnF,EAED,OAAQ,UAAY,CAChB,OAAO,KAAK,KAAK,UAAY,CACzB,IAAIF,EAAK,KACLgD,EAAahD,EAAG,WAChBgD,GAAc,MACdA,EAAW,YAAYhD,CAAE,CACrD,CAAqB,CACJ,EAED,OAAQ,UAAY,CAChB,IAAIiD,EAAU,CAAA,EACVxI,EACAuF,EACAkD,EAQJ,IANA,KAAK,KAAK,UAAY,CAClBA,EAAS,KAAK,WACVrE,EAAQqE,EAAQD,CAAO,IAAM,IAC7BA,EAAQ,KAAKC,CAAM,CAC/C,CAAqB,EAEIzI,EAAI,EAAGA,EAAIwI,EAAQrJ,EAAQ,GAAIa,IAAK,CAGrC,IAFAuF,EAAKiD,EAAQxI,GACbyI,EAASlD,EAAG,WACLA,EAAG,YACNkD,EAAO,aAAalD,EAAG,WAAYA,CAAE,EACzCkD,EAAO,YAAYlD,CAAE,CACxB,CAED,OAAO,IACV,EAED,QAAS,SAAUmD,EAAa,CAO5B,QANI1I,EACA2I,EAAQ,KACRC,EAAU1E,EAAWwE,CAAW,EAAE,GAClCG,EAAUD,EACVH,EAASE,EAAM,GAAG,WAClBG,EAAkBH,EAAM,GAAG,gBACxBE,EAAQ,WAAW1J,EAAQ,GAAK,GACnC0J,EAAUA,EAAQ,WAAW,GAEjC,IAAK7I,EAAI,EAAG2I,EAAMxJ,EAAQ,GAAKa,EAAG6I,EAAQ,aAAeF,EAAM,IAAM3I,IACjE6I,EAAQ,YAAYF,EAAM3I,EAAE,EAEhC,IAAI+I,EAAcD,EAAkBA,EAAgB,YAAcL,EAAO,WACzE,OAAAA,EAAO,aAAaG,EAASG,CAAW,EAEjC,IACV,EAED,UAAW,SAAUL,EAAa,CAC9B,OAAO,KAAK,KAAK,UAAY,CACzB,IAAInD,EAAKrB,EAAW,IAAI,EACpB8E,EAAWzD,EAAG,WAEdyD,EAAS7J,EAAQ,GACjB6J,EAAS,QAAQN,CAAW,EAE5BnD,EAAG,OAAOmD,CAAW,CACjD,CAAqB,CACJ,EAED,KAAM,SAAUA,EAAa,CACzB,OAAO,KAAK,KAAK,UAAY,CAAExE,EAAW,IAAI,EAAE,QAAQwE,CAAW,CAAE,CAAE,CAC1E,EAKD,IAAK,SAAUO,EAAQtD,EAAK,CACxB,IAAIJ,EACAf,EACA0E,EACAC,EAAcrK,EAAO,iBACzB,OAAI0E,EAAMyF,CAAM,GAAK/J,EAAM,EACnByG,IAAQ3G,GACRuG,EAAK,KAAK,GACV2D,EAAWC,EAAcA,EAAY5D,EAAI,IAAI,EAAIA,EAAG,aAAa0D,GAG1DE,EAAcD,GAAY,KAAOA,EAAS,iBAAiBD,CAAM,EAAI1D,EAAGpG,EAAQ,GAAG8J,GAAUC,GAG7F,KAAK,KAAK,UAAY,CACzBxD,GAAU,KAAMuD,EAAQtD,CAAG,CAC3D,CAA6B,EAIE,KAAK,KAAK,UAAY,CACzB,IAAKnB,KAAOyE,EACRvD,GAAU,KAAMlB,EAAKyE,EAAOzE,EAAI,CAChE,CAAyB,CAER,EAED,SAAU,SAAU4E,EAAW,CAK3B,QAJIjE,EAAMnF,EAAI,EACVqJ,EAAoBlG,EAAYiG,EAAYjG,EAC5CmG,EAEInE,EAAO,KAAKnF,MAAO,CAEvB,GADAsJ,EAAYnE,EAAK,UACbmE,GAAaA,EAAU,SAASF,CAAS,EACzC,MAAO,GACN,GAAIjE,EAAK,WAAa,IAAMhC,EAAY4B,EAAiBI,EAAK,UAAY/B,CAAS,EAAID,GAAW,QAAQkG,CAAiB,EAAI,GAChI,MAAO,EACd,CAED,MAAO,EACV,EAED,SAAU,SAAUD,EAAW,CAC3B,IAAIG,EACApE,EACAqE,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7J,EAAI,EACJC,EAAI,EAER,GAAImJ,GAGA,IAFAG,EAAUH,EAAU,MAAMlG,CAAc,GAAK,CAAA,EAErCiC,EAAO,KAAKnF,MAKhB,GAJA6J,EAAe1E,EAAK,UAChByE,IAAqB5K,IACrB4K,EAAmBC,IAAiB7K,GAEpC4K,EACA,KAAQF,EAAQH,EAAQtJ,MACpB4J,EAAa,IAAIH,CAAK,UAG1BD,EAAWtE,EAAK,UAAY/B,EAC5BoG,EAAMrE,EAAK,WAAa,GAAMhC,EAAY4B,EAAiB0E,CAAQ,EAAItG,EAEnEqG,EAAK,CACL,KAAQE,EAAQH,EAAQtJ,MAChBuJ,EAAI,QAAQrG,EAAYuG,EAAQvG,CAAS,EAAI,IAC7CqG,GAAOE,EAAQvG,GAEvBwG,EAAa5E,EAAiByE,CAAG,EAC7BC,IAAaE,IACbxE,EAAK,UAAYwE,EACxB,EAKb,OAAO,IACV,EAED,YAAa,SAAUP,EAAW,CAC9B,IAAIG,EACApE,EACAqE,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7J,EAAI,EACJC,EAAI,EAER,GAAImJ,GAGA,IAFAG,EAAUH,EAAU,MAAMlG,CAAc,GAAK,CAAA,EAErCiC,EAAO,KAAKnF,MAKhB,GAJA6J,EAAe1E,EAAK,UAChByE,IAAqB5K,IACrB4K,EAAmBC,IAAiB7K,GAEpC4K,EACA,KAAQF,EAAQH,EAAQtJ,MACpB4J,EAAa,OAAOH,CAAK,UAG7BD,EAAWtE,EAAK,UAAY/B,EAC5BoG,EAAMrE,EAAK,WAAa,GAAMhC,EAAY4B,EAAiB0E,CAAQ,EAAItG,EAEnEqG,EAAK,CACL,KAAQE,EAAQH,EAAQtJ,MACpB,KAAOuJ,EAAI,QAAQrG,EAAYuG,EAAQvG,CAAS,EAAI,IAChDqG,EAAMA,EAAI,QAAQrG,EAAYuG,EAAQvG,EAAWA,CAAS,EAElEwG,EAAa5E,EAAiByE,CAAG,EAC7BC,IAAaE,IACbxE,EAAK,UAAYwE,EACxB,EAKb,OAAO,IACV,EAED,KAAM,UAAY,CACd,OAAO,KAAK,KAAK,UAAY,CAAE,KAAKxK,EAAQ,GAAG,QAAU,MAAO,CAAE,CACrE,EAED,KAAM,UAAY,CACd,OAAO,KAAK,KAAK,UAAY,CAAE,KAAKA,EAAQ,GAAG,QAAU,OAAQ,CAAE,CACtE,EAED,KAAM,SAAU2K,EAAU9E,EAAO,CAG7B,QAFIhF,EAAI,EACJuF,EACGA,EAAK,KAAKvF,MAAM,CACnB,GAAIgF,IAAUhG,EACV,OAAOuG,EAAG,aAAauE,CAAQ,EACnCvE,EAAG,aAAauE,EAAU9E,CAAK,CAClC,CACD,OAAO,IACV,EAED,WAAY,SAAU8E,EAAU,CAC5B,OAAO,KAAK,KAAK,UAAY,CAAE,KAAK,gBAAgBA,CAAQ,CAAE,CAAE,CACnE,EAED,OAAQ,UAAY,CAChB,IAAIvE,EAAK,KAAK,GACVwE,EAAOxE,EAAGpG,EAAQ,KAAI,EACtB6K,EAAalL,EAAO,aAAeC,GAAS,gBAAgBsE,GAC5D4G,EAAYnL,EAAO,aAAeC,GAAS,gBAAgBuE,GAC/D,MAAO,CACH,IAAKyG,EAAK,IAAME,EAChB,KAAMF,EAAK,KAAOC,CAC1C,CACiB,EAED,SAAU,UAAY,CAClB,IAAIzE,EAAK,KAAK,GACd,MAAO,CACH,IAAKA,EAAG,UACR,KAAMA,EAAG,UACjC,CACiB,EAED,WAAY,SAAUP,EAAO,CAGzB,QAFIhF,EAAI,EACJuF,EACGA,EAAK,KAAKvF,MAAM,CACnB,GAAIgF,IAAUhG,EACV,OAAOuG,EAAGlC,GACdkC,EAAGlC,GAAkB2B,CACxB,CACD,OAAO,IACV,EAED,UAAW,SAAUA,EAAO,CAGxB,QAFIhF,EAAI,EACJuF,EACGA,EAAK,KAAKvF,MAAM,CACnB,GAAIgF,IAAUhG,EACV,OAAOuG,EAAGjC,GACdiC,EAAGjC,GAAiB0B,CACvB,CACD,OAAO,IACV,EAED,IAAK,SAAUA,EAAO,CAClB,IAAIO,EAAK,KAAK,GACd,OAAKP,GAELO,EAAG,MAAQP,EACJ,MAFIO,EAAG,KAGjB,EAKD,MAAO,UAAY,CACf,OAAO,KAAK,GAAG,CAAC,CACnB,EAED,KAAM,UAAY,CACd,OAAO,KAAK,GAAG,EAAE,CACpB,EAED,GAAI,SAAUS,EAAO,CACjB,OAAO9B,EAAW,KAAK8B,GAAS,EAAIA,EAAQ,KAAK7G,EAAQ,GAAK6G,EAAM,CACvE,EAED,KAAM,SAAUZ,EAAU,CACtB,IAAI8E,EAAW,CAAA,EACXlK,EACJ,YAAK,KAAK,UAAY,CAClB,IAAIuF,EAAK,KACL4E,EAAK5E,EAAG,iBAAiBH,CAAQ,EACrC,IAAKpF,EAAI,EAAGA,EAAImK,EAAGhL,EAAQ,GAAIa,IAC3BkK,EAAS,KAAKC,EAAGnK,EAAE,CAC/C,CAAqB,EACMkE,EAAWgG,CAAQ,CAC7B,EAED,SAAU,SAAU9E,EAAU,CAC1B,IAAI8E,EAAW,CAAA,EACX3E,EACA4E,EACAnK,EAEJ,YAAK,KAAK,UAAY,CAElB,IADAmK,EAAK,KAAK,SACLnK,EAAI,EAAGA,EAAImK,EAAGhL,EAAQ,GAAIa,IAC3BuF,EAAK4E,EAAGnK,GACJoF,GACKG,EAAG,SAAWA,EAAG,QAAQH,CAAQ,GAAMF,GAAQK,EAAIH,CAAQ,IAC5D8E,EAAS,KAAK3E,CAAE,EAGpB2E,EAAS,KAAK3E,CAAE,CAEhD,CAAqB,EACMrB,EAAWgG,CAAQ,CAC7B,EAED,OAAQ,SAAU9E,EAAU,CACxB,IAAIoD,EAAU,CAAA,EACVC,EACJ,YAAK,KAAK,UAAY,CAClBA,EAAS,KAAK,YACV,CAAArD,GAAWlB,EAAWuE,CAAM,EAAE,GAAGrD,CAAQ,IACzCoD,EAAQ,KAAKC,CAAM,CAC/C,CAAqB,EACMvE,EAAWsE,CAAO,CAC5B,EAED,GAAI,SAAUpD,EAAU,CAEpB,IAAIG,EACAvF,EACJ,IAAKA,EAAI,EAAGA,EAAI,KAAKb,EAAQ,GAAIa,IAAK,CAElC,GADAuF,EAAK,KAAKvF,GACNoF,IAAa,WACb,OAAOyC,GAAiBtC,CAAE,EAC9B,GAAIH,IAAa,UACb,MAAO,CAACyC,GAAiBtC,CAAE,EAC/B,GAAKA,EAAG,SAAWA,EAAG,QAAQH,CAAQ,GAAMF,GAAQK,EAAIH,CAAQ,EAC5D,MAAO,EACd,CACD,MAAO,EACV,EAED,SAAU,UAAY,CAClB,IAAI4D,EAAW,CAAA,EACXoB,EACApK,EAEJ,YAAK,KAAK,UAAY,CAElB,IADAoK,EAAS,KAAK,WACTpK,EAAI,EAAGA,EAAIoK,EAAOjL,EAAQ,GAAIa,IAC/BgJ,EAAS,KAAKoB,EAAOpK,EAAE,CACnD,CAAqB,EAEMkE,EAAW8E,CAAQ,CAC7B,EAED,KAAM,SAAUnE,EAAU,CACtB,OAAOD,GAAK,KAAMC,CAAQ,CAC7B,EAKD,QAAS,SAAUuB,EAAOU,EAAUT,EAAQC,EAAU,CAClD,OAAO,KAAK,KAAK,UAAY,CAAEJ,EAAQ,KAAME,EAAOU,EAAUT,EAAQC,CAAQ,CAAI,CAAA,CACrF,EAED,KAAM,SAAUqB,EAAQ0C,EAAM,CAC1B,OAAO,KAAK,KAAK,UAAY,CAAE3C,GAAK,KAAMC,EAAQ0C,CAAI,CAAE,CAAE,CAC7D,CACjB,EAEY3G,GAAOQ,EAAY,CACf,OAAQR,GACR,QAASU,EACT,cAAeG,GACf,cAAeJ,EACf,KAAMS,EACtB,CAAa,EAEMV,CACnB,IACYoG,GAAa,UAAY,CACzB,IAAIC,EAAW,CAAA,EACXC,EAA0B,wBAY9B,OAAO,SAAU5I,EAAQ6I,EAAU,CAC/B,IAAIC,EAAS,UAAUvL,EAAQ,GAC/B,GAAIuL,EAAS,EAET,OAAOH,EAGP,GAAIE,EAEA7I,EAAO4I,GAA2BC,EAClCF,EAAS,KAAK3I,CAAM,MAEnB,CACD,IAAIoE,EAAQpF,EAAc,IAAIgB,EAAQ2I,CAAQ,EAC9C,GAAIvE,EAAQ,GACR,GAAI0E,EAAS,EAET,OAAO9I,EAAO4I,GACdD,EAAS,OAAOvE,EAAO,CAAC,MAIxB,QAAOuE,EAASvE,GAAOwE,EAGlC,CAER,CACb,IACYG,GAAU,UAAY,CACtB,IAAIC,EACAC,EACAC,EACAC,EAAqB,CAAA,EACrBC,EAAmB,UAAY,CAC/B,IAAIC,EAAOrK,EAAc,KACrBsK,EAAwB,CACxBhM,EAAM,EACNA,EAAM,EACNA,EAAM,EACNA,EAAM,EACNA,EAAM,EACNA,EAAM,EACNA,EAAM,CAC1B,EACoBiM,GAAyB,IACzBC,EAAsC,IACtCC,GAAyB,CAACnM,EAAM,EAAGA,EAAM,CAAC,EAC1CoM,EAAsBpM,EAAM,EAC5BqM,EAA2B,CAACrM,EAAM,EAAGA,EAAM,CAAC,EAC5CsM,GAAsB,CAAC,GAAMtM,EAAM,CAAC,EACpCuM,EAAuB,CAAC,GAAOvM,EAAM,CAAC,EACtCwM,GAAmB,CAAC,KAAM,CAACxM,EAAM,EAAGA,EAAM,CAAC,CAAC,EAC5CyM,GAAuB,CAAC,CAAC,KAAK,EAAG,CAACzM,EAAM,EAAGA,EAAM,EAAGA,EAAM,CAAC,CAAC,EAC5D0M,EAAyB,CAAC,CAAC,QAAS,OAAO,EAAG,CAAC1M,EAAM,EAAGA,EAAM,EAAGA,EAAM,CAAC,CAAC,EACzE2M,GAAsB,wCACtBC,EAAgC,0DAChCC,GAAoC,4BACpCC,GAAkC,kCAClCC,EAA6B,CAC7B,UAAW,CAAC,gBAAiBZ,EAAsB,EACnD,OAAQ,CAAC,OAAQQ,EAAmB,EACpC,gBAAiBL,GACjB,WAAYA,GACZ,aAAcA,GACd,gBAAiBC,EACjB,WAAY,CAAC,KAAMF,CAAwB,EAC3C,mBAAoB,CAAC,GAAID,CAAmB,EAC5C,aAAcK,GACd,yBAA0B,CACtB,qBAAsBF,EACtB,WAAYD,EACf,EACD,iBAAkB,CACd,EAAG,CAAC,SAAUM,CAA6B,EAC3C,EAAG,CAAC,SAAUA,CAA6B,CAC9C,EACD,WAAY,CACR,WAAY,CAAC,OAAQC,EAAiC,EACtD,SAAU,CAAC,QAASC,EAA+B,EACnD,cAAe,CAAC,IAAKV,CAAmB,EACxC,cAAeE,GACf,eAAgBC,EAChB,aAAcD,GACd,WAAYC,CACf,EACD,SAAU,CACN,SAAUA,EACV,UAAWA,EACX,eAAgBG,CACnB,EACD,UAAW,CACP,cAAeF,GACf,0BAA2BA,GAC3B,YAAaA,GACb,cAAeA,GACf,SAAUA,GACV,aAAcA,GACd,kBAAmBA,GACnB,wBAAyBA,GACzB,mBAAoBA,GACpB,qBAAsBA,GACtB,kBAAmBA,GACnB,UAAWA,EACd,CACrB,EACoBQ,EAAU,SAAUC,EAAU,CAC9B,IAAIC,EAAY,SAAU/J,EAAK,CAC3B,IAAImC,EACAmB,EACA0G,EACJ,IAAK7H,KAAOnC,EACJ,CAACA,EAAIlD,EAAQ,KAAKqF,CAAG,IAEzBmB,EAAMtD,EAAImC,GACV6H,EAAUpB,EAAKtF,CAAG,EACd0G,GAAWnN,EAAM,EACjBmD,EAAImC,GAAOmB,EAAIwG,EAAW,EAAI,GACzBE,GAAWnN,EAAM,IACtBmD,EAAImC,GAAO4H,EAAUzG,CAAG,IAEhC,OAAOtD,CAC/B,EACoB,OAAO+J,EAAUnJ,EAAU,OAAO,GAAM,CAAE,EAAEgJ,CAA0B,CAAC,CAC3F,EAEgB,MAAO,CACH,UAAWC,EAAS,EAEpB,UAAWA,EAAQ,EAAI,EAUvB,UAAW,SAAU7J,EAAK8J,EAAUG,EAAaC,EAAS,CACtD,IAAIC,EAAmB,CAAA,EACnBC,EAA2B,CAAA,EAC3BC,EAAazJ,EAAU,OAAO,GAAM,CAAA,EAAIZ,CAAG,EAC3C+B,EAAUnB,EAAU,QACpB0J,EAAa1J,EAAU,cACvB2J,EAAmB,SAAUC,GAAMV,GAAUW,GAAUN,GAAkBC,GAA0BM,GAAc,CACjH,QAAStM,MAAQ0L,GACb,GAAIA,GAAShN,EAAQ,KAAKsB,EAAI,GAAKoM,GAAK1N,EAAQ,KAAKsB,EAAI,EAAG,CACxD,IAAIuM,GAAU,GACVC,GAAS,GACTC,GAAgBf,GAAS1L,IACzB0M,GAAoBlC,EAAKiC,EAAa,EACtCE,GAAoBD,IAAqBjO,EAAM,EAC/CmO,GAAiBzM,EAAc,IAAIsM,EAAa,EAAsBA,GAAlB,CAACA,EAAa,EAClEI,GAAgBR,GAASrM,IACzB8M,GAAYV,GAAKpM,IACjB+M,GAAgBvC,EAAKsC,EAAS,EAC9BE,GAAaV,GAAeA,GAAe,IAAM,GACjDW,GAAQ,eAAkBD,GAAahN,GAAO,wBAC9CkN,GAAqB,CAAA,EACrBC,GAAyB,CAAA,EACzBC,GACAC,GACAC,GACAC,GACAC,GACAjO,GACAC,GACAiO,EAKJ,GAHAZ,GAAgBA,KAAkBtO,EAAY,CAAA,EAAKsO,GAG/CF,IAAqBI,IAAiBtO,EAAM,EAC5CsN,GAAiB/L,IAAQ,GACzBgM,GAAyBhM,IAAQ,GACjCmM,EAAiBW,GAAWL,GAAeI,GAAed,GAAiB/L,IAAOgM,GAAyBhM,IAAOgN,GAAahN,EAAI,EACnIwC,EAAU,KAAK,CAAC4J,GAAML,GAAkBC,EAAwB,EAAG,SAAUzG,GAAOhB,GAAO,CACnF2H,EAAW3H,GAAMvE,GAAK,GACtB,OAAOuE,GAAMvE,GAE7D,CAAyC,UAEI,CAAC2M,GAAmB,CACzB,IAAKpN,GAAI,EAAGA,GAAIqN,GAAclO,EAAQ,GAAIa,KAKtC,GAJAiO,GAAWZ,GAAcrN,IACzBmN,GAAoBlC,EAAKgD,EAAQ,EAEjCF,GAAoBZ,IAAqBjO,EAAM,GAAKkF,EAAQ6J,GAAU/C,CAAqB,IAAM,GAC7F6C,GAMA,IALAJ,GAAmB,KAAKzO,EAAM,CAAC,EAG/B2O,GAA8BI,GAAS,MAAM9C,EAAsB,EACnEyC,GAAyBA,GAAuB,OAAOC,EAA2B,EAC7E5N,GAAI,EAAGA,GAAI4N,GAA4B1O,EAAQ,GAAIc,KAAK,CAIzD,IAFA6N,GAA2CD,GAA4B5N,IAAG,MAAMmL,CAAmC,EACnH4C,GAAkBF,GAAyC,GACtDI,EAAI,EAAGA,EAAIJ,GAAyC3O,EAAQ,GAAI+O,IAEjE,GAAIX,KAAcO,GAAyCI,GAAI,CAC3DlB,GAAU,GACV,KACH,CAEL,GAAIA,GACA,KACP,SAGDW,GAAmB,KAAKM,EAAQ,EAE5BT,KAAkBS,GAAU,CAC5BjB,GAAU,GACV,KACH,CAILA,IACAC,GAASM,KAAcD,GAEnBL,KACAT,GAAiB/L,IAAQ8M,KAEzBQ,GAAoB3J,EAAQkJ,GAAeQ,EAAwC,EAAI,EAAIb,MAC3FR,GAAyBhM,IAAQsN,GAAoBC,GAAkBT,KAEtEjB,GACL,QAAQ,KAAKoB,GAAQ,iCAAmCF,GAAc,YAAa,EAAG,yBAA4BD,GAAY;AAAA,wBAC/FI,GAAmB,KAAK,IAAI,EAAE,YAAa,EAAG,OACxEC,GAAuB,QAAU,EAAI;AAAA,uBAA8BA,GAAuB,KAAK,IAAI,EAAE,MAAMxC,CAAmC,EAAE,KAAK,IAAI,EAAI,MAAQ,GAAG,EAEjL,OAAOyB,GAAKpM,GACf,CACJ,CAEjC,EACwB,OAAAmM,EAAiBF,EAAYP,EAAUI,GAAW,CAAA,EAAIC,EAAkBC,CAAwB,EAU5F,CAACE,EAAWD,CAAU,GAAKJ,GAC3B,QAAQ,KAAK;AAAA,EAA+DxN,EAAO,KAAK,UAAU4N,EAAY,KAAM,CAAC,CAAC,EAEnH,CACH,SAAUF,EACV,UAAWC,CACvC,CACqB,CACJ,CACJ,EAAA,EAKD,SAAS0B,GAA+B,CAC/BtD,IACDA,EAAkB,IAAIuD,EAAyBpD,EAAgB,SAAS,GACvEF,IACDA,EAAyB,IAAIuD,GAAgCxD,CAAe,EACnF,CAOD,SAASuD,EAAyBE,EAAgB,CAC9C,IAAIC,EAAQ,KACRC,GAAc,WACdC,EAAY,SACZC,GAAY,SACZC,EAAc1L,EAAU,MAAM,EAC9B2L,EAAwB3L,EAAU,qDAAqD,EACvF4L,GAAyBD,EAAsB,GAC/CE,EAAsB7L,EAAU2L,EAAsB,SAAS,KAAK,EAAE,GAAG,CAAC,CAAC,EAE/ED,EAAY,OAAOC,CAAqB,EACxCA,EAAsB,OAAO,OAE7B,IAAIG,GAAsBC,GAAwBH,EAAsB,EACpEI,GAA4B,CAC5B,EAAGF,GAAoB,IAAM,EAC7B,EAAGA,GAAoB,IAAM,CACjD,EACoBG,EAAQ,UAAY,CACpB,IAAIC,EAAKrQ,EAAO,UAAU,UACtBsQ,GAAa,UACbC,GAAe,YACfH,EAAOC,EAAGC,IAAY,OAAO,EAC7BE,EAAUH,EAAGC,IAAY,UAAU,EACnCG,EAAOJ,EAAGC,IAAY,OAAO,EAC7BI,EAAKL,EAAGC,IAAY,KAAK,EACzBxP,EACA6P,EAAe,SAGnB,OAAIP,EAAO,EACPtP,EAAS6P,EAAaN,EAAGE,IAAcH,EAAO,EAAGC,EAAGC,IAAY,IAAKF,CAAI,CAAC,EAAG,EAAE,EAG1EI,EAAU,EACf1P,EAAS6P,EAAaN,EAAGE,IAAcG,EAAK,EAAGL,EAAGC,IAAY,IAAKI,CAAE,CAAC,EAAG,EAAE,EAGtED,EAAO,IACZ3P,EAAS6P,EAAaN,EAAGE,IAAcE,EAAO,EAAGJ,EAAGC,IAAY,IAAKG,CAAI,CAAC,EAAG,EAAE,GAG5E3P,CAC3B,IAEgBqD,EAAU,OAAOsL,EAAO,CACpB,eAAgBD,EAChB,KAAMY,EACN,eAAgB,GAChB,sBAAuB,CAACtO,EAAc,GAAI,EAC1C,oBAAqBmO,GACrB,0BAA2BE,GAC3B,uBAAyB,UAAY,CACjC,IAAIrP,EAAS,GACbgP,EAAsB,SAAS,yCAAyC,EACxE,GAAI,CACAhP,EAAUgP,EAAsB,IAAI,iBAAiB,IAAM,SAAWM,EAAO,GAAK,CAACA,IAAUpQ,EAAO,iBAAiB+P,GAAwB,qBAAqB,EAAE,iBAAiB,SAAS,IAAM,MAChO,MAA0B,CAAc,CAOhB,OAAOjP,CAC/B,EAAwB,EACJ,0BAA2B,CAAE,EAAG,GAAI,EAAG,EAAI,EAC3C,QAASR,GAAQ,kBAAkB,QAAS,OAAQ,OAAO,GAAK,KAChE,oBAAsB,UAAY,CAG9BwP,EAAsB,IAAIJ,GAAaC,CAAS,EAChD,IAAIiB,EAAa,CACb,EAAGb,GAAuB1P,EAAQ,IAClC,EAAG0P,GAAuB1P,EAAQ,GAC9D,EACwByP,EAAsB,IAAIJ,GAAa,SAAS,EAChD,IAAImB,GAAc,CACd,EAAGd,GAAuB1P,EAAQ,IAClC,EAAG0P,GAAuB1P,EAAQ,GAC9D,EACwB,OAAQuQ,EAAW,EAAIC,GAAY,IAAO,GAAMD,EAAW,EAAIC,GAAY,IAAO,CAC1G,EAAwB,EACJ,kBAAoB,UAAY,CAC5Bf,EAAsB,IAAI,CAAE,aAAcH,EAAW,aAAcC,GAAW,UAAa,KAAO,CAAA,EAAE,WAAW,CAAC,EAChH,IAAIkB,EAAuBhB,EAAsB,SAC7CiB,GAA4Bf,EAAoB,SAEpDF,EAAsB,WAAW,IAAI,EACrC,IAAIkB,GAAuChB,EAAoB,SAC/D,MAAO,CAKH,EAAGc,EAAqB,OAASC,GAA0B,KAK3D,EAAGA,GAA0B,OAASC,GAAqC,IACvG,CACA,EAAwB,EACJ,iBAAkB,CAAC,CAAC1Q,GAAQ,aAAa,WAAW,EACpD,kBAAmB,CAAC,CAACA,GAAQ,aAAa,YAAY,EACtD,qBAAuB,UAAY,CAC/B,IAAI2Q,EAAkB,GACtB,GAAI,CACAjR,EAAO,iBAAiB,OAAQ,KAAM,OAAO,eAAe,CAAE,EAAE,UAAW,CACvE,IAAK,UAAY,CACbiR,EAAkB,EACrB,CACJ,CAAA,CAAC,CAC9B,MAA0B,CAAa,CACf,OAAOA,CAC/B,EAAwB,EACJ,sBAAuB,CAAC,CAACnP,EAAc,GAAI,EAC3C,wBAAyB,CAAC,CAACA,EAAc,GAAI,CACjE,CAAiB,EAEDgO,EAAsB,WAAWzP,EAAQ,CAAC,EAAE,OAAM,EAGjD,UAAY,CACT,GAAI8P,GAA0B,GAAKA,GAA0B,EACzD,OAEJ,IAAIe,EAAM1N,EAAK,IACX2N,GAAcrP,EAAc,KAC5BsP,GAAetP,EAAc,KAC7BuP,EAAYC,IACZC,EAAW,UAAY,CACvB,GAAI/F,GAAS,EAAG,OAAS,EAAG,CACxB,IAAIgG,EAAO1P,EAAc,KACrB2P,EAAO3P,EAAc,KACrB4P,EAASF,EAAOL,GAChBQ,EAASF,EAAOL,GAEpB,GAAIM,IAAW,GAAKC,IAAW,EAC3B,OAEJ,IAAIC,EAAcpO,EAAK,MAAMgO,GAAQL,GAAc,IAAM,EACrDU,EAAcrO,EAAK,MAAMiO,GAAQL,GAAe,IAAM,EACtDU,EAAYZ,EAAIQ,CAAM,EACtBK,EAAYb,EAAIS,CAAM,EACtBK,GAAiBd,EAAIU,CAAW,EAChCK,GAAiBf,EAAIW,CAAW,EAChCK,GAASZ,IAETa,GAAgBL,EAAY,GAAKC,EAAY,EAC7CK,GAAa,CAACC,EAA0BL,GAAgBC,EAAc,EACtEK,GAAaJ,KAAWb,GAAaA,EAAY,EACjDkB,GAASJ,IAAiBC,IAAcE,GACxCE,GAAmB/C,EAAM,oBACzBgD,GAEAF,KACA1C,EAAY,OAAOC,CAAqB,EACxC2C,GAAmBhD,EAAM,oBAAsBS,GAAwBJ,EAAsB,EAAE,EAC/FA,EAAsB,OAAM,GACxB0C,GAAiB,IAAMC,GAAiB,GAAKD,GAAiB,IAAMC,GAAiB,IACrFtO,EAAU,KAAKqH,GAAS,EAAI,UAAY,CAChCA,GAAU,IAAI,GACdA,GAAU,IAAI,EAAE,OAAO,MAAM,CACzE,CAAqC,GAIT2F,GAAcK,EACdJ,GAAeK,EACfJ,EAAYa,EACf,CACzB,EAEoB,SAASG,EAA0BK,EAAQC,EAAQ,CAC/C,IAAIC,EAAY1B,EAAIwB,CAAM,EACtBG,EAAY3B,EAAIyB,CAAM,EAC1B,MAAO,EAAEC,IAAcC,GAAaD,EAAY,IAAMC,GAAaD,EAAY,IAAMC,EACxF,CAED,SAASvB,GAAe,CACpB,IAAIwB,EAAO9S,EAAO,OAAO,YAAc,EACnC+S,EAAO/S,EAAO,OAAO,aAAe,EACxC,OAAOA,EAAO,kBAAqB8S,EAAOC,CAC7C,CAED5O,EAAUnE,CAAM,EAAE,GAAG,SAAUuR,CAAQ,CAC3D,IAEgB,SAASrB,GAAwB8C,EAAgB,CAC7C,MAAO,CACH,EAAGA,EAAe3S,EAAQ,IAAM2S,EAAe3S,EAAQ,IACvD,EAAG2S,EAAe3S,EAAQ,IAAM2S,EAAe3S,EAAQ,GAC/E,CACiB,CACJ,CAMD,SAASkP,GAAgC0D,EAAS,CAC9C,IAAIxD,EAAQ,KACRyD,GAAW/O,EAAU,QACrBgP,EAAUrR,EAAc,IACxBsR,GAAiB,aACjBC,EAAyBD,GAAiB,WAC1CE,EAAajT,EAAQ,EACrBkT,GAAoB,CAAA,EACpBC,EAAiC,CAAA,EACjCC,GAAgB,GAChBC,GAAuB,GACvBC,EAAgBD,GAChBE,GAAeT,IACfU,EAMAC,GAAO,UAAY,CACnB,GAAIP,GAAkBD,GAAc,GAAKG,GAAe,CACpDI,EAAU/R,EAAc,IAAG,EAAG,UAAY,CACtCgS,IAC5B,CAAyB,EACD,IAAIC,GAAUZ,IACVa,EAAYD,GAAUH,GACtBK,EACAtI,EACAuI,EACAC,EACAC,EACAC,EAEJ,GAAIL,EAAYL,EAAe,CAC3BC,GAAeG,GAAWC,EAAYL,EACtCM,EAAiBP,GACjB,QAASxS,EAAI,EAAGA,EAAIqS,GAAkBD,GAAapS,IAC/CyK,EAAW4H,GAAkBrS,GACzByK,IAAazL,IACbgU,EAAkBvI,EAAS,UAC3BwI,EAA4BD,EAAgBd,IAC5CgB,EAA6B5Q,EAAK,IAAI,EAAG0Q,EAAgBb,EAAuB,EAChFgB,EAAMlB,EAAO,GAERgB,IAA8B,IAAQA,IAA8B,OAAUE,EAAMb,EAA+BtS,GAAMkT,IAC1HzI,EAAS,OAAO,MAAM,EACtB6H,EAA+BtS,GAAK,IAAI,KAAKmT,GAAOD,CAA0B,GAGlFH,EAAiBzQ,EAAK,IAAI,EAAGA,EAAK,IAAIyQ,EAAgBG,CAA0B,CAAC,GAGzFT,EAAgBM,CACnB,CACzB,MACwBN,EAAgBD,EAExC,EAMgBjE,EAAM,IAAM,SAAU9D,GAAU,CACxBuH,GAASvH,GAAU4H,EAAiB,IAAM,KAC1CA,GAAkB,KAAK5H,EAAQ,EAC/B6H,EAA+B,KAAKL,EAAO,CAAE,EACzCI,GAAkBD,GAAc,GAAK,CAACG,KACtCA,GAAgB,GAChBR,EAAQ,eAAiBQ,GACzBK,MAG5B,EAMgBrE,EAAM,OAAS,SAAU9D,GAAU,CAC/B,IAAIzE,EAAQgM,GAASvH,GAAU4H,EAAiB,EAC5CrM,EAAQ,KAERsM,EAA+B,OAAOtM,EAAO,CAAC,EAC9CqM,GAAkB,OAAOrM,EAAO,CAAC,EAG7BqM,GAAkBD,KAAgB,GAAKG,KACvCA,GAAgB,GAChBR,EAAQ,eAAiBQ,GACrBI,IAAY3T,IACZ4B,EAAc,MAAM+R,CAAO,EAC3BA,EAAU,KAI1C,CACa,CAYD,SAASS,GAA0BC,EAAqBvP,EAASwP,GAAYvB,EAASwB,GAAgB,CAElG,IAAItI,EAAOrK,EAAc,KACrBwD,EAAUnB,EAAU,QACpB2B,GAAO3B,EAAU,KAGjBsL,EAAQ,IAAI3D,EACZ4I,GAAkBvQ,EAAU9D,EAAQ,GAGxC,GAAI,CAACsU,GAAcJ,CAAmB,EAClC,OAGJ,GAAI/I,GAAU+I,CAAmB,EAAG,CAChC,IAAIK,GAAOpJ,GAAU+I,CAAmB,EACxC,OAAAK,GAAK,QAAQ5P,CAAO,EACb4P,EACV,CAGD,IAAIC,EACAC,GACAC,EACAC,GACAC,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAAqB,CAAA,EACrBC,GAAwB,CAAA,EACxBC,GAAsB,CAAA,EACtBC,GAAgB,CAAA,EAChBC,GAA0B,CAAA,EAG1BC,GAAkB,UAClBC,GAAkB,UAClBC,GAAmB,WACnBC,GAAkB,UAClBC,GAAU,MACVC,GAAY,QACZC,GAAa,SACbC,GAAW,OACXC,GAAe,OACfC,GAAe,OACfC,EAAY,QACZC,GAAa,SACbC,GAAY,QACZrT,EAAY,GACZsT,GAAW,OACXC,GAAW,OACXC,GAAa,SACbC,GAAqB,OACrBC,GAAQ,IACRC,GAAQ,IACRC,GAAU,IACV7T,GAAY,IACZ8T,GAAgB,YAChBC,GAAsB,cACtBC,GAAoB,YACpB9T,GAAiBuT,GAAa,OAC9BtT,GAAgBsT,GAAa,MAC7BQ,GAA0B,uBAC1BC,GAAwB,+BACxBC,GAA0B,sBAC1BC,GAAiB,aACjBC,GAAiB,aACjBC,GAAmB,UACnBC,GAAiB,QACjBC,GAAuB,cACvBC,GAAyB,mDACzBC,GAA6B,0BAG7BC,GAAmB,MACnBC,GAAwBD,GAAmB,OAC3CE,GAAwBF,GAAmB,OAC3CG,GAA+BD,GAAwB,WACvDE,GAAgCF,GAAwB,YACxDG,GAA0CH,GAAwB,IAAMf,GAAgBC,GAAsBrB,GAC9GuC,GAAwCJ,GAAwB,IAAMf,GAAgBE,GAAoBtB,GAC1GwC,GAA2BL,GAAwB,cACnDM,GAAoBN,GAAwB,OAC5CO,GAA+BP,GAAwB,mBACvDQ,GAA0BR,GAAwB,aAClDS,GAAyBT,GAAwB,YACjDS,GAAyBT,GAAwB,YACjDU,GAA0BD,GAAyB,KACnDE,GAA0BF,GAAyB,KACnDG,GAA4Bd,GAAmB,WAC/Ce,GAAiCD,GAA4B,SAC7DE,GAA2BhB,GAAmB,UAC9CiB,GAA4BjB,GAAmB,WAC/CkB,GAA8CD,GAA4B,+BAC1EE,GAA6CF,GAA4B,8BACzEG,GAA2BpB,GAAmB,UAC9CqB,GAAkCrB,GAAmB,kBACrDsB,GAA+BtB,GAAmB,eAClDuB,GAAoCvB,GAAmB,qBACvDwB,GAAkCxB,GAAmB,kBACrDyB,GAAsCzB,GAAmB,uBACzD0B,GAA2CD,GAAsC,SACjFE,GAAwB3B,GAAmB,eAC3C4B,GAAsB5B,GAAmBb,GACzC0C,GAA2BD,GAAsB,SACjDE,GAA8BD,GAA2B,OACzDE,GAA4BH,GAAsB,UAClDI,GAA+BD,GAA4B,OAC3DE,GAA8BL,GAAsB,YACpDM,GAAgCN,GAAsB,IAAMhD,GAAWb,GACvEoE,GAA4BP,GAAsB,UAClDQ,GAAkCD,GAA4B,UAC9DE,GAAmCD,GAAkC,QACrEE,GAAmCF,GAAkChD,GACrEmD,GAAmCH,GAAkC/C,GACrEmD,GAAgCZ,GAAsBxC,GACtDqD,GAA8Bb,GAAsBvC,GACpDqD,GAAqB1C,GAAmB,WACxC2C,GAAsB3C,GAAmB,aACzC4C,GAA4B,CAC5B1B,GACAC,GACAW,GACAE,GACAC,GACAC,GACAE,GACAC,GACAC,GACAC,GACAG,EAAkB,EAAE,KAAKrX,EAAS,EAGlCwX,GAAuB,CAAA,EAGvBC,GAA2B,CAACzb,EAAQ,EAAE,EAGtC0b,GACAC,GACAC,GAGAC,GAAc,CAAA,EACdC,GAA4B,4BAG5BC,GACAC,GAAwB,CAAA,EACxBC,GACAC,GAAoB,GACpBC,GAAyB,OACzBC,GAAoB,CAAA,EAGpBC,GACAC,GACAC,GACAC,GACAC,GACAC,EACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAAmB,CAAA,EAGnBC,GACAC,GACAC,GACAC,GACAC,GACAC,GAAiC,CAAC,OAAQ,OAAQ,MAAM,EACxDC,GAA6B,CAAC/gB,EAAQ,EAAGA,EAAQ,EAAGA,EAAQ,EAAG,MAAM,EAAE,OAAOyb,EAAwB,EAGtGuF,GAAiB,CAAA,EAGjBC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GAaJ,SAASC,GAA6BC,EAASC,EAAYC,EAAUC,EAAQC,EAAkB,CAC3F,IAAIC,EAAY5gB,EAAc,IAAIwgB,CAAU,GAAKxgB,EAAc,IAAIygB,CAAQ,EACvEI,EAASH,EAAS,sBAAwB,mBAC1CI,EAAQJ,EAAS,MAAQ,KACzBK,EAASH,EAAY,GAAQJ,EAAW,MAAMje,EAAS,EACvDnD,EAAI,EAEJ4hB,EAAwB3e,EAAU,cAAcse,CAAgB,EAChEM,EAAWxN,IAA0BuN,EAAyBL,EAAiB,SAAYA,IAAsB,GACjHO,EAAUF,IAA0BL,EAAiB,UAAY,IACjEQ,GAAc1N,EAAwB,CACtC,QAASwN,EACT,QAASC,CACZ,EAAGA,EAEJ,GAAIN,EACA,KAAOxhB,EAAIohB,EAAWjiB,EAAQ,GAAIa,IAC9BkhB,GAA6BC,EAASC,EAAWphB,GAAIqhB,EAASrhB,GAAIshB,EAAQC,CAAgB,MAG9F,MAAOvhB,EAAI2hB,EAAOxiB,EAAQ,GAAIa,IACvBqU,EACC8M,EAAQ,GAAGM,GAAQE,EAAO3hB,GAAIqhB,EAAUU,EAAW,EAGnDZ,EAAQO,GAAOC,EAAO3hB,GAAIqhB,CAAQ,CAIjD,CAGD,SAASW,GAAwBb,EAASC,EAAYC,EAAUQ,EAAS,CACrEX,GAA6BC,EAASC,EAAYC,EAAU,GAAOQ,CAAO,EAC1E1B,GAAe,KAAKvf,EAAc,KAAKsgB,GAA8B,EAAGC,EAASC,EAAYC,EAAU,GAAMQ,CAAO,CAAC,CACxH,CASD,SAASI,GAAoBC,EAAeC,EAA0B,CAClE,GAAID,EAAe,CACf,IAAIE,EAAiBxhB,EAAc,KAC/ByhB,EAAyB,yEACzBC,EAAgB,aAChBC,EAAc,QACd1d,EAAW,UAAY,CACvBqd,EAAc5e,IAAeif,CAAW,EAAElf,IAAgBiS,GAASzB,EAAmB,EAAI,CAAC0O,EAAc1O,EAAmB,EAAI,EAAI0O,EAAcA,CAAW,EAC7JJ,GAC5B,EAEwB,GAAIA,EAA0B,CAC1B,GAAI7N,EAAwB,CACxB,IAAI6M,EAAUe,EAAc,SAAS,UAAU,EAAE,OAAOM,GAAYlJ,EAA+B,CAAC,EAAE,SAAU,EAAC,GAC7GmJ,EAAWtB,EAAQtJ,IAA8B,IAAIuK,EAAevd,CAAQ,EAChF4d,EAAS,QAAQtB,CAAO,CAC3B,SAEOpN,GAAe,GAAK,CAACD,GAAwB,CAC7CoO,EAAc,QACVM,GAAYlJ,GACRkJ,GAAY,CAAE,EAAGjJ,GAAqC,IAAK,KAAO,EAC9DiJ,GAAYjJ,GACRiJ,GAAYhJ,EAAwC,CACvD,EACDgJ,GAAYjJ,GACRiJ,GAAY,CAAE,EAAGhJ,GAA0C,MAAO,2BAA2B,CAAE,CAClG,CACJ,CACJ,CACzC,EAEoC,IAAIkJ,EAAkBR,EAAc,GAAGI,GAAe,GAAGA,GAAe,GACpEK,EAAgB1f,EAAUyf,EAAgBJ,GAAe,EAAE,EAC3DM,EAAgB3f,EAAUyf,EAAgBJ,GAAe,EAAE,EAC3DO,EAAqB5f,EAAU2f,EAAc,GAAGN,GAAe,EAAE,EACjEQ,GAAaJ,EAAgBvjB,EAAQ,IACrC4jB,GAAcL,EAAgBvjB,EAAQ,IACtC6jB,EACAC,GACAC,GACAC,GACAC,GAAS,EACTrU,GAAsBgD,EAAQ,oBAC9BsR,GAAQ,UAAY,CAapBT,EAAcvf,IAAgBkf,CAAW,EAAEjf,IAAeif,CAAW,EACrEI,EAActf,IAAgBkf,CAAW,EAAEjf,IAAeif,CAAW,CAC7G,EACwCe,GAAY,UAAY,CACxBL,GAAQ,EACHD,IAGLF,GAAaI,GACbH,GAAcI,GACdte,IACxC,EACwC0e,GAAW,SAAUhiB,GAAO,CAC5B,OAAA2hB,GAAYR,EAAgBvjB,EAAQ,IACpCgkB,GAAaT,EAAgBvjB,EAAQ,IACrC6jB,EAAUE,IAAaJ,IAAcK,IAAcJ,GAE/CxhB,IAASyhB,GAAW,CAACC,IACrBriB,EAAc,MAAMqiB,EAAK,EACzBA,GAAQriB,EAAc,IAAK,EAAC0iB,EAAS,GAE/B/hB,IACN+hB,KAEJD,KACI9hB,KACAX,EAAc,KAAKW,EAAK,EACxBX,EAAc,KAAKW,EAAK,GAErB,EAC/C,EACwCiiB,GAAiB,CAAA,EACjBC,GAAqB,CAAA,EAEzBC,GAAsBD,GAAoBrgB,EAAW,CACjD,GAAG2L,GAAoB,EAAI,GAAKqU,IAChCrU,GAAoB,EAAI,CAACqU,GACzBrU,GAAoB,EAAI,CAACqU,GACzB,GAAGrU,GAAoB,EAAI,GAAKqU,GACxE,CAAqC,EAEDngB,EAAUyf,CAAe,EAAE,IAAIe,EAAkB,EACjDb,EAAc,GAAGhM,GAAY2M,EAAQ,EACrCZ,EAAc,GAAG/L,GAAY2M,EAAQ,EACrCrB,EAAc,GAAGG,EAAwB,UAAY,CACjDkB,GAAS,EAAK,CACtD,CAAqC,EAEDC,GAAejN,GAAagM,EAC5BiB,GAAehN,IAAc+L,EAC7BM,EAAmB,IAAIW,EAAc,EAErCH,IACH,KACI,CACD,IAAIM,GAAc7G,GAAuB,YACrC8G,GAAO7P,KAAiB/U,EAC5B,GAAI2kB,GACAzB,EAAc,QAAQM,GAAYlJ,EAA+B,CAAC,EAClEuK,GAAU3B,EAAelL,GAAUsC,EAA+B,EAAE,GAAG,YAAY,WAAYzU,CAAQ,MAEtG,CACD,IAAIxC,GAAMya,GAAuB,cAAc5d,EAAM,CAAC,EACtDmD,GAAI,aAAalD,EAAQ,GAAI,IAAI,EACjCkD,GAAI,aAAalD,EAAQ,EAAGma,EAA+B,EAC3DjX,GAAI,OAAS,UAAY,CACrB,IAAIyhB,GAAM,KAAK,gBAAgB,YAC/BA,GAAI,iBAAiB,SAAUjf,CAAQ,EACvCif,GAAI,SAAS,gBAAgB,MAAM,QAAU,MACzF,EACwCzhB,GAAI,KAAO,YACPuhB,IACA1B,EAAc,QAAQ7f,EAAG,EAC7BA,GAAI,KAAO,cACNuhB,IACD1B,EAAc,QAAQ7f,EAAG,EAC7B6f,EAAc,GAAGG,EAAwBxd,CAAQ,CACpD,CACJ,CAGL,GAAIqd,EAAc,KAAOhF,GAA4B,CACjD,IAAI6G,GAAmB,UAAY,CAC/B,IAAIC,GAAMnI,EAAa,IAAI,WAAW,EAClCoI,EAAM,CAAA,EACNC,GAAkB,EAClBtkB,GAAS,GACb,OAAIokB,KAAQ9F,KACJ8F,KAAQ,OACRC,EAAI7N,IAAY,EAChB6N,EAAI/N,IAAaQ,GACjBwN,GAAkB3B,IAGlB0B,EAAI7N,IAAYM,GAChBuN,EAAI/N,IAAa,EACjBgO,GAAkBrQ,EAAmB,EAAI,CAAC0O,EAAc1O,EAAmB,EAAI,EAAI0O,GAGvFxG,GAAqB,SAAQ,EAAG,GAAG,CAAC,EAAE,IAAIkI,CAAG,EAC7ClI,GAAqB1Y,IAAgB6gB,EAAe,EAAE5gB,IAAeif,CAAW,EAChFrE,GAA6B8F,GAC7BpkB,GAAS,IAENA,EAC3C,EACgCmkB,KACA/B,GAAwBE,EAAetL,GAAY,SAAUrV,GAAO,CAChE,OAAIwiB,GAAkB,GAClBI,KACJvjB,EAAc,KAAKW,EAAK,EACxBX,EAAc,KAAKW,EAAK,EACjB,EAC3C,CAAiC,CACJ,CACJ,SAGO+S,EAAwB,CACxB,IAAI6M,EAAUe,EAAc,SAAU,EAAC,GACnCkC,GAAoBjD,EAAQtJ,IAC5BuM,KACAA,GAAkB,WAAU,EAC5B,OAAOjD,EAAQtJ,IAEtB,MAEGyJ,GAAOY,EAAc,SAASlL,GAAUsC,EAA+B,EAAE,GAAG,CAAC,CAAC,CAGzF,CACJ,CA8CD,SAAS+K,IAA0B,CAC/B,GAAI9P,EAA0B,CAC1B,IAAI+P,EAA6B,GAC7BC,EAAmB3jB,EAAc,KACjC4jB,EAAoB5jB,EAAc,MAClC6jB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA5R,EACA6R,EACAC,EAEJnF,GAAgC,SAAUoF,GAAW,CAEjD,IAAIC,GAAW,GACXC,EAAgB,GAChBC,GACAC,GAAe,CAAA,EAEnB,OAAI9Q,GAAgB,CAACe,KACjB3Q,GAAKsgB,GAAW,UAAY,CACxBG,GAAW,KACXZ,EAAiBY,GAAS,OAC1BX,EAAmBW,GAAS,cAC5BV,EAAkBD,IAAqBvlB,EAAQ,EAC/CylB,EAAiBS,GAAS,SAC1BR,EAAcJ,EAAe,UAEzB5P,IAAc8P,GAAmB,CAACS,GAE9BR,EAAe,QAAQ3M,EAA4B,EAAI,IAAM4M,EAAY,QAAQ5M,EAA4B,EAAI,IACjH6M,EAAqBS,GAA0B,EAAI,EACnDvI,GAAmB,UAAY6H,EAAY,MAAM1hB,EAAS,EAAE,OAAOyhB,EAAe,MAAMzhB,EAAS,EAAE,OAAO,SAAUxD,GAAM,CACtH,OAAOA,GAAK,MAAMmlB,CAAkB,CACpF,CAA6C,CAAC,EAAE,KAAK3hB,EAAS,EAClBgiB,GAAWC,EAAgB,IAI9BD,KACDA,GAAWR,EACLa,GAAsBZ,EAAgBC,CAAW,EACjDH,IAAqBvlB,EAAQ,EACzBylB,IAAmBH,EAAetlB,EAAQ,GAAG,QAC7C,IAGdmmB,GAAa,KAAKZ,CAAgB,CACtE,CAAiC,EAEDe,GAA8BH,EAAY,EAEtCH,IACA5W,EAAM,OAAO6W,GAAiB1O,EAAQ,GAEvCyO,EACnC,EACwBpF,GAAmC,SAAUmF,GAAW,CACpD,IAAIC,GAAW,GACXE,EAEJ,OAAI7Q,GAAgB,CAACe,KACjB3Q,GAAKsgB,GAAW,UAAY,CACxB,OAAAG,EAAW,KACXF,GAAWO,GAAkBL,CAAQ,EAC9B,CAACF,EAC5C,CAAiC,EAEGA,KACAhS,EAAMvS,EAAc,MACpBokB,EAAYpH,IAAoBD,GAChCsH,EAAS,UAAY,CACZxQ,IACD+P,EAAoBrR,EAGhBuB,GACAiR,KAEAX,EACAb,KAEA5V,EAAM,OAAOmI,EAAQ,EAErE,EACoC,aAAaqO,CAAc,EACvBT,GAA8B,GAAKnR,EAAMqR,EAAoBF,GAA8B,CAACU,EAC5FC,IAEAF,EAAiB,WAAWE,EAAQX,CAA0B,IAGnEa,EACV,EAEDvF,GAAwB,IAAI2E,EAAiBzE,EAA6B,EAC1ED,GAA2B,IAAI0E,EAAiBxE,EAAgC,CACnF,CACJ,CAKD,SAAS6F,IAA2B,CAC5BrR,GAA4B,CAACyL,KAC7BJ,GAAsB,QAAQ5C,GAAoB,CAC9C,WAAY,GACZ,kBAAmB,GACnB,gBAAiBkD,EAC7C,CAAyB,EAEDL,GAAyB,QAAQnL,EAAcqI,GAAuBM,GAAuB,CACzF,WAAY,GACZ,kBAAmB,GACnB,QAAS,CAAC3I,EACV,UAAW,CAACA,EACZ,cAAe,CAACA,EAChB,gBAAiBA,EAAcuL,GAAiCC,EAC5F,CAAyB,EAEDF,GAA8B,GAErC,CAKD,SAAS6F,IAA8B,CAC/BtR,GAA4ByL,KAC5BJ,GAAsB,WAAU,EAChCC,GAAyB,WAAU,EAEnCG,GAA8B,GAErC,CAUD,SAAS8F,IAAgB,CACrB,GAAI,CAACvQ,GAAW,CACZ,IAAIwQ,EACAC,EAAW,CACX,EAAG9I,GAA2B/d,EAAQ,IACtC,EAAG+d,GAA2B/d,EAAQ,GAClE,EAEwB4mB,EAAUE,GAAWD,EAAUpH,EAAmC,EAClEA,GAAsCoH,EAClCD,GACA5B,GAAO,CAAE,iBAAkB,EAAI,CAAE,CACxC,CACJ,CAKD,SAAS+B,IAAmB,CACpBvF,IACAwF,GAA0B,EAAI,CACrC,CAKD,SAASC,IAAmB,CACpBzF,IAA4B,CAAChF,GAAa,SAASnB,EAAkB,GACrE2L,GAA0B,EAAK,CACtC,CAKD,SAASE,IAAkB,CACnB3F,KACAyF,GAA0B,EAAI,EAC9B,aAAa7F,EAAgC,EAC7CA,GAAmC,WAAW,UAAY,CAClDI,IAA2B,CAACjM,GAC5B0R,GAA0B,EAAK,CACtC,EAAE,GAAG,EAEb,CAMD,SAASG,GAAsB/kB,EAAO,CAClC,OAAAX,EAAc,KAAKW,CAAK,EACjB,EACV,CAKD,SAASglB,GAAqBhlB,EAAO,CAChD,GAAI,CAACkT,EAAY,CAChB,IAAI7S,EAASL,EAAM,OACfilB,EAAMvjB,EAAU1B,EAAM,MAAM,EAC5ByE,EAAQ/C,EAAU,QAAQrB,EAAQ2Z,EAAiB,EACnDvV,EAAQ,IACXuV,GAAkB,OAAOvV,EAAO,CAAC,EAGlCygB,GAAiB,SAAUzmB,EAAG0mB,EAAsB,CAC/CF,EAAI,GAAGE,CAAoB,GAC9BvC,GAAO,CAAE,oBAAqB,EAAI,CAAE,CAE5C,CAAO,CACD,CACW,CAMD,SAASwC,GAA0BC,EAAS,CACnCA,GACDD,GAA0B,EAAI,EAElCzF,GAA6BrF,EACzBvE,GAAwB,MAAMnU,EAAS,EAAE,GACzCkjB,GACC,CAAC3F,IAA2BkG,EAAU,EAAI,EAC/C1F,GAA6BrF,EACzB,CAACtE,GAAgBC,EAAc,EAC/B,CAAC0O,GAAkBE,EAAgB,EAClC,CAACzF,IAA4BiG,EAAU,EAAI,EAG5C,CAACpS,GAAgB,CAACoS,GAClB/K,EAAa,IAAI,YAAaqK,EAAgB,CACrD,CASD,SAASW,IAAqB,CAC1B,IAAIC,EAAc,CAAA,EAClB,OAAInS,GAAWwH,KACX2K,EAAY,EAAIC,GAAoB5K,GAAuB,IAAI9F,GAAeE,CAAS,CAAC,EACxFuQ,EAAY,EAAIC,GAAoB5K,GAAuB,IAAI9F,GAAeG,EAAU,CAAC,EACzFsQ,EAAY,EAAIb,GAAWa,EAAapH,EAAiB,EACzDoH,EAAY,EAAI,IAEpBpH,GAAoBoH,EACb,CAAC,CAACA,EAAY,CACxB,CAQD,SAAStB,GAAsBwB,EAAeC,EAAe,CACzD,IAAIC,EAAc,OAAOD,GAAiB/nB,EAAM,EAAI+nB,EAAc,MAAM9jB,EAAS,EAAI,GACjFgkB,EAAa,OAAOH,GAAiB9nB,EAAM,EAAI8nB,EAAc,MAAM7jB,EAAS,EAAI,GAChFikB,EAAOC,GAAoBF,EAAYD,CAAW,EAGlDI,EAAMljB,EAAQqW,GAAqB2M,CAAI,EACvCpnB,EACAunB,EAKJ,GAHID,EAAM,IACNF,EAAK,OAAOE,EAAK,CAAC,EAElBF,EAAKjoB,EAAQ,GAAK,GAElB,IADAooB,EAAQhC,GAA0B,GAAM,EAAI,EACvCvlB,EAAI,EAAGA,EAAIonB,EAAK,OAAQpnB,IACzB,GAAI,CAAConB,EAAKpnB,GAAG,MAAMunB,CAAK,EACpB,MAAO,GAInB,MAAO,EACV,CAOD,SAAS7B,GAAkBL,EAAU,CACjC,IAAImC,EAAgBnC,EAAS,cACzBZ,EAAiBY,EAAS,OAC1BoC,EAAepC,EAAS,KACxBqC,EAAa,UAEjB,GAAIjD,IAAmBpH,GACnB,OAAOmK,IAAkB,KAC7B,GAAIC,IAAiB,eAAiBD,IAAkBroB,EAAQ,GAAKqoB,IAAkBroB,EAAQ,IAAM,CAACuV,EAAa,CAE/G,GAAI8S,IAAkBroB,EAAQ,GAAK8D,EAAUwhB,CAAc,EAAE,SAASzM,EAAqB,EACvF,OAAOwN,GAAsBH,EAAS,SAAUZ,EAAe,SAAS,EAG5E,GAAI,OAAOA,EAAeiD,IAAexoB,EAAM,EAC3C,MAAO,GACX,GAAIulB,EAAeiD,GAAY1Q,GAAUsC,EAA+B,IAAM,MAC1EmL,EAAeiD,GAAY1Q,GAAU0C,EAAmB,IAAM,MAC9D+K,EAAeiD,GAAY1Q,GAAUiD,EAAyB,IAAM,KACpE,MAAO,EACd,CACD,MAAO,EACV,CAMD,SAAS0N,IAA+B,CACpC,GAAIpS,GACA,MAAO,GAEX,IAAIqS,EAAwBC,KACxBC,EAAsBpT,GAAeiJ,IAAmB,CAAC0B,GAA6BzD,GAAe,IAAG,EAAG,OAAS,EACpHmM,EAAS,CAAC/H,IAA+BrC,IAAmB,CAACjJ,EAC7DuP,EAAM,CAAA,EACN+D,EACAC,EACAlC,EACAmC,EAEJ,OAAIH,IACAC,EAAQ9L,GAAgB,IAAIzF,EAAS,EACrCwN,EAAIxN,IAAanB,GAASY,GAAYE,GACtC6N,EAAI1N,GAAaG,GACjBwF,GAAgB,IAAI+H,CAAG,GAE3BiE,EAA2B,CACvB,EAAGN,EAAsBzoB,EAAQ,IAAM2oB,EACvC,EAAGF,EAAsBzoB,EAAQ,IAAM2oB,CAC/D,EACwBC,IACA9D,EAAIxN,IAAauR,EACjB/D,EAAI1N,GAAaM,GACjBqF,GAAgB,IAAI+H,CAAG,GAG3BgE,EAAepB,GAAkB,EACjCd,EAAUE,GAAWiC,EAA0BvJ,EAA4C,EAE3FA,GAA+CuJ,EAExCnC,GAAWkC,CACrB,CAMD,SAASE,IAAyB,CAC9B,GAAI,EAAA5S,IAAayK,IAGjB,KAAI7a,EACAijB,EACAC,EACAC,EAAe,CAAA,EACfC,EAAS,CACT,CACI,MAAO1M,EACP,OAAQqE,GAA2B,OAAO,UAAU,CACvD,EACD,CACI,MAAOxL,EAAckH,GAAiB5c,EACtC,OAAQihB,EACX,CACzB,EAEoB,OAAArb,GAAK2jB,EAAQ,SAAUviB,EAAOwiB,EAAO,CACjCrjB,EAAOqjB,EAAM,MACTrjB,GACAP,GAAK4jB,EAAM,OAAQ,SAAUxiB,EAAOyiB,EAAM,CACtCL,EAAOK,EAAK,OAAO,CAAC,IAAM,IAAMtjB,EAAK,GAAGsjB,CAAI,EAAItjB,EAAK,KAAKsjB,CAAI,EAC9DJ,EAAQ1I,GAAiB8I,GAErBxC,GAAWmC,EAAMC,CAAK,GACtBC,EAAa,KAAKG,CAAI,EAG1B9I,GAAiB8I,GAAQL,CACzD,CAA6B,CAE7B,CAAqB,EAED3C,GAA8B6C,CAAY,EAEnCA,EAAanpB,EAAQ,GAAK,EACpC,CAOD,SAASupB,GAA2BC,EAAc,CAC9C,GAAI,CAACnU,EACD,MAAO,GACX,IAAIoU,EAAW,YACXC,EAAa,cACbC,EAAY,aACZC,EAAkB,CAClBxS,EACAF,GAAeE,EACfD,GAAeC,EACfT,GAAkBM,GAClBN,GAAkBI,GAClBE,GACAF,GACA,cACA,eACA0S,EACAC,EACAC,CACxB,EACwBE,EAA4B,CAC5BjT,GAAmBK,GACnBL,GAAmBG,GACnBF,GAAkBI,GAAWG,EAC7BP,GAAkBE,GAAYK,CACtD,EACwB0S,EAAkB,CAClBzS,GACAH,GAAeG,GACfF,GAAeE,GACfV,GAAkBG,GAClBH,GAAkBK,GAClBF,GACAE,GACA,cACAyS,EACAC,EACAC,CACxB,EACwBI,EAA4B,CAC5BnT,GAAmBE,GACnBF,GAAmBI,GACnBH,GAAkBC,GAAUM,EAC5BP,GAAkBG,GAAaI,CACvD,EACwB4S,EAAQ,IACRC,EAAS,MACTC,EAAS/K,GAAuB,IAAM6K,GAAS7K,GAAuB,IAAM8K,EAC5EE,EAAShL,GAAuB,IAAM6K,GAAS7K,GAAuB,IAAM8K,EAC5EG,EAAiB,GACjBC,GAAoB,SAAUrnB,GAAKxC,EAAM,CACzC,QAASK,GAAI,EAAGA,GAAImC,GAAIhD,EAAQ,GAAIa,KAChC,GAAImC,GAAInC,MAAOL,EACX,MAAO,GAEf,MAAO,EAC/B,EAEoB,OAAI2pB,IACAC,EAAiBC,GAAkBP,EAAiBN,CAAY,EAC5D,CAACY,GAAkB,CAACzU,KACpByU,EAAiBC,GAAkBN,EAA2BP,CAAY,IAE9EU,GAAU,CAACE,IACXA,EAAiBC,GAAkBT,EAAiBJ,CAAY,EAC5D,CAACY,GAAkB,CAACzU,KACpByU,EAAiBC,GAAkBR,EAA2BL,CAAY,IAE3EY,CACV,CAUD,SAAS9D,GAA8BgE,EAAO,CAC1CA,EAAQA,GAAS7O,GACjBhW,GAAK6kB,EAAO,SAAUzjB,EAAOyiB,EAAM,CAC/B,GAAI7nB,EAAc,IAAI6nB,EAAM7N,EAAwB,EAAI,GAAI,CACxD,IAAI8O,EAAa9N,GAAe,KAAK6M,CAAI,EACrCxd,EAAKye,CAAU,GAAKxqB,EAAM,EAC1B+c,GAAiB,KAAKwM,EAAMiB,CAAU,EAGtCzN,GAAiB,WAAWwM,CAAI,CAEvC,CACzB,CAAqB,CACJ,CAKD,SAAS9C,IAAiB,CACtB,GAAI,CAACpQ,GAAW,CACZ,IAAIoU,EAAc,CAACtK,GACfuK,EAAWjU,GAAc,EACzBkU,EAAYlU,GAAc,EAC1BsO,EAAM,CAAA,EACN6F,EAAYnM,IAAmBgM,EAC/BI,EACAC,EACAC,EACAC,EAGJ,OAAAjG,EAAI5N,GAAeE,GAAanT,EAChC6gB,EAAI5N,GAAeG,IAAcpT,EAGjC6gB,EAAI1N,GAAaG,GACjBkF,GAAe,IAAIqI,CAAG,EAGtB8F,EAAYhN,GAAqB5d,EAAQ,IACzC6qB,EAAQF,EAAYxnB,EAAK,IAAIynB,EAAWhN,GAAqB5d,EAAQ,IAAM,CAAC,EAAI,EAIhF8kB,EAAI1N,GAAaoH,GAAkBjH,GAAqBG,GACxDoN,EAAI5N,GAAeE,GAAaM,GAGhCoN,EAAIzN,IAAcE,GAClBkF,GAAe,IAAIqI,CAAG,EAGtBgG,EAAalN,GAAqB5d,EAAQ,IAC1C+qB,EAAS5nB,EAAK,IAAI2nB,EAAYlN,GAAqB5d,EAAQ,IAAM,CAAC,EAGlE8kB,EAAI1N,GAAayT,EACjB/F,EAAIzN,IAAc0T,EAClB7N,GAAsB,IAAI4H,CAAG,EAG7BA,EAAI5N,GAAeE,GAAaqT,EAChC3F,EAAI5N,GAAeG,IAAcqT,EACjCjO,GAAe,IAAIqI,CAAG,EAEf,CACH,eAAgB8F,EAChB,gBAAiBE,EACjB,cAAeD,EACf,eAAgBE,CAC5C,CACqB,CACJ,CAaD,SAAS/F,GAAOgG,EAAa,CACzB,aAAa/O,EAAuB,EACpC+O,EAAcA,GAAe,GAC7BhP,GAAsB,kBAAoBgP,EAAY,iBACtDhP,GAAsB,qBAAuBgP,EAAY,oBACzDhP,GAAsB,QAAUgP,EAAY,OAE5C,IAAIhX,EAAMvS,EAAc,MACpBwpB,EAAkB,CAAC,CAACjP,GAAsB,iBAC1CkP,EAAqB,CAAC,CAAClP,GAAsB,oBAC7CmP,EAAQ,CAAC,CAACnP,GAAsB,OAChCoP,EAAiBJ,EAAY,gBAC7BK,EAAmChW,GAAgB,CAACC,GAAc,CAAC6V,GAAS,CAACC,GAAmBpX,EAAM+H,GAAmBG,IAAsB,CAACuC,IAAoB,CAACD,GACrK8M,EAUJ,GARID,IACApP,GAA0B,WAAW+I,GAAQ9I,EAAiB,GAO9D,EAAA5G,GAAc+V,GAAYjV,IAAa,CAACgV,GAAoB/V,GAAgB,CAAC8V,IAAUG,EAAkB5O,EAAa,GAAG,SAAS,IAAOA,EAAa,IAAI,SAAS,IAAM,UAG7K,CAAAX,GAAkB/H,EAClBgI,GAAwB,CAAA,EAGpBnH,GAA2B,EAAEL,EAA2B,GAAKA,EAA2B,IAExFO,EAAqB,EAAI,EACzBA,EAAqB,EAAI,GAIzBA,EAAuBwW,GAAW,CAAA,EAAI3Y,EAAQ,mBAAmB,EAOrE6D,GAA0B,CACtB,GAAI1B,EAAqB,GAAKP,EAA2B,EAAI,EAAI,IAAM,EACvE,GAAIO,EAAqB,GAAKP,EAA2B,EAAI,EAAI,IAAM,CAC/F,EAEoB4W,EAAiBA,GAAkB,GAInC,IAAII,EAAsB,UAAY,CAClC,OAAO1E,GAAW,MAAM,KAAM,CAAE,EAAC,MAAM,KAAK,SAAS,EAAE,OAAO,CAACqE,CAAK,CAAC,CAAC,CAC9F,EAGwBM,EAAa,CACb,EAAG3O,GAAiB5Y,IAAiB,EACrC,EAAG4Y,GAAiB3Y,IAAgB,CAC5D,EAEwBunB,EAAmC9P,GAAwB,WAC3D+P,EAAiC/P,GAAwB,SAGzDgQ,EAAuBF,EAAiC,WACxDG,GAA8BL,EAAoBI,EAAsBlM,EAA0B,EAGlGoM,GAAqBJ,EAAiC,SACtDK,EAA4BP,EAAoBM,GAAoBnM,EAAwB,EAG5FqM,GAA2BN,EAAiC,eAC5DO,GAAkCT,EAAoBQ,GAA0BpM,EAA8B,EAG9GsM,GAA0BR,EAAiC,cAC3DS,GAAiCX,EAAoBU,GAAyBrM,EAA6B,EAG3G5V,GAAY2R,GAAwB,UACpCwQ,GAAmBZ,EAAoBvhB,GAAW+V,EAAe,EAGjEqM,GAASzQ,GAAwB,OACjC0Q,GAAgBd,EAAoBa,GAAQvM,EAAY,GAAK,CAACtK,EAG9D+W,GAAkB3Q,GAAwB,gBAC1C4Q,GAAyBhB,EAAoBe,GAAiBvN,EAAqB,EAGnFyN,GAAa7Q,GAAwB,WACrC8Q,GAAoBlB,EAAoBiB,GAAYxN,EAAgB,EAGpE0N,GAAkB/Q,GAAwB,iBAAmB,CAACpG,EAC9DoX,GAAyBpB,EAAoBmB,GAAiBpN,EAAqB,EAGnFsN,GAA+BjR,GAAwB,yBAAyB,qBAChFkR,GAAsCtB,EAAoBqB,GAA8BxN,EAAkC,EAG1H0N,EAAanR,GAAwB,WACrCoR,GAAoBxB,EAAoBuB,EAAYzN,EAAgB,EAGpE2N,GAAmBrR,GAAwB,iBAC3CsR,GAA0B1B,EAAoByB,GAAkB9N,GAAwBgM,CAAK,EAG7FgC,GAAmBxB,EAA+B,SAClDyB,GAA0B5B,EAAoBlL,GAAwB6M,EAAgB,EAGtFE,GAAoB1B,EAA+B,UACnD2B,GAA2B9B,EAAoBnL,GAAyBgN,EAAiB,EA8D7F,GA3DAhM,GAA2ByK,KAAuB,IAClDxK,GAA4BwK,KAAuB,IACnDvK,GAA0BuK,KAAuB,IACjDtK,GAA2BsK,KAAuB,IAGlD1K,GAA2BsK,EAAiC,cAG5DzL,GAAgBD,GAGhB2B,GAAc0K,KAAW,IACzBzK,GAAcyK,KAAW,IACzBxK,GAAoBwK,KAAW,IAC/BvK,GAAkBuK,KAAW,IAG7BtM,GAAqBnE,GAAwB,aAG7CiR,GAA+BA,IAAiCrY,EAA2B,GAAKA,EAA2B,EAG3HkL,GAA6BkM,EAC7BjM,GAA2BmM,GAC3BlM,GAAiCoM,GACjCnM,GAAgCqM,GAChClM,GAAkB/V,GAClB6V,GAAeuM,GACfrN,GAAwBuN,GACxBtN,GAAmBwN,GACnBlN,GAAwBoN,GACxBtN,GAAqCwN,GACrCvN,GAAmByN,EACnB5N,GAAyBoM,GAAW,GAAI0B,EAAgB,EACxD3M,GAAyB6M,GACzB9M,GAA0BgN,GAC1B/O,GAAoBA,IAAqB,CAAE,EAAG,GAAO,EAAG,IAGpD8N,KACAmB,GAAY7Q,EAAcuD,GAAgBjc,GAAYsX,EAAmB,EACzEkS,GAAS9Q,EAAczS,KAAcpK,GAAaoK,KAAc,MAAQA,GAAU,OAAS,EAAIA,GAAYqR,EAAmB,GAI9H0R,KACID,IAAe,IAASA,IAAe,MAAQpY,IAC/C+R,KACAtS,GAAe,IAAIhF,CAAK,IAGxBgF,GAAe,OAAOhF,CAAK,EAC3BqX,OAKJmG,GACA,GAAID,GAQA,GAPI1P,GACAA,GAAoB,KAAI,GAGxBA,GAAsBnZ,EAAUuf,GAAYpJ,EAA4B,CAAC,EACzE4C,GAAgB,OAAOI,EAAmB,GAE1CrH,GACA+G,GAAyB,KAAI,MAE5B,CACDA,GAA2B7Y,EAAUuf,GAAYnJ,EAAiC,CAAC,EACnF4D,GAAiCnB,GAAyB,GAE1DM,GAAoB,OAAON,EAAwB,EACnD,IAAI8Q,GAAU,CAAE,EAAG,GAAI,EAAG,IAC1B3K,GAAoBnG,GAA0B,UAAY,CACtD,IAAI+Q,GAAU,CACV,EAAG5P,GAA+B9d,EAAQ,IAC1C,EAAG8d,GAA+B9d,EAAQ,GAClF,EACwC8mB,GAAW4G,GAASD,EAAO,IACvBpY,GAAiBoJ,IAAoBiP,GAAQ,EAAI,GAAOlP,IAAmBkP,GAAQ,EAAI,GAGlFrY,GAAiB,CAACoJ,IAAoBiP,GAAQ,IAAM,GAAO,CAAClP,IAAmBkP,GAAQ,IAAM,IAClG1I,KAGRyI,GAAUC,EAC9C,CAAiC,EACD9X,GAAyB,GAGrBd,IAAa,MACb6H,GAAyB,IAAItF,GAAYvC,EAAW,cAAc,CACzE,MAGGc,IACA+G,GAAyB,KAAI,EAC7BM,IACAA,GAAoB,KAAI,EAKhCkO,IACAvO,GAAqB,KAAK,GAAG,EAAE,QAAQnF,EAAU,EAC7C7B,IACA+G,GAAyB,KAAK,GAAG,EAAE,QAAQlF,EAAU,GAI7D6T,EAAkBA,IAAoBzrB,EAAY6c,EAAa,GAAG,SAAS,EAAI4O,EAG/E,IAAIqC,GAAuBpY,EAAckH,GAAe,KAAK,MAAM,IAAM,MAAQ,GAC7EmR,GAA8BpC,EAAoBmC,GAAsBzN,EAA0B,EAGlG2N,GAAenR,EAAa,IAAI,WAAW,EAC3CoR,GAAsBtC,EAAoBqC,GAAc/O,EAAkB,EAG1EiP,GAAYrR,EAAa,IAAI,YAAY,EACzCsR,GAAmBxC,EAAoBuC,GAAWrP,EAAkB,EAGpEuP,GAAUC,GAA0BtX,EAAgB,EAGpDuX,GAEJ,GAAI,CACAA,GAAgCvY,GAAyBkI,GAA+B9d,EAAQ,KAAM,EAAG,IAC5G,MAAC,CACE,MACH,CAEDmW,GAAS0X,KAAiB,MAC1BlY,GAAgBoY,KAAc,aAC9B,IAAIK,GAAYjY,GAASc,GAAWF,GAChCsX,GAAalY,GAASY,GAAYE,GAGlCqX,GAA2B,GAC3BC,GAA8B3Y,IAA2B8G,EAAa,IAAIpF,EAAS,IAAM,OAAgCnU,EAAK,MAAMgrB,GAA8B,MAAQA,GAA8B,IAAI,IAAM,IAAQ5B,GAAqE,GAAlD1O,GAAmB7d,EAAQ,IAAM6V,GAAa,GAAY,GAC3S,GAAI8W,IAAmB,CAAC4B,GAA4B,CAChD,IAAIC,GAAmB3Q,GAAmB7d,EAAQ,IAC9CyuB,GAA0BxR,GAAoB,IAAI7F,CAAS,EAC/D6F,GAAoB,IAAI7F,EAAWG,EAAQ,EAE3C,IAAImX,GAAkB7Q,GAAmB7d,EAAQ,IACjDid,GAAoB,IAAI7F,EAAWqX,EAAuB,EAC1DH,GAA2BE,KAAqBE,GAC3CJ,KACDrR,GAAoB,IAAI7F,EAAWoX,GAAmB,CAAC,EACvDE,GAAkB7Q,GAAmB7d,EAAQ,IAC7Cid,GAAoB,IAAI7F,EAAWqX,EAAuB,EAC1DH,GAA2BE,KAAqBE,GAEvD,CACD,IAAIC,IAAaJ,IAA8BD,KAA6B3B,IAAmB,CAACrB,EAC5FsD,GAAmBpD,EAAoBmD,GAAWnQ,EAAe,EACjEqQ,GAAe,CAACF,IAAanQ,GAG7BsQ,GAAalZ,IAA0B+W,IAAmB,CAACrB,EAAmBnoB,EAAK,MAAMgrB,GAA8B,OAASA,GAA8B,GAAG,IAAM,EAAsF,GAC7PY,GAAoBvD,EAAoBsD,GAAYrQ,EAAgB,EACpEuQ,GAAgB,CAACF,IAAcrQ,GAI/BwQ,GAAiBN,IAAahZ,IAAiB,CAACA,GAChDuZ,GAAiBJ,IAAcnZ,IAAiB,CAACA,GACjDwZ,GAASjB,GAA0BrX,GAAiB,IAAMO,EAAW,CAAC6X,GAAe,CAACC,EAAa,EAGnGE,GAASlB,GAA0BvX,EAAe,EAGlD0Y,EAAoB,CAAA,EACpBC,EAAwB,CAAA,EAGxBC,GAAc,UAAY,CAE1B,MAAO,CACH,EAAG1R,GAAmB7d,EAAQ,IAC9B,EAAG6d,GAAmB7d,EAAQ,GAC1D,CACA,EACwBwvB,GAAkB,UAAY,CAI9B,MAAO,CACH,EAAGxR,GAAsBhe,EAAQ,IAAMmD,EAAK,IAAI,EAAG+a,GAAsBle,EAAQ,IAAMke,GAAsBle,EAAQ,GAAG,EACxH,EAAGge,GAAsBhe,EAAQ,IAAMmD,EAAK,IAAI,EAAG+a,GAAsBle,EAAQ,IAAMke,GAAsBle,EAAQ,GAAG,CACpJ,CACA,EAGwByvB,GAAmB5Z,GAAYoY,GAAQ,EAAIA,GAAQ,EACnDyB,GAAmB5Z,GAAYmY,GAAQ,EAAIA,GAAQ,EA8BvD,GA7BAwB,IAAoBlD,GAAkB,EAAI,EAC1CmD,IAAoBnD,GAAkB,EAAI,EAC1C0B,GAAQ,EAAIzC,EAAoByC,GAAStP,EAAgB,EAGzD5I,GAAWoZ,GAAO,EAAIA,GAAO,EAC7BnZ,GAAWmZ,GAAO,EAAIA,GAAO,EAC7BA,GAAO,EAAI3D,EAAoB2D,GAAQvQ,EAAe,EAGtD3I,GAAWmZ,GAAO,EAAIA,GAAO,EAC7BlZ,GAAWkZ,GAAO,EAAIA,GAAO,EAC7BA,GAAO,EAAI5D,EAAoB4D,GAAQvQ,EAAe,EAGtDqB,GAA6ByN,GAC7B7O,GAAqB+O,GACrBnP,GAAqBqP,GACrBvP,GAAkBmQ,GAClBlQ,GAAmBqQ,GACnBnQ,GAAmBsP,GACnBrP,GAAkBuQ,GAClBtQ,GAAkBuQ,GAGdtB,IAAuBlY,IACvB+G,GAAyB,IAAIrF,GAAW+W,EAAU,EAGlDJ,GAAQ,GAAKH,IAAuBtB,IAA0BoC,IAAoBG,IAAqBf,IAAoBpB,GAAwB,CACnJ,IAAI+C,GAAoB,CAAA,EACpBC,GAAc,CAAA,EACdC,GAAgB,CAAC5B,GAAQ,EAAGA,GAAQ,EAAGA,GAAQ,EAAGA,GAAQ,CAAC,EAE/D1J,GAAsB+K,EAAuB3Y,GAAiB,CAAC,CAACsX,GAAQ,EAAG,CAACA,GAAQ,EAAG,CAACA,GAAQ,EAAG,CAACA,GAAQ,CAAC,CAAC,EAC1G1B,IACAhI,GAAsBoL,GAAmB1rB,EAAW4rB,EAAa,EACjEtL,GAAsBhP,EAAcqa,GAAcP,EAAmBzY,EAAgB,IAGrF2N,GAAsBoL,GAAmB1rB,CAAS,EAClDsgB,GAAsBhP,EAAcqa,GAAcP,EAAmBzY,GAAkBiZ,EAAa,GAGxGhT,GAAgB,IAAI8S,EAAiB,EACrClT,GAAe,IAAImT,EAAW,CACjC,CAGDpZ,GAAgBgZ,GAAe,EAG/B,IAAIM,GAAeva,EAAciR,GAAc,EAAK,GAChDuJ,GAAsBxa,GAAeiW,EAAoBsE,GAAc1P,EAAkB,EACzF4P,GAAsBza,GAAeua,GAAe,CACpD,EAAG3C,GAAmB2C,GAAa,cAAgBA,GAAa,eAChE,EAAGzC,GAAoByC,GAAa,eAAiBA,GAAa,eACrE,EAAG,GA6CJ,GA5CA1P,GAAqB0P,GAGjBhB,KAAeC,IAAqBvC,IAA0BwB,IAAoBC,GAAQ,GAAKkB,GAAO,GACtGE,EAAkBhY,IAAcE,IAE3BwX,IAAqBvC,MAC1B6C,EAAkBhY,IAAcK,IAEhCiX,KAAcC,IAAoBpC,IAA0BwB,IAAoBC,GAAQ,GAAKkB,GAAO,GAAKrB,KACzGuB,EAAkBjY,GAAaG,GAC/B+X,EAAsBnY,GAAeC,GAAaM,KAE7CkX,IAAoBpC,MACzB6C,EAAkBjY,GAAaM,GAC/B2X,EAAkB/X,IAAarT,EAC/BqrB,EAAsBnY,GAAeC,GAAanT,GAElD0qB,IAEAW,EAAsBlY,GAAaG,GAEnC8X,EAAkBjY,GAAanX,GAAQ,kBAAkBmX,EAAW,uBAAuB,GAAKG,GAChG8X,EAAkB/X,IAAa+W,IAG/BiB,EAAsBlY,GAAanT,EAEnC6qB,GAEAQ,EAAsBjY,IAAc2Y,GAAoB,GAAK9R,GAAsBle,EAAQ,IAG3FsvB,EAAsBjY,IAAcpT,EAEpC0oB,IACA1P,GAAoB,IAAIqS,CAAqB,EACjDvS,GAAgB,IAAIsS,CAAiB,EAGrCA,EAAoB,CAAA,EACpBC,EAAwB,CAAA,EAGpBrE,GAAmBC,GAAsB6E,IAAuBjC,IAAuBE,IAAoBxB,IAA0BoC,IAAoBD,IAAaI,IAAqBD,IAAchC,IAAuCI,IAA2BR,IAAqBJ,IAAiBT,IAA+BE,GAA6BI,IAAkCF,IAAmCmB,IAA2BE,IAA4BM,GAA6B,CACtgB,IAAIve,GAAc,WACd4gB,GAAe5gB,GAAc,KAC7B6gB,GAAe7gB,GAAc,KAC7BC,GAAY,SACZ6gB,GAAa,UAIjB,GAAI,CAACtb,EAAyB,CAC1B,IAAIub,GAA0B,CAAA,EAC1BC,GAAY/R,GAAkB,GAAKC,GAAmB,IAAM,CAACsO,GAAgCrY,EAA2B,EAAIsI,GAAiB,IAAIsR,EAAS,EAAI,CAACrZ,EAAqB,EAAK,EACzLub,GAAiBhS,GAAkB,GAAKC,GAAmB,IAAM,CAACsO,GAAgCrY,EAA2B,EAAIsI,GAAiB,IAAI9F,EAAU,EAAI,CAACjC,EAAqB,EAAK,EACnMwP,GAAsB6L,GAAyBnsB,CAAS,EACxD6Y,GAAiB,IAAIsT,EAAuB,CAC/C,CAGD,IAAI3H,GAAwBC,KAExB6H,GAAc,CAEd,EAAGP,GAAoB,GAAKvH,GAAsBzoB,EAAQ,IAC1D,EAAGgwB,GAAoB,GAAKvH,GAAsBzoB,EAAQ,GACtF,EAC4BuQ,GAAa,CACb,EAAGkY,GAAsBzoB,EAAQ,IACjC,EAAGyoB,GAAsBzoB,EAAQ,GAC7D,EAG6B6U,IACDub,GAAwBpZ,IAAcgY,GAAgB/qB,EAAYqsB,GAClEF,GAAwBhC,IAAaS,GAAe5qB,EAAYosB,GAChEvT,GAAiB,IAAIsT,EAAuB,GAEhD5Z,GAAgBgZ,GAAe,EAG/B,IAAI3I,GAAW0I,KACXiB,GAAuB,CACvB,EAAG3J,GAAS,EAAI5Q,GAAWF,IAAYJ,GAAe,EAAIE,IAC1D,EAAGgR,GAAS,EAAI3Q,GAAWF,IAAYL,GAAe,EAAIG,GACtF,EAC4B2a,GAAkB,CAGlB,EAAGttB,EAAK,KAAKwrB,GAAY4B,GAAY,EAAIhgB,GAAW,GAAKkf,GAAkBe,GAAqB,CAAC,EACjG,EAAGrtB,EAAK,KAAK2rB,GAAayB,GAAY,EAAIhgB,GAAW,GAAKmf,GAAkBc,GAAqB,CAAC,CAC9H,EAKwB,GAJAC,GAAgB,EAAIjF,EAAoBiF,GAAiBvR,EAAqB,EAC9EA,GAAwBuR,GAGpB9D,GAAiB,EAEb8D,GAAgB,GAAM3B,IAAcH,MACpCW,EAAsBlY,GAAaqZ,GAAgB,EACnDnB,EAAsBjY,IAAcoZ,GAAgB,EAG/Clb,IACDgb,GAAc,CAEV,EAAG9H,GAAsBzoB,EAAQ,IACjC,EAAGyoB,GAAsBzoB,EAAQ,GACzE,IAG4B,IAAI0wB,GAAmB,CAAA,EACnBC,GAAmC,SAAUC,GAAY,CACzD,IAAIC,GAAgBC,GAAiBF,EAAU,EAC3CG,GAAKF,GAAc,KACnBG,GAAQH,GAAc,cACtBI,GAAWL,GAAajC,GAAYG,GACpCoC,GAAaN,GAAa7a,GAAWC,GACrCmb,GAAcP,GAAa/a,GAAYC,GACvCsb,GAAaR,GAAa3a,GAAWC,GACrCmb,GAAe7a,GAAcua,IAAMG,GAAaE,IAAczb,GAAe,EAAIwb,KAGjF,CAACF,IAAa,CAACA,IAAY9B,GAAO,KAClCG,EAAsB0B,IAASR,GAAqBO,IAAM,GAG1DE,IAAaV,GAAYQ,IAAMM,KAAkBT,IAAcrb,EAAc,CAACoY,GAAuB,MACjGpY,IACAmb,GAAiBM,IAASpJ,GAAoB1K,GAAsB,IAAI8T,EAAK,CAAC,EAAI,GACtF1B,EAAsB0B,KAAU,GAIhCT,GAAYQ,IAAM,IAClBzB,EAAsB0B,IAAS7tB,EAAK,IAAI,EAAGmsB,EAAsB0B,GAAM,EAC3G,EAC4BL,GAAiC,EAAI,EACrCA,GAAiC,EAAK,EAElCpb,GACA2H,GAAsB,IAAIwT,EAAgB,EAC9CzT,GAAoB,IAAIqS,CAAqB,CAChD,CACGX,KACAU,EAAkBjY,GAAaM,IAC/BiX,IAAa,CAAChZ,IAAgB,CAACkL,KAC/BwO,EAAkB/X,IAAa,QAGnCyF,GAAgB,IAAIsS,CAAiB,EACrCA,EAAoB,CAAA,EAGpB,IAAIiC,GAAoB,CACpB,EAAG7I,GAAsBzoB,EAAQ,IACjC,EAAGyoB,GAAsBzoB,EAAQ,GAC7D,EACwBsxB,GAAkB,EAAIpG,EAAqBM,EAAoB8F,GAAmBlT,EAAuB,EACzGA,GAA0BkT,GAG1B9a,GAAgBgZ,GAAe,EAE/B3I,GAAW0I,GAAW,EACtBtE,EAAkBO,EAAoB3E,GAAU1I,EAAc,EAC9DA,GAAiB0I,GAEjB,IAAI0K,GAA4Bhc,IAAgBiB,GAAc,IAAM,GAAKA,GAAc,IAAM,GACzFgb,GAAyBpS,GACzBqS,GAAuB,CAAA,EACvBC,GAAuB,CAAA,EACvBC,GAAsB,CAAA,EACtBC,GAAiB,CAAA,EACjBC,GAAc,CAAA,EACdC,GAAe,CAAA,EACfC,GAAY,CAAA,EACZC,GAAehU,GAAsBhe,EAAQ,KAAI,EACjDiyB,GAAuB,SAAUrB,GAAY,CAC7C,IAAIC,GAAgBC,GAAiBF,EAAU,EAC3CsB,GAAwBpB,GAAiB,CAACF,EAAU,EACpDuB,GAAMD,GAAsB,KAC5BE,GAAKvB,GAAc,KACnBE,GAAKF,GAAc,KACnBwB,GAAcxB,GAAc,cAC5ByB,GAAY7a,GAAaoZ,GAAc,UAAY,MACnD0B,GAA2BP,GAAaK,IAAelvB,EAAK,IAAI6uB,GAAaK,IAAe7b,GAAcua,GAAG,EAAI,EACjHyB,GAAgChB,IAA0BA,GAAuBY,IAAM,GAAKnU,GAAuBqU,MAAe,EACtIb,GAAqBW,IAAMnF,GAAiBmF,MAAQ,MACpDV,GAAqBU,IAAMnF,GAAiBmF,MAAQ,MACpDT,GAAoBS,IAAMnF,GAAiBmF,MAAQ,IACnDR,GAAeQ,IAAMjvB,EAAK,IAAI,EAAGA,EAAK,OAAOmuB,GAAkBP,IAAMva,GAAcua,KAAO,GAAG,EAAI,GAAG,EACpGa,GAAeQ,KAAQb,IAA8BiB,IAAiCD,GAA2B,GAAKA,GAA2B,EAAM,EAAI,EAC3JV,GAAYO,IAAMR,GAAeQ,IAAM,EAKvCN,GAAaM,IAAMX,GAAqBW,KAAOV,GAAqBU,IAAOP,GAAYM,KAAQ,CAACV,GAAqBU,KAAQ,CAACT,GAAqBS,IAAQN,GAAYO,IACvKN,GAAaM,GAAK,KAAON,GAAaM,IAAOT,GAAoBS,KAAOX,GAAqBW,IAAO,GAEpGL,GAAUK,IAAMP,GAAYO,KAAON,GAAaM,GAAK,IACjF,EAYwB,GAXAH,GAAqB,EAAI,EACzBA,GAAqB,EAAK,EAE1BL,GAAe,EAAIpG,EAAoBoG,GAAgBxS,EAAoB,EAC3EA,GAAuBwS,GACvBC,GAAY,EAAIrG,EAAoBqG,GAAavT,EAAiB,EAClEA,GAAoBuT,GACpBC,GAAa,EAAItG,EAAoBsG,GAAcvT,EAAkB,EACrEA,GAAqBuT,GAGjBtd,EAA2B,GAAKA,EAA2B,EAAG,CAC9D,IAAIie,GAAe,uBACfC,GAA2B,CAAA,EAC3BC,GAAiB,CAAA,EACjBC,GAAiBzH,EACjB0H,IAEAhB,GAAY,GAAKA,GAAY,KAC7Bc,GAAe,EAAIne,EAA2B,GAAKqd,GAAY,EAAIP,GAAkB,EAAI7c,GAA2B,EAAIxQ,EACxH0uB,GAAe,EAAIne,EAA2B,GAAKqd,GAAY,EAAIP,GAAkB,EAAI7c,GAA2B,EAAIxQ,EACxH2uB,GAAiBpH,EAAoBmH,GAAgBtU,EAAwB,EAC7EA,GAA2BsU,KAG3Bd,GAAY,GAAKC,GAAa,GAAKR,GAAkB,GAAKxD,IAAuBc,IAAoBG,IAAqBJ,IAAaG,IAAchC,MACrJuC,EAAkB1Y,GAAkB0X,IAAcgB,EAAkBxY,GAAkBwX,IAAcpqB,EACpG4uB,GAAuB,SAAUjC,GAAY,CACzC,IAAIC,GAAgBC,GAAiBF,EAAU,EAC3CsB,GAAwBpB,GAAiB,CAACF,EAAU,EACpDwB,GAAKvB,GAAc,KACnBiC,GAAelC,GAAa5Z,GAAaoX,GACzC2E,GAAmBnC,GAAa9B,GAAaH,GAE7Cna,EAA2B4d,KAAOP,GAAYO,KAAON,GAAaM,GAAK,MACvE/C,EAAkB1Y,GAAkBmc,IAAgBC,GAAoBlG,GAA+B5oB,EAAYwQ,GAA2B2d,IAAOnuB,EACrJorB,EAAkBxY,GAAkBic,KAAkBlC,GAAa,CAACmC,GAAmB,KAAS,CAAClG,GAAiCpY,GAA2B2d,IAAMK,GAAgBxuB,IAGnL0uB,GAAeT,GAAsB,MACjC7C,EAAkB1Y,GAAkBmc,IACpCzD,EAAkBxY,GAAkBic,IAAgB7uB,EACxD2uB,GAAiB,GAEzD,EAEoC/d,EACAme,GAAelW,GAAkBjD,GAA6C,CAACgT,EAA4B,GAG3GgG,GAAqB,EAAI,EACzBA,GAAqB,EAAK,IAG9BhG,KACA8F,GAAe,EAAIA,GAAe,EAAI1uB,EACtC2uB,GAAiB,IAEjBA,IAAkB,CAAC/d,IACnB6d,GAAyBtb,GAAa0a,GAAa,EAAIa,GAAe,EAAI1uB,EAC1EyuB,GAAyBrb,IAAcya,GAAa,EAAIa,GAAe,EAAI1uB,EAEtE+Y,KACDA,GAAyBlZ,EAAUuf,GAAYrJ,EAA+B,CAAC,EAC/E8C,GAAiB,QAAQE,EAAsB,GAEnDA,GAAuB,IAAI0V,EAAwB,GAEvD3V,GAAgB,IAAIsS,CAAiB,CACxC,CAED,IAAI4D,GAAqB,CAAA,EACrBtD,GAAoB,CAAA,EACpBuD,GACJ,IAAIjI,GAAmB4G,GAAY,GAAKC,GAAa,GAAKR,GAAkB,GAAKpE,IAA2Bc,IAAoBlB,IAAuCgB,IAAuBpB,IAAqBqC,MAC/MkE,GAAmB5E,IAAcpqB,EACjCivB,GAAiB,SAAUtC,GAAY,CACnC,IAAIC,GAAgBC,GAAiBF,EAAU,EAC3CsB,GAAwBpB,GAAiB,CAACF,EAAU,EACpDwB,GAAKvB,GAAc,KACnBsC,GAAKtC,GAAc,KACnBiC,GAAelC,GAAa5Z,GAAaoX,GAEzClK,GAAQ,UAAY,CACpB+O,GAAmBH,IAAgB7uB,EACnCoS,GAAmB6b,GAAsB,MAAQ,CACrF,EACoCL,GAAYO,KAAON,GAAaM,GAAK,MACrCa,GAAmB5jB,GAAc8jB,IAAM1b,GACnCoV,IAAgChY,EAChCqP,MAGA+O,GAAmBH,IAAgB,EAAEte,EAA2B4d,IAAM3d,GAA2B2d,IAAMrd,EAAqBqd,KAC5H/b,GAAmB6b,GAAsB,MAAQ1d,EAA2B4d,IAAM3d,GAA2Byd,GAAsB,MAAQ,KAG/Ie,GAAmB5jB,GAAc8jB,IAAMlvB,EACvCigB,KAEpC,EAC4BgP,GAAe,EAAI,EACnBA,GAAe,EAAK,EAOhB,CAACre,IACG2B,GAAc,EAAIC,GAAwB,GAAKD,GAAc,EAAIC,GAAwB,KACxFob,GAAY,GAAKC,GAAa,GAAK,CAACtd,EAA2B,GAAOqd,GAAY,GAAKC,GAAa,GAAK,CAACtd,EAA2B,IAC1Iye,GAAmBrc,GAAmBE,IAAWL,GAAwB,EACzEwc,GAAmBtc,GAAkBG,IAAW,CAACL,GAAwB,EAEzEwc,GAAmBrc,GAAmByX,IAAc5X,GAAwB,EAC5Ewc,GAAmBtc,GAAkB0X,IAAc,CAAC5X,GAAwB,GAG5Ewc,GAAmBrc,GAAmBE,IAClCmc,GAAmBtc,GAAkBG,IACrCmc,GAAmBrc,GAAmByX,IACtC4E,GAAmBtc,GAAkB0X,IAAcpqB,EAE3DgvB,GAAmBrc,GAAmBwX,IAClC6E,GAAmBtc,GAAkByX,IAAanqB,EAGjD4tB,GAAY,GAAKC,GAAa,GAAOD,GAAY,GAAKC,GAAa,GAAMP,GAEtEhc,GAAegc,KACf5B,GAAkBM,IACdN,GAAkBO,IAAgB5gB,KAItC,CAACmd,IAAeiF,GAAqB,GAAKD,GAAqB,GAAKC,GAAqB,GAAKD,GAAqB,KAE/Glc,IACAoa,GAAkBM,IACdN,GAAkBO,IAAgBjsB,GAE1CgvB,GAAmBhD,IACfgD,GAAmB/C,IAAgBC,IAI/CtT,GAAgB,IAAI8S,EAAiB,EACrC7S,GAAiB,IAAImW,EAAkB,EACvCA,GAAqB,CAAA,GAGhBpB,GAAY,GAAK7D,IAAoBY,IAAoBG,KAAsB,EAAEva,EAA2B,GAAKA,EAA2B,IAAI,CACjJ,IAAI4e,GAAelV,GAAsBle,EAAQ,GAEjDozB,GAAa,gBAAkB,WAC/BA,GAAa,QAAU,SAChBlV,GAAsBle,EAAQ,IACrCozB,GAAa,QAAUnvB,EACvBmvB,GAAa,gBAAkBnvB,CAClC,CAcL,GADAorB,EAAoB,CAAA,EAChBvB,IAAuBc,IAAoBG,GAC3C,GAAI5Y,IAAUwY,GAAW,CACrB,IAAI0E,GAAWtW,GAAgB,IAAIzF,EAAS,EACxCgc,GAAsBnwB,EAAK,MAAM4Z,GAAgB,IAAIzF,GAAWrT,CAAS,EAAE,IAAIgT,GAAUhT,CAAS,EAAE,SAAU,EAAC,IAAI,EACvH8Y,GAAgB,IAAIzF,GAAW+b,EAAQ,EACvC,IAAIE,GAAmBpwB,EAAK,MAAM4Z,GAAgB,SAAQ,EAAG,IAAI,EAE7DuW,KAAwBC,KACxBlE,EAAkBpY,IAAYqc,GACrC,MAEGjE,EAAkBpY,IAAYhT,EAMtC,GAHA8Y,GAAgB,IAAIsS,CAAiB,EAGjC9Z,GAAe2V,EAAoB,CACnC,IAAIsI,GAAeC,KACnB,GAAID,GAAc,CACd,IAAIE,GAAsBvT,KAAuBtgB,EAAY,GAAO2zB,GAAa,QAAUrT,GAAmB,MAC1GwT,GAAYH,GAAa,WACzBI,GAAYJ,GAAa,cACzBK,GAAYL,GAAa,WACzBM,GAAUN,GAAa,MACvBO,GAAUP,GAAa,SACvBQ,GAAYR,GAAa,gBACzBS,GAAYT,GAAa,WACzBU,GAAwBF,IAAaC,IAAahT,GAClDkT,GAAuB,CACvB,EAAI,CAACxG,IAAyBiG,KAAcG,IAAWJ,KAAcE,GAAczU,GAAqB,EAAI,GAC5G,GAAIuO,GAAuBuG,IAAwBR,KAAwBlC,GAA0B/F,EAAW,IAAM+F,GAAuB,EAAK,KAAU0C,IAAwBR,KAAwBC,KAAcG,IAAW1U,GAAqB,EAAI,EAClS,EACgCqM,EAAW,EAAI0I,GAAqB,EAAI,GAAMhe,IAAU4J,IAAsBrL,EAAmB,EAAI,EAAIyf,GAAqB,EAAK1I,EAAW,EAC9IA,EAAW,EAAI0I,GAAqB,EAAI,GAAKA,GAAqB,EAAI1I,EAAW,CACpF,CACDtL,GAAqBqT,EACxB,CACGrd,IAAUzB,EAAmB,GAAKF,EAA2B,GAAKqd,GAAY,GAAK9R,KACnF0L,EAAW,GAAKpV,GAAmB,GAAK,GACxCsY,IACAjS,EAAaxY,IAAgB,CAAC,EAC9B4qB,IACApS,EAAavY,IAAe,CAAC,EACjC2Y,GAAiB5Y,IAAgBunB,EAAW,CAAC,EAAEtnB,IAAesnB,EAAW,CAAC,EAG1E,IAAI2I,GAA8BxI,IAAyB,IACvDyI,GAA6BzI,IAAyB,IACtD0I,GAA2B1I,IAAyB,IACpD2I,GAA8B,SAAUC,GAAOC,GAAO,CACtDA,GAAQA,KAAU50B,EAAY20B,GAAQC,GACtCC,GAA2B,GAAMF,GAAOzC,GAAU,CAAC,EACnD2C,GAA2B,GAAOD,GAAO1C,GAAU,CAAC,CAChF,EAGwBiB,GAAetW,EAAcpD,GAAwBwY,GAAa,GAAKA,GAAa,CAAC,EACrFkB,GAAetW,EAAcnD,GAAyBuY,GAAa,CAAC,EACpEkB,GAAetW,EAAclD,GAAyBsY,GAAa,CAAC,EAGhEhE,IAAuB,CAACtY,GACxBwd,GAAetW,EAAcvD,GAAmBhD,EAAM,EAItDX,GACAgY,GAAS9Q,EAActD,EAA4B,EACnDkT,KACA0G,GAAetW,EAActD,GAA8BuI,EAAW,EACtEqR,GAAe7V,GAAyBpC,GAAiC,CAAC4G,EAAW,EACrFqR,GAAe7V,GAAyBnC,GAAkC4G,EAAW,EACrFoR,GAAe7V,GAAyBlC,GAAkC4G,EAAiB,EAC3FmR,GAAe7V,GAAyBjC,GAAkC4G,EAAe,IAIzF+J,IAA+BqB,IAA2B4E,GAAa,GAAKD,GAAY,GAAK/E,MACzFD,GACIC,KACAS,GAAY7Q,EAAcrD,EAAuB,EAC7CwT,IACA0H,GAA4B,EAAK,GAIpCD,GACLC,GAA4BxC,GAAU,EAAGA,GAAU,CAAC,EAE/CqC,GACLG,GAA4B,EAAI,EAE3BF,IACLE,GAA4B,EAAK,IAKrCxI,GAA6Be,MAC7BtF,GAA0B,CAAChG,IAA4B,CAACD,EAAuB,EAC/EyF,GAA0B3F,GAA0B,CAACA,EAAwB,IAI7E4J,GAAmB2G,GAAe,GAAK7C,IAAqBH,IAAoBtC,IAAiB0B,IAAoBxB,IAA0BM,IAAuCgB,MACtL6G,GAA6B,EAAI,EACjCC,GAA6B,EAAI,EACjCD,GAA6B,EAAK,EAClCC,GAA6B,EAAK,GAIlC3I,IACA4I,GAA6B,GAAM7I,EAAwB,EAC3DG,IACA0I,GAA6B,GAAO3I,EAAuB,EAG/D4I,GAAiB,qBAAsB,CACnC,MAAO3e,GACP,IAAK0X,EACR,EAAEC,EAAmB,EACtBgH,GAAiB,oBAAqB,CAClC,MAAO3W,GAAe,EACtB,OAAQA,GAAe,CAC1B,EAAE8M,CAAe,EAClB6J,GAAiB,uBAAwB,CACrC,MAAO1W,GAAwB,EAC/B,OAAQA,GAAwB,CACnC,EAAE8M,CAAkB,EACrB4J,GAAiB,oBAAqB,CAClC,EAAGjD,GAAY,EACf,EAAGA,GAAY,EACf,YAAaC,GAAa,GAC1B,YAAaA,GAAa,GAC1B,QAASA,GAAa,GAAKA,GAAa,CAC3C,EAAED,GAAY,GAAKC,GAAa,CAAC,EAClCgD,GAAiB,0BAA2B,CACxC,EAAGlD,GAAe,EAClB,EAAGA,GAAe,CAC9C,EAA2BA,GAAe,CAAC,CACtB,CAGGpc,GAAW+K,KAAsBjC,GAAkB,GAAKiC,GAAkB,KAErEA,GAAkB,GACnBmH,KACAlT,EAA2B,GAAK8J,GAAkB,GAClDvB,GAAgB,IAAI7F,GAAeE,EAAWmJ,GAAkB,EAAI9L,GAA2B,CAAC,EAChGD,EAA2B,GAAK8J,GAAkB,GAClDvB,GAAgB,IAAI7F,GAAeG,GAAYkJ,GAAkB,EAAI9L,GAA2B,CAAC,EACrG8L,GAAkB,EAAI,IAGtBlL,GAAgB+V,EAAe,cAC/B2J,KAMJD,GAAiB,YAAa,CAAE,OAAQ3J,CAAO,CAAA,EAClD,CAKD,SAAS4J,IAAuB,CACvBxf,GACD+R,GAAiB,SAAUzmB,EAAG0mB,EAAsB,CAChDxK,GAAgB,KAAKwK,CAAoB,EAAE,KAAK,SAAU,EAAGnhB,EAAI,CAEzD3E,EAAc,IAAI2E,EAAIgW,EAAiB,EAAI,IAC3CA,GAAkB,KAAKhW,CAAE,EACzBtC,EAAUsC,CAAE,EACP,IAAI+V,GAAwBiL,EAAoB,EAChD,GAAGjL,GAAwBiL,EAAoB,EAExF,CAA6B,CAC7B,CAAyB,CAER,CASD,SAAS4N,GAAWC,EAAY,CAC5B,IAAIC,EAAgBrpB,EAAgB,UAAUopB,EAAYppB,EAAgB,UAAW,GAAM8P,EAAe,EAE1G,OAAAA,GAAkB4P,GAAW,CAAE,EAAE5P,GAAiBuZ,EAAc,QAAQ,EACxEtZ,GAA0B2P,GAAW,CAAE,EAAE3P,GAAyBsZ,EAAc,SAAS,EAElFA,EAAc,SACxB,CAaD,SAASC,GAAkB1N,EAAS,CAChC,IAAI2N,EAAY,SACZC,EAA8B,0BAC9BC,EAA+B7b,GAA4BzV,GAAYsW,GACvEib,EAAgBhgB,EAAcvR,GAAYsW,GAAwBrW,EAClEuxB,EAAa5Z,GAAwB,SAAS,eAC9C6Z,EAAgB,CAAA,EAChBC,EAAoB,UAAY,CAChC,IAAIC,EAAuBlO,EAAUhL,GAAiBC,EACtDjX,GAAKgwB,EAAe,SAAUpwB,EAAKQ,EAAO,CAClCiG,EAAKjG,CAAK,GAAK9F,EAAM,IACjBsF,GAAOrF,EAAQ,EACf21B,EAAqB,SAAS9vB,CAAK,EAEnC8vB,EAAqB,KAAKtwB,EAAKQ,CAAK,EAExE,CAAyB,CACzB,EACwB+vB,EAAwB,CACxB/c,GACAC,GACAC,GACAK,GACAD,GACAH,GACAC,GACAC,GACAG,GACAC,GACAC,GACAC,GACA8B,GACA7B,GACAa,GACA0F,EAAe,EAAE,KAAKhc,EAAS,EAC/B6xB,EAAiB,CAAA,EAGrBnZ,EAAeA,IAAiBnH,EAAeG,GAAa+G,GAAe2Y,GAAU,EAAGA,GAAY,EAACA,KAAaA,GAAU,EAAKtxB,EAAUuf,GAAYtK,EAA6B,CAAC,EAAK0D,IAC1LM,GAAkBA,IAAmB+Y,GAA2B/b,GAA2Bwb,CAAa,EACxGzY,GAAmBA,IAAoBgZ,GAA2Blc,GAA4B2b,CAAa,EAC3G1Y,GAAkBA,IAAmBiZ,GAA2Bnc,GAA2B4b,CAAa,EACxG3Y,GAAuBA,IAAwBkZ,GAA2BT,CAA2B,EACrGnY,GAAwBA,KAA0B3H,EAAcugB,GAA2Bpc,EAA8B,EAAI7Z,GAGzH6V,IACA8X,GAAS9Q,EAAc5D,EAA4B,EAInD2O,GACA8F,GAAY7Q,EAAckZ,CAAqB,EAGnDJ,EAAa1pB,EAAK0pB,CAAU,GAAKz1B,EAAM,EAAIy1B,EAAW,MAAMxxB,EAAS,EAAIwxB,EACrE/zB,EAAc,IAAI+zB,CAAU,GAAKjgB,GACjC9P,GAAK+vB,EAAY,SAAU30B,EAAGC,EAAG,CACzBgL,EAAKhL,CAAC,GAAKf,EAAM,IACjB01B,EAAc30B,GAAK2mB,EAAU/K,EAAa,KAAK5b,CAAC,EAAI2b,GAAe,KAAK3b,CAAC,EAEzG,CAAyB,EAGA2mB,GAmDG/R,IAAcL,GAEduH,GAAqB,WAAW,SAGhCnX,GAAK,CAACoX,GAAiBC,GAAkBC,GAAiBG,EAAqB,EAAG,SAAUrc,EAAGwmB,EAAK,CAC5FA,GACAkG,GAAYlG,EAAI,WAAWrnB,EAAQ,CAAC,EAAGub,EAAyB,CAEpG,CAA6B,EAGDiS,GAAS9Q,EAAcnH,EAAcwD,GAAgCF,EAAqB,IAI1FsJ,GAAOvF,EAAoB,EAG3BG,GAAgB,SAAU,EACrB,OAAQ,EACR,OAAQ,EACR,SAEDxH,IACAkH,GAAe,OAAM,EACrB0F,GAAOzF,CAAY,EACnByF,GAAOjF,EAAqB,EAC5BwY,MAIJngB,GACAkH,GAAe,WAAWzc,EAAQ,CAAC,EAEnCwV,GACA+X,GAAYhR,GAAc3D,EAAqB,IAtF/CrD,IACKqG,GAAwB,kBACzBia,EAAeze,GAAaqF,GAAe,IAAIrF,CAAS,EACxDye,EAAexe,IAAcoF,GAAe,IAAIpF,EAAU,GAGzD3B,IACD+G,GAAe,SAASnC,EAAqB,EAAE,KAAKoC,CAAY,EAGpEA,EAAeD,GAAe2Y,GAAY,EAAC,IAAIS,CAAc,GAG5DngB,KAED8X,GAAS/Q,GAAgBlH,EAAc+f,EAA+Bzc,EAAqB,EAG3F6D,EAAa,UAAUK,EAAe,EACjC,UAAUD,EAAgB,EAC1B,UAAUD,EAAe,EACzB,QAAQD,EAAoB,EAGjCG,GAAkB2H,GAAUhI,EAAc7E,GAAUkC,EAAwB,EAC5E+C,GAAmB4H,GAAUhI,EAAc7E,GAAU+B,EAAyB,EAC9EiD,GAAkB6H,GAAUhI,EAAc7E,GAAU8B,EAAwB,EAExEpE,IACAwH,GAAgB,QAAQG,EAAqB,EAC7CwY,MAIJ7gB,GACA2Y,GAAS1Q,GAAkBjD,EAA2C,EACtErF,EAA2B,GAAKA,EAA2B,GAC3DgZ,GAAS1Q,GAAkBhD,EAA0C,EACrEtE,GACAgY,GAASjR,GAAc3D,EAAqB,EAEhDmF,GAA6BnB,GAAqB,GAClDiB,GAAqBnB,EAAa,GAClCsB,GAAwBnB,GAAgB,GACxCoB,GAAyBnB,GAAiB,GAC1CoB,GAAwBnB,GAAgB,GAExCuJ,KAyCP,CAMD,SAASyP,IAAuB,CAC5B,IAAIC,EAAoC,CACpC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClD,GAAI,GACJ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5C,EACwBC,EAA8B,CAAA,EAC9BC,EACAC,EACAC,EAAkB,IAClBC,EAAW,QAEf,SAASC,EAAeC,EAAiB,CACrC/P,KACApX,EAAM,OAAOmI,EAAQ,EACjBgf,GAAmB5hB,IACnB,cAAcuhB,CAAwB,CAC7C,CACD,SAASM,EAAiBp0B,EAAO,CAC7B,OAAAqa,GAAevY,IAAgBwQ,EAAmB,GAAKqL,GAAqB,QAAU,CAAC,EACvFtD,GAAetY,IAAe,CAAC,EAC/B1C,EAAc,KAAKW,CAAK,EACxBX,EAAc,KAAKW,CAAK,EACjB,EACV,CACD,SAASq0B,EAAer0B,EAAO,CAC3B,WAAW,UAAY,CACdkT,GACDghB,GACP,EAAE,EAAE,CACR,CACD,SAASI,GAAkB,CACvBzV,GAAoB,GACpBuM,GAAS9Q,EAAc2Z,CAAQ,CAClC,CACD,SAASM,GAAqB,CAC1B1V,GAAoB,GACpBgV,EAA8B,CAAA,EAC9B1I,GAAY7Q,EAAc2Z,CAAQ,EAClCC,EAAe,EAAI,CACtB,CACD,SAASM,EAAkBx0B,EAAO,CAC9B,IAAIy0B,GAAUz0B,EAAM,QAEhB6C,EAAQ4xB,GAASb,CAAiC,EAAI,IACjDC,EAA4Bj2B,EAAQ,KACrCs2B,IACAJ,EAA2B,YAAYI,EAAgB,IAAO,EAAE,GAEhErxB,EAAQ4xB,GAASZ,CAA2B,EAAI,GAChDA,EAA4B,KAAKY,EAAO,EAEnD,CACD,SAASC,EAAgB10B,EAAO,CAC5B,IAAIy0B,GAAUz0B,EAAM,QAChByE,GAAQ5B,EAAQ4xB,GAASZ,CAA2B,EAEpDhxB,EAAQ4xB,GAASb,CAAiC,EAAI,IAClDnvB,GAAQ,IACRovB,EAA4B,OAAOpvB,GAAO,CAAC,EAC1CovB,EAA4Bj2B,EAAQ,IACrCs2B,EAAe,EAAI,EAE9B,CACD,SAASS,GAAuB30B,EAAO,CAC/Bkd,KAAqB,KAEzBld,EAAQA,EAAM,eAAiBA,EAC3BmnB,GAA2BnnB,EAAM,YAAY,GAC7CgN,EAAM,OAAOmI,EAAQ,EAC5B,CACD,SAASyf,GAAiB50B,EAAO,CACxBgU,KACG+f,IAAwBt2B,EACxB,aAAas2B,CAAmB,IAE5B7U,IAA6BC,KAC7ByF,GAA0B,EAAI,EAE7BiQ,GAAkC,GACnCzJ,GAAS9Q,EAAcrD,EAAuB,EAElDyb,GAAiB,gBAAiB1yB,CAAK,GAMtCsf,KACDkT,GAA6B,EAAI,EACjCA,GAA6B,EAAK,GAEtCE,GAAiB,WAAY1yB,CAAK,EAElC+zB,EAAsB,WAAW,UAAY,CACpC7gB,IAED,aAAa6gB,CAAmB,EAChCA,EAAsBt2B,GAElByhB,IAA6BC,KAC7ByF,GAA0B,EAAK,EAE9BiQ,GAAkC,GACnC1J,GAAY7Q,EAAcrD,EAAuB,EAErDyb,GAAiB,eAAgB1yB,CAAK,EAE7C,EAAEg0B,CAAe,EAEzB,CAGG7gB,GACIX,GAAe,GAAK,CAACD,GACrBkO,GAAwBpG,GAAgB,QAAS6Z,CAAc,EAG/DzT,GAAwBpG,GACpB,CAACnE,GAAkBC,EAAc,EACjC,CAACqe,EAAmBE,CAAe,CAAC,EAG5CjU,GAAwBpG,GACpB,CAAChF,GAAY,OAAQ4e,EAAUA,EAAW,KAAK,EAC/C,CAACG,EAAkBC,EAAgBC,EAAiBC,CAAkB,CAAC,GAG3E9T,GAAwB9F,GAAiBtE,GAAwBse,EAAsB,EAE3FlU,GAAwB/F,GAAkBrF,GAAYuf,GAAkB,EAAI,CAC/E,CASD,SAASE,GAAmBzP,EAAS,CACjC,IAAI0P,EAA+B,SAAUC,EAAc,CACvD,IAAIC,EAAqBD,EAAejc,GAAgCC,GACpEkc,EAAYxB,GAA2Bvb,GAAsBvW,GAAYqzB,EAAoB,EAAI,EACjGE,EAAQzB,GAA2Btb,GAA0B8c,CAAS,EACtEE,EAAS1B,GAA2Bpb,GAA2B4c,CAAS,EAE5E,MAAI,CAAC5hB,IAAc,CAAC+R,IAChB6P,EAAU,OAAOC,CAAK,EACtBA,EAAM,OAAOC,CAAM,GAGhB,CACH,WAAYF,EACZ,OAAQC,EACR,QAASC,CACrC,CACA,EACoB,SAASC,EAAkBL,EAAc,CACrC,IAAIvG,EAAgBC,GAAiBsG,CAAY,EAC7CE,EAAYzG,EAAc,WAC1B0G,EAAQ1G,EAAc,OACtB2G,EAAS3G,EAAc,QAEvBnb,IAAcL,EACd5P,GAAK,CAAC6xB,EAAWC,EAAOC,CAAM,EAAG,SAAU32B,EAAGwmB,EAAK,CAC/CkG,GAAYlG,EAAI,WAAWrnB,EAAQ,CAAC,EAAGub,EAAyB,CAChG,CAA6B,EAGD4G,GAAOmV,GAAaH,EAA6BC,CAAY,EAAE,UAAU,CAEhF,CACD,IAAIM,EACAC,EAEClQ,GAiBDgQ,EAAkB,EAAI,EACtBA,MAjBAC,EAAqBP,EAA6B,EAAI,EACtDQ,EAAmBR,EAA4B,EAE/C/Z,GAA8Bsa,EAAmB,WACjDra,GAAmCqa,EAAmB,OACtDpa,GAAoCoa,EAAmB,QACvDna,GAA4Boa,EAAiB,WAC7Cna,GAAiCma,EAAiB,OAClDla,GAAkCka,EAAiB,QAE9CjiB,KACDmH,GAAgB,MAAMU,EAAyB,EAC/CV,GAAgB,MAAMO,EAA2B,GAO5D,CAMD,SAASwa,GAAqBR,EAAc,CACxC,IAAIvG,EAAgBC,GAAiBsG,CAAY,EAC7CS,EAAoBhH,EAAc,MAClCiH,EAAepa,GAAqB,MAAQA,GAC5C0U,EAAKvB,EAAc,KACnBsC,EAAKtC,EAAc,KACnBkH,EAAStgB,GAAaoZ,EAAc,UACpCmH,EAAY,SACZC,EAAgB,aAChBC,EAAgB,QAChBC,EAAuB,EACvBC,EAAuC,CAAC,GAAI,EAAE,EAC9CC,EACAC,GACAC,GACAC,EAEJ,SAASC,GAAmBr2B,EAAO,CAC/B,OAAOwS,IAAgBkjB,EAAe11B,EAAM,SAAW+wB,GAAM1xB,EAAc,KAAKW,CAAK,EAAEgwB,EAC1F,CACD,SAASsG,GAA4Bl4B,EAAM,CACvC,OAAOob,GAAwB,WAAWpb,EAC7C,CACD,SAASm4B,IAA4B,CACjCR,EAAuB,EAC1B,CACD,SAASS,IAA4B,CACjCT,EAAuB,CAC1B,CACD,SAASU,GAA0Bz2B,EAAO,CACtCX,EAAc,KAAKW,CAAK,CAC3B,CACD,SAAS02B,GAAgB12B,EAAO,CACxB6C,EAAQ7C,EAAM,QAASg2B,CAAoC,EAAI,IAC/DO,IACP,CACD,SAASI,GAAc32B,EAAO,CACtB6C,EAAQ7C,EAAM,QAASg2B,CAAoC,EAAI,IAC/DQ,IACP,CACD,SAASI,GAAyB52B,EAAO,CACrC,IAAI62B,GAAgB72B,EAAM,eAAiBA,EACvC82B,GAAeD,GAAc,UAAYp5B,EAC7C,OAAOuW,IAAad,GAAc2hB,GAAgC,GAAM,CAACpX,IAAkCqZ,IAAgB,CAACR,GAA4B,cAAc,EAAK,GAAQj3B,EAAc,KAAKW,CAAK,IAAM,GAAK82B,EACzN,CACD,SAASC,GAAiB/2B,EAAO,CAC7B,GAAI42B,GAAyB52B,CAAK,EAAG,CACjC,IAAIg3B,GAAcvB,EAAkB,aAChCwB,GAAexB,EAAkB,cACjCyB,GAAczB,EAAkB,WAChC0B,IAAad,GAAmBr2B,CAAK,EAAIm2B,IAAmBC,EAC5DgB,GAAqBD,IAAaH,GAAcC,IAChDI,GAAeH,GAAcE,GACjCC,GAAc,SAASA,EAAW,EAAIA,GAAc,EAChDtjB,IAAUihB,GAAgB,CAAC1iB,EAAmB,IAC9C+kB,IAAe,IAEnB3c,GAAiBib,GAAQ50B,EAAK,MAAMm1B,GAAkBmB,EAAW,CAAC,EAE9D/X,IACAkT,GAA6BwC,EAAckB,GAAkBmB,EAAW,EAEvEvkB,GACDzT,EAAc,KAAKW,CAAK,CAC/B,MAEGs3B,GAAqBt3B,CAAK,CACjC,CACD,SAASs3B,GAAqBt3B,EAAO,CAiCjC,GAhCAA,EAAQA,GAASA,EAAM,cAEvB2f,GAA6BzF,GACzB,CAACnE,GAAyBD,GAAuBI,GAAkBC,GAAgBC,EAAoB,EACvG,CAAC2gB,GAAkBO,GAAsBZ,GAAiBC,GAAe5R,EAAqB,EAC9F,EAAI,EACR1lB,EAAc,IAAG,EAAG,UAAW,CAC3BsgB,GAA6BzF,GAAkB4b,EAAeW,GAA2B,GAAM,CAAE,SAAU,EAAI,CAAE,CAC7I,CAAyB,EAGGnX,IACAkT,GAA6BwC,EAAc,EAAI,EAEnD1V,GAAoC,GACpC6L,GAAY/Q,GAAcnB,EAAkB,EAC5CkS,GAAYsD,EAAc,QAASmH,CAAS,EAC5CzK,GAAYsD,EAAc,OAAQmH,CAAS,EAC3CzK,GAAYsD,EAAc,WAAYmH,CAAS,EAE/CM,GAAkBz4B,EAClB04B,GAAkB14B,EAClB24B,EAAyB,EAEzBI,KAEIP,IAAiBx4B,IACjBuP,EAAM,WAAU,EAChB,aAAaipB,CAAY,EACzBA,EAAex4B,GAGfuC,EAAO,CACP,IAAIwI,GAAOiT,GAAmB7d,EAAQ,KAAI,EACtC25B,GAAkBv3B,EAAM,SAAWwI,GAAK,MAAQxI,EAAM,SAAWwI,GAAK,OAASxI,EAAM,SAAWwI,GAAK,KAAOxI,EAAM,SAAWwI,GAAK,OAGjI+uB,IACD1S,MAEA3F,IAA6BC,KAC7ByF,GAA0B,EAAK,CACtC,CACJ,CACD,SAAS4S,GAAuBx3B,EAAO,CAC/B42B,GAAyB52B,CAAK,GAC9By3B,GAA6Bz3B,CAAK,CACzC,CACD,SAASy3B,GAA6Bz3B,EAAO,CACzCk2B,GAAkBxb,GAAiBib,KACnCO,GAAkB,MAAMA,EAAe,EAAI,EAAIA,IAC3CniB,IAAUihB,GAAgB,CAAC1iB,EAAmB,GAAK,CAACyB,MACpDmiB,GAAkBA,GAAkB,EAAI,EAAIA,IAEhDE,EAAyBsB,KAA8B1H,GACvDmG,GAAkBE,GAAmBr2B,CAAK,EAE1Csf,GAAoC,CAACgX,GAA4BT,CAAa,EAC9EzK,GAAShR,GAAcnB,EAAkB,EACzCmS,GAASqD,EAAc,QAASmH,CAAS,EACzCxK,GAASqD,EAAc,WAAYmH,CAAS,EAE5CjW,GAA6BzF,GACzB,CAACnE,GAAyBD,GAAuBM,EAAoB,EACrE,CAAC2gB,GAAkBO,GAAsBvS,EAAqB,CAAC,EACnE1lB,EAAc,IAAG,EAAG,UAAW,CAC3BsgB,GAA6BzF,GAAkB4b,EAAeW,GAA2B,GAAO,CAAE,SAAU,EAAI,CAAE,CAC9I,CAAyB,GAGGjkB,IAAgB,CAACa,KACjBhU,EAAc,KAAKW,CAAK,EAC5BX,EAAc,KAAKW,CAAK,CAC3B,CACD,SAAS23B,GAAsB33B,EAAO,CAClC,GAAI42B,GAAyB52B,CAAK,EAAG,CACjC,IAAI43B,GAAwBnJ,EAAc,MAAM,cAAgB,KAAK,MAAM1tB,EAAK,IAAI,EAAGqT,GAAcqa,EAAc,MAAQzS,GAAwByS,EAAc,KAAK,EAAIA,EAAc,MAAM,YAAY,EACtMoJ,GAAiB92B,EAAK,MAAMqT,GAAcqa,EAAc,MAAQmJ,EAAqB,EACrFE,GAAqB,IAAMF,GAC3BG,GAA4B,IAAMH,GAClCI,GAAcvJ,EAAc,OAAO,OAAM,EAAGA,EAAc,WAC1DwJ,GAAUj4B,EAAM,QAChBk4B,GAAgBl4B,EAAM,SACtBm4B,GAA0BD,IAAiBD,GAC3CG,GAAmB,GACnBtzB,GAAS,SACTuzB,GACAC,GACAC,GAAwB,SAAUC,GAAY,CAC1ClZ,IACAkT,GAA6BwC,EAAcwD,EAAU,CACzF,EACgCC,GAA8B,UAAY,CAC1CF,KACAd,GAA6Bz3B,CAAK,CAClE,EACgC04B,GAAe,UAAY,CAC3B,GAAI,CAACxlB,EAAY,CACb,IAAIylB,IAAexC,GAAkB6B,IAAe5B,EAChDwC,GAAenD,EAAkB,cACjCuB,GAAcvB,EAAkB,aAChCwB,GAAexB,EAAkB,cACjCyB,GAAczB,EAAkB,WAChCpM,GAAaoM,EAAkB,eAC/BoD,GAAiBf,GAAqB/B,EACtC+C,GAAeV,GAAmBr3B,EAAK,IAAIg3B,GAA2Bc,EAAc,EAAIA,GACxFE,GAAwB7B,KAAgByB,GAAe1B,GAAe,IAAOD,GAAcC,KAC3F+B,GAAcjlB,IAAUihB,IAAkB,CAAC1iB,EAAmB,GAAK,CAACA,EAAmB,GAAMqL,IAC7Fsb,GAA0BD,GAAcJ,GAAeD,GAAcC,GAAeD,GACpFO,GAAY,CAAA,EACZC,GAAe,CACf,OAAQr0B,GACR,KAAM,SAAU8M,GAAK,CACb0N,KACA5E,GAAiBib,GAAQ/jB,EAAG,EAC5B4gB,GAA6BwC,EAAcpjB,EAAG,EAErD,CACzC,EACoCmnB,GAAwB,SAASA,EAAqB,EAAIA,GAAwB,EAClFA,GAAwBhlB,IAAUihB,GAAgB,CAAC1iB,EAAmB,EAAK4kB,GAAc6B,GAAyBA,GAI9Gb,IACAxd,GAAiBib,GAAQoD,EAAqB,EAC1CZ,IAGAY,GAAwBre,GAAiBib,KAEzCjb,GAAiBib,GAAQtM,EAAU,EAEnC0P,GAAwBC,IAAe1mB,EAAmB,EAAK4kB,GAAc6B,GAAyBA,GACtGA,GAAwBC,IAAe1mB,EAAmB,EAAI,CAACymB,GAAwBA,GAEvFG,GAAUlJ,GAAM+I,GAChB/rB,EAAM,OAAOksB,GAAW/P,GAAWgQ,GAAc,CAC7C,SAAU,IACV,SAAUV,EACb,CAAA,CAAC,GAGFA,OAGJJ,GAAiBD,GAAmBa,GAA0BZ,GAC9DC,GAAoBU,GACbX,GAAiBO,GAAe3B,IAAgB0B,GAAcC,IAAgBD,GAC9EN,GAAiBO,IAAgBD,GAAcC,GAAe3B,IAAgB0B,GAEjFL,IACA,aAAarC,CAAY,EACzBjpB,EAAM,WAAU,EAChBipB,EAAex4B,EACf86B,GAAsB,EAAI,IAG1BtC,EAAe,WAAWyC,GAAcI,EAAY,EAEpDI,GAAUlJ,IAAOqI,GAAiB,KAAO,MAAQR,GACjD7qB,EAAM,OAAOksB,GAAW/P,GAAWgQ,GAAc,CAC7C,SAAUN,EACb,CAAA,CAAC,GAENT,GAAmB,GAE1B,CACjC,EACgCH,IACA1B,KAEJH,EAAyBsB,KAA8B1H,GACvDmG,GAAkB92B,EAAc,KAAKW,CAAK,EAAEgwB,GAE5C1Q,GAAoC,CAACgX,GAA4BT,CAAa,EAC9EzK,GAAShR,GAAcnB,EAAkB,EACzCmS,GAASqD,EAAc,OAAQmH,CAAS,EACxCxK,GAASqD,EAAc,WAAYmH,CAAS,EAE5CjW,GAA6BzF,GACzB,CAACpE,GAAuBI,GAAkBC,GAAgBC,EAAoB,EAC9E,CAACkhB,GAAsBZ,GAAiBC,GAAe5R,EAAqB,CAAC,EAEjF2T,KACAr5B,EAAc,KAAKW,CAAK,EACxBX,EAAc,KAAKW,CAAK,CAC3B,CACJ,CACD,SAASo5B,GAAuBp5B,EAAO,CAEnCqf,GAA2B,IACvBH,IAA6BC,KAC7ByF,GAA0B,EAAI,CACrC,CACD,SAASyU,GAAuBr5B,EAAO,CACnCqf,GAA2B,IACvBH,IAA6BC,KAC7ByF,GAA0B,EAAK,CACtC,CACD,SAAS0U,GAA0Bt5B,EAAO,CACtCX,EAAc,KAAKW,CAAK,CAC3B,CAEDygB,GAAwBgO,EAAc,QAClC5Y,GACA2hB,EAAsB,EAC1B/W,GAAwBgO,EAAc,OAClC,CAAC5Y,GAAyBG,GAAgBC,EAAc,EACxD,CAAC0hB,GAAuByB,GAAwBC,EAAsB,CAAC,EAC3E5Y,GAAwBgO,EAAc,WAClC5Y,GACAyjB,EAAyB,EAEzB1mB,GACA6N,GAAwBgO,EAAc,WAAYpY,GAAwB,SAAUrW,EAAO,CACnFA,EAAM,SAAWyuB,EAAc,WAAW,KAE9C8D,GAA6ByC,CAAY,EACzCxC,GAA6BwC,CAAY,EACrE,CAAyB,CAER,CAQD,SAAS1C,GAA2B0C,EAAcuE,EAAgB5J,EAAW,CACzE,IAAI6J,EAA2BxE,EAAepe,GAA0CC,GACpF4iB,EAAmBzE,EAAeha,GAA8BG,GAEpEyV,GAAetW,EAAckf,EAA0B,CAACD,CAAc,EACtE3I,GAAe6I,EAAkBjhB,GAA6B,CAACmX,CAAS,CAC3E,CAOD,SAAS/K,GAA0B2U,EAAgBG,EAAW,CAE1D,GADA,aAAa5a,EAA4B,EACrCya,EAEApO,GAAYnQ,GAA6BvC,EAA6B,EAEtE0S,GAAYhQ,GAA2B1C,EAA6B,MAEnE,CACD,IAAIkhB,EACA/D,EAAY,SACZgE,EAAO,UAAY,CACf,CAACva,IAA4B,CAACnM,IAC9BymB,EAAYze,GAAkC,SAAS0a,CAAS,GAAKva,GAAgC,SAASua,CAAS,EACnH,CAAC+D,IAAcza,IAA6BC,IAA2BC,KACvEgM,GAASpQ,GAA6BvC,EAA6B,EACnE,CAACkhB,IAAcza,IAA6BC,IAA2BC,KACvEgM,GAASjQ,GAA2B1C,EAA6B,EAErG,EAC4BuG,GAA2B,GAAK0a,IAAc,GAC9C5a,GAA+B,WAAW8a,EAAM5a,EAAwB,EAExE4a,GACP,CACJ,CAMD,SAASrH,GAA6ByC,EAAc,CAChD,IAAI6E,EAAY,CAAA,EACZpL,EAAgBC,GAAiBsG,CAAY,EAC7CS,EAAoBhH,EAAc,MAClCqL,EAAQ,IAERC,EAAch5B,EAAK,IAAI,EAAGqT,GAAcqa,EAAc,MAAQzS,GAAwByS,EAAc,KAAK,EAC7GoL,EAAUpL,EAAc,eAAkB1tB,EAAK,MAAMg5B,EAAc,IAAMD,CAAK,EAAIA,EAAS,IAEtFjF,GAAkC,GACnCpG,EAAc,QAAQ,IAAIoL,CAAS,EAGvCpE,EAAkB,cAAgBhH,EAAc,QAAQ,GAAG,SAAWA,EAAc,eACpFgH,EAAkB,mBAAqBsE,CAC1C,CAOD,SAASvH,GAA6BwC,EAAcgF,EAAoB,CACpE,IAAIxB,EAAa9uB,EAAKswB,CAAkB,GAAKr8B,EAAM,EAC/Cs8B,EAAqB,IACrBC,EAAoBnmB,IAAUihB,EAC9BvG,EAAgBC,GAAiBsG,CAAY,EAC7CS,EAAoBhH,EAAc,MAClC0L,EAAoB,aACpBC,EAAev8B,GAAQ,aAAa,WAAW,EAC/Cw8B,EAAgBx8B,GAAQ,aAAa,YAAY,EACjDy8B,EAAetF,EAAeta,GAAiB5Y,IAAe,EAAK4Y,GAAiB3Y,MACpFw4B,EAAgBP,IAAuBv8B,GAAa+6B,EAAa8B,EAAeN,EAGhF/C,EAAexB,EAAkB,cACjCuB,GAAcvI,EAAc,OAAO,GAAG,SAAWA,EAAc,eAC/D+L,GAAkBxD,GAAcC,EAChC4C,EAAY,CAAA,EACZY,GACAC,GAKAC,IAAa9e,GAAuBxG,GAAaoZ,EAAc,eAAiB5S,GAAuB,SAAW4S,EAAc,iBAAmBnc,EAAmB,GAAK4nB,EAAoB,GAAK,GACpMU,GAAiB,SAAUr0B,GAAM,CACjC,OAAO,MAAMA,GAAOo0B,EAAS,EAAI,EAAI55B,EAAK,IAAI,EAAGA,EAAK,IAAI,EAAGwF,GAAOo0B,EAAS,CAAC,CACtG,EACwBE,GAAkB,SAAUC,GAAa,CACzC,IAAIC,GAASP,GAAkBM,GAC/B,OAAAC,GAAS,MAAMA,EAAM,EAAI,EAAIA,GAC7BA,GAAUb,GAAqB,CAAC5nB,EAAmB,EAAM0kB,GAAcC,EAAe8D,GAAUA,GAChGA,GAASh6B,EAAK,IAAI,EAAGg6B,EAAM,EACpBA,EAC/B,EACwBD,GAAcF,GAAeN,CAAY,EACzCU,GAAuBJ,GAAeL,CAAa,EACnD3B,GAAeiC,GAAgBG,EAAoB,EACnDC,GAAsBJ,GAAgBC,EAAW,EAErDrF,EAAkB,WAAakF,GAC/BlF,EAAkB,eAAiB6E,EACnC7E,EAAkB,oBAAsBqF,GAEpCjoB,GACA4nB,GAAkBP,EAAoB,EAAElD,GAAcC,EAAe2B,IAAgBA,GAErF8B,GAAiB1F,EAAemF,EAAoBM,GAAkB,SAAWN,EAAoB,MAAQM,GAAkB,MAE/HZ,EAAUO,GAAgBM,GAGtB9nB,IACAinB,EAAUQ,GAAiB7B,GAAcz3B,EAAK,IAAI63B,GAAenD,EAAkB,aAAa,EAAI,EAAIyF,GAAuBzM,EAAc,OAAO,EAAI,MAAQ2L,EAAex4B,GAAYq4B,EAAqB,MAAQp4B,IAG5Ng4B,EAAUpL,EAAc,WAAamK,GAIpC/D,GAAgC,IACjCpG,EAAc,QAAQ,IAAIoL,CAAS,EAG/BhnB,GAAqBD,GAAsB4lB,GAC3C/J,EAAc,QAAQ,IAAIpY,GAAwB,UAAY,CACrDnD,GACDub,EAAc,QAAQ,IAAI4L,EAAex4B,CAAS,CACtF,CAA6B,GAIT4zB,EAAkB,cAAgBmD,GAClCnD,EAAkB,qBAAuBwF,GACzCxF,EAAkB,aAAeuB,EACpC,CAOD,SAASvE,GAA6B0I,EAAS13B,EAAO,CAClD,IAAIigB,EAASjgB,EAAQ,cAAgB,WACjC23B,EAAWD,EAAUlgB,GAAmCC,GACxDmgB,EAAWF,EAAU/f,GAAiCC,GACtDxT,EAAYszB,EAAU9iB,GAA8BE,GAExD6iB,EAAS1X,GAAQ7b,CAAS,EAC1BwzB,EAAS3X,GAAQ7b,CAAS,CAC7B,CAOD,SAAS6mB,GAAiBsG,EAAc,CACpC,MAAO,CACH,cAAeA,EAAehgB,EAAYC,GAC1C,cAAe+f,EAAe,QAAU,SACxC,UAAWA,EAAengB,GAAWH,GACrC,UAAWsgB,EAAe,OAAS,MACnC,KAAMA,EAAezf,GAAQC,GAC7B,KAAMwf,EAAe,IAAM,IAC3B,KAAMA,EAAe,IAAM,IAC3B,KAAMA,EAAe,IAAM,IAC3B,OAAQA,EAAe/Z,GAAmCG,GAC1D,QAAS4Z,EAAe9Z,GAAoCG,GAC5D,WAAY2Z,EAAeha,GAA8BG,GACzD,MAAO6Z,EAAe9gB,GAAwBC,EACtE,CACiB,CASD,SAASmnB,GAAwBjW,EAAS,CACtCtK,GAA0BA,IAA2B2Y,GAA2Bhb,GAA2B,EAAI,EAE1G2M,EAMG/R,IAAcL,EACdkY,GAAYpQ,GAAwB,WAAWnd,EAAQ,CAAC,EAAGub,EAAyB,EAGpF4G,GAAOhF,EAAuB,EAT7BzH,IACDgH,EAAa,OAAOS,EAAuB,CAWtD,CAKD,SAASwgB,IAA6B,CAClC,IAAI7F,EAAepa,GAAqB,MAAQA,GAC5CkgB,EAAoB,CAAA,EACpBC,EAAgB,CAAA,EAChBrF,EAAyB,CAAA,EACzBsF,EAEJ,SAAS3E,EAAiB/2B,EAAO,CAC7B,GAAI42B,EAAyB52B,CAAK,EAAG,CACjC,IAAI27B,EAAaC,EAAe57B,CAAK,EACjCyzB,EAAiB,CAAA,GACjBhU,IAAqBD,MACrBiU,EAAeze,GAAcymB,EAAc,GAAKE,EAAW,EAAIH,EAAkB,GAAKpF,EAAuB,IAC7G1W,IAAmBF,MACnBiU,EAAexe,IAAewmB,EAAc,GAAKE,EAAW,EAAIH,EAAkB,GAAKpF,EAAuB,GAClH9b,EAAa,IAAImZ,CAAc,EAC/Bp0B,EAAc,KAAKW,CAAK,CAC3B,MAEGs3B,EAAqBt3B,CAAK,CAEjC,CACD,SAASs3B,EAAqBt3B,EAAO,CACjC,IAAI67B,EAAiB77B,IAAUvC,EAE/BkiB,GAA6BzF,GACzB,CAAC9D,GAAsBL,GAAyBD,EAAqB,EACrE,CAACiP,GAAuBgS,EAAkBO,CAAoB,EAC9D,EAAI,EAERnM,GAAY/Q,GAAcnB,EAAkB,EACxC8B,GAAwB,gBACxBA,GAAwB,eAAc,EAEtC8gB,IACIH,GACArX,KACJrX,EAAM,OAAOmI,EAAQ,GAEzBumB,EAA4B,EAC/B,CACD,SAAS9E,EAAyB52B,EAAO,CACrC,IAAI62B,EAAgB72B,EAAM,eAAiBA,EACvC82B,EAAeD,EAAc,UAAYp5B,EAC7C,OAAOuW,IAAad,EAAa,GAAQ7T,EAAc,KAAKW,CAAK,IAAM,GAAK82B,CAC/E,CACD,SAAS8E,EAAe57B,EAAO,CAC3B,OAAOwS,IAAgBkjB,EAAe,CAAE,EAAG11B,EAAM,QAAS,EAAGA,EAAM,OAAS,EAAGX,EAAc,KAAKW,CAAK,CAC1G,CAEDygB,GAAwB1F,GAAyBlF,GAAyB,SAAU7V,EAAO,CACnF42B,EAAyB52B,CAAK,GAAK,CAACuf,KAChCd,KACAid,EAA4B,GAC5BpX,MAGJkX,EAAoBI,EAAe57B,CAAK,EAExCy7B,EAAc,EAAIhgB,GAAmB7d,EAAQ,KAAQ2V,GAA2B,EAAZE,IACpEgoB,EAAc,EAAIhgB,GAAmB7d,EAAQ,KAAQ2V,GAA2B,EAAZG,IACpE0iB,EAAyBsB,GAA2B,EAEpD/X,GAA6BzF,GACzB,CAAC9D,GAAsBL,GAAyBD,EAAqB,EACrE,CAACiP,GAAuBgS,EAAkBO,CAAoB,CAAC,EAEnElM,GAAShR,GAAcnB,EAAkB,EACrC8B,GAAwB,YACxBA,GAAwB,WAAU,EAEtC1b,EAAc,KAAKW,CAAK,EACxBX,EAAc,KAAKW,CAAK,EAEpD,CAAqB,CACJ,CAWD,SAAS0yB,GAAiBt0B,EAAM09B,EAAMC,EAAW,CAC7C,GAAIA,IAAc,GAElB,GAAI9oB,EAAc,CACd,IAAI3P,EAAWkW,GAAwB,UAAUpb,GAC7C49B,EAAkB59B,EAClB69B,EAEAD,EAAgB,OAAO,EAAG,CAAC,IAAM,OACjCA,EAAkBA,EAAgB,OAAO,EAAG,CAAC,EAAE,YAAW,EAAKA,EAAgB,OAAO,CAAC,GAEvFtyB,EAAKpG,CAAQ,GAAK3F,EAAM,GACxB2F,EAAS,KAAK0J,EAAO8uB,CAAI,EAE7Bz4B,GAAKoW,GAAa,UAAY,CAC1BwiB,EAAM,KACFvyB,EAAKuyB,EAAI,EAAE,GAAKt+B,EAAM,GACtBs+B,EAAI,GAAGD,EAAiBF,CAAI,CAC5D,CAAyB,CACJ,MACS5oB,GACNkG,GAAqB,KAAK,CAAE,EAAGhb,EAAM09B,CAAO,CAAE,CACrD,CASD,SAAS3Z,GAAsB+Z,EAAiBC,EAAQt9B,EAAQ,CAC5Ds9B,EAASA,GAAUt6B,EACnBhD,EAASA,GAAU,CAACgD,EAAWA,EAAWA,EAAWA,CAAS,EAE9Dq6B,EAAgBC,EAASznB,IAAW7V,EAAO,GAC3Cq9B,EAAgBC,EAASxnB,IAAa9V,EAAO,GAC7Cq9B,EAAgBC,EAASvnB,IAAc/V,EAAO,GAC9Cq9B,EAAgBC,EAAStnB,IAAYhW,EAAO,EAC/C,CAUD,SAASitB,GAA0BqQ,EAAQr9B,EAAQs9B,EAAOC,EAAO,CAC7D,OAAAv9B,EAASA,GAAU+C,EACnBs6B,EAASA,GAAUt6B,EACZ,CACH,EAAGw6B,EAAQ,EAAI7W,GAAoBlL,EAAa,IAAI6hB,EAASznB,GAAU5V,CAAM,CAAC,EAC9E,EAAGs9B,EAAQ,EAAI5W,GAAoBlL,EAAa,IAAI6hB,EAASxnB,GAAY7V,CAAM,CAAC,EAChF,EAAGu9B,EAAQ,EAAI7W,GAAoBlL,EAAa,IAAI6hB,EAASvnB,GAAa9V,CAAM,CAAC,EACjF,EAAGs9B,EAAQ,EAAI5W,GAAoBlL,EAAa,IAAI6hB,EAAStnB,GAAW/V,CAAM,CAAC,CACvG,CACiB,CAOD,SAASo8B,GAAuBtb,EAAS,CACrC,IAAI0c,EAAgBz+B,GAAQ,aAAa,YAAY,EACjD0+B,EAAiB3c,EAAQ,IAAI0c,CAAa,EAC9C,GAAIC,EACA,OAAOA,EAqBX,QApBIC,EAAe,qCACfC,EAAa,IAAI,OAAOD,CAAY,EACpCE,EAAiB,IAAI,OAAO,KAAOF,EAAe,KAAK,EACvDG,EAAa,0CAA0C,MAAM,GAAG,EAChEt+B,EAAS,CAAA,EACTu+B,EACAC,EACAp+B,EAAI,EACJkO,EACAmwB,EAAuB,SAAU3+B,GAAK,CAEtC,GADAy+B,EAAY,CAAA,EACR,CAACz+B,GAAI,MAAMu+B,CAAc,EACzB,OAAOv+B,GACX,KAAOA,GAAI,MAAMs+B,CAAU,GACvBG,EAAU,KAAK,OAAO,EAAE,EACxBz+B,GAAMA,GAAI,QAAQs+B,EAAY56B,CAAS,EAG3C,OAAO+6B,CAC/B,EAC2Bn+B,EAAIk+B,EAAW/+B,EAAQ,GAAIa,IAE9B,IADAo+B,EAAaC,EAAqBld,EAAQ,IAAI0c,EAAgB,IAAMK,EAAWl+B,EAAE,CAAC,EAC7EkO,EAAI,EAAGA,EAAIkwB,EAAWj/B,EAAQ,GAAI+O,IACnCtO,EAAOsO,IAAMtO,EAAOsO,GAAKtO,EAAOsO,GAAK/K,GAAYC,GAAag7B,EAAWlwB,GAEjF,OAAOtO,EAAO,KAAK,IAAI,CAC1B,CAOD,SAAS2lB,GAA0B+Y,EAAyBC,EAAwB,CAChF,IAAI,EACAC,EACAC,EACAC,EAAgB,SAAUn1B,EAASo1B,EAAW,CAE9C,GADAF,EAAW,GACPE,GAAa,OAAOp1B,GAAWrK,EAAM,EAErC,IADAs/B,EAAQj1B,EAAQ,MAAMpG,EAAS,EAC1B,EAAI,EAAG,EAAIq7B,EAAMr/B,EAAQ,GAAI,IAC9Bs/B,GAAY,IAAMD,EAAM,GAAK,IAGrC,OAAOC,CAC/B,EAEoB,OAAO,IAAI,OACP,KAAOzmB,GAAwB,cAC/B0mB,EAAcvf,GAAiBmf,CAAuB,EACtDI,EAActf,GAAemf,CAAsB,EAAG,GAAG,CAChE,CAMD,SAAStF,IAA8B,CACnC,IAAIlvB,EAAOoT,GAAsBhe,EAAQ,KAAI,EAC7C,MAAO,CACH,EAAGiV,GAAoB,GAAK9R,EAAK,MAAMyH,EAAK,KAAK,EAAIoT,GAAsBhe,EAAQ,MAAQ,EAC3F,EAAGiV,GAAoB,GAAK9R,EAAK,MAAMyH,EAAK,MAAM,EAAIoT,GAAsBhe,EAAQ,MAAQ,CACpH,CACiB,CAOD,SAASsU,GAAczQ,EAAG,CACtB,IAAI47B,EAAmB,gBACnBC,EAAiB,cACjB/a,EAAM9gB,GAAKA,EAAE47B,IAAqB57B,EAAE47B,GAAkB,cAAgB9/B,EAC1E,OACI,OAAOglB,EAAI+a,IAAmB3/B,EAAM,EAAI8D,aAAa8gB,EAAI+a,GACrD77B,GAAK,OAAOA,GAAK9D,EAAM,GAAK8D,IAAM,MAAQA,EAAE,WAAa,GAAK,OAAOA,EAAE,UAAY9D,EAAM,CAEpG,CAQD,SAASmoB,GAAoByX,EAAIC,EAAI,CACjC,IAAIh8B,EAAI,CAAA,EACJqkB,EAAO,CAAA,EACPpnB,EACAg/B,EACJ,IAAKh/B,EAAI,EAAGA,EAAI8+B,EAAG,OAAQ9+B,IACvB+C,EAAE+7B,EAAG9+B,IAAM,GACf,IAAKA,EAAI,EAAGA,EAAI++B,EAAG,OAAQ/+B,IACnB+C,EAAEg8B,EAAG/+B,IACL,OAAO+C,EAAEg8B,EAAG/+B,IAEZ+C,EAAEg8B,EAAG/+B,IAAM,GAEnB,IAAKg/B,KAAKj8B,EACNqkB,EAAK,KAAK4X,CAAC,EACf,OAAO5X,CACV,CAOD,SAASL,GAAoB/hB,EAAOi6B,EAAS,CACzC,IAAIC,EAAMD,EAAU,WAAWj6B,CAAK,EAAI,SAASA,EAAO,EAAE,EAC1D,OAAO,MAAMk6B,CAAG,EAAI,EAAIA,CAC3B,CAMD,SAAStM,IAAkB,CAEvB,IAAIuM,EAAyBpiB,GAAqB,eAClD,GAAIoiB,IAA2BngC,EAG/B,KAAIogC,EAAgBxjB,GAAe,MAC/ByjB,EAAiBD,EAAcjgC,EAAQ,GACvCmgC,EAAmBF,EAAc,MAAM;AAAA,CAAI,EAC3CG,EAAkBD,EAAiBngC,EAAQ,GAC3CqgC,EAAgCJ,EAAc,OAAO,EAAGD,CAAsB,EAAE,MAAM;AAAA,CAAI,EAC1FnM,EAAY,EACZyM,EAAkB,EAClB3M,EAAY0M,EAA8BrgC,EAAQ,GAClD4zB,EAAYyM,EAA8BA,EAA8BrgC,EAAQ,GAAK,GAAGA,EAAQ,GAChGugC,EACA1/B,EAGJ,IAAKA,EAAI,EAAGA,EAAIs/B,EAAiBngC,EAAQ,GAAIa,IACzC0/B,EAAUJ,EAAiBt/B,GAAGb,EAAQ,GAClCugC,EAAUD,IACVzM,EAAYhzB,EAAI,EAChBy/B,EAAkBC,GAI1B,MAAO,CACH,WAAY5M,EACZ,cAAeC,EACf,MAAOwM,EACP,SAAUE,EACV,WAAYzM,EACZ,gBAAiBmM,EACjB,WAAYE,CACpC,EACiB,CAMD,SAASjJ,IAAmC,CACxC,OAAQ5X,IAAuC7K,EAA2B,GAAKA,EAA2B,CAC7G,CAMD,SAASkU,IAA2B,CAChC,OAAOnT,EAAc2H,GAAsB,GAAKgB,EACnD,CAQD,SAASmF,GAAYmd,EAAgBC,EAAS,CAC1C,MAAO,SAAWD,EAAiB10B,EAAK00B,CAAc,GAAKzgC,EAAM,EAC7D,UAAYygC,EAAiB,IAC5B,UAAY,CACT,IAAIn7B,EACAilB,EAAQrmB,EACZ,GAAIH,EAAU,cAAc08B,CAAc,EACtC,IAAKn7B,KAAOm7B,EACRlW,IAAUjlB,IAAQ,IAAM,QAAUA,GAAO,KAAOm7B,EAAen7B,GAAO,KAE9E,OAAOilB,CACnC,EAA4B,EACJrmB,GACA,KACCw8B,GAAWx8B,GACZ,QACP,CASD,SAAS6xB,GAA2B7rB,EAAWy2B,EAA4B,CACvE,IAAIC,EAAe70B,EAAK40B,CAA0B,GAAK3gC,EAAM,EACzD6gC,EAAeD,EAAejkB,EAAgBgkB,GAA8BhkB,EAEhF,OAAQhH,IAAc,CAACkrB,EAAa5gC,EAAQ,GACtC,KACA0V,GACIkrB,EAAaD,EAAe,WAAa,QAAQ9oB,GAAU5N,EAAU,QAAQ,MAAO4N,EAAO,CAAC,EAAE,GAAG,CAAC,EAClG/T,EAAUuf,GAAYpZ,CAAS,CAAC,CAC7C,CAQD,SAAS42B,GAAiB39B,EAAK49B,EAAM,CAIjC,QAHIC,EAASD,EAAK,MAAMjpB,EAAO,EAC3BhX,EAAI,EACJ2F,EACG3F,EAAIkgC,EAAO,OAAQlgC,IAAK,CAC3B,GAAI,CAACqC,EAAIlD,EAAQ,KAAK+gC,EAAOlgC,EAAE,EAC3B,OACJ2F,EAAMtD,EAAI69B,EAAOlgC,IACbA,EAAIkgC,EAAO,QAAUj1B,EAAKtF,CAAG,GAAKzG,EAAM,IACxCmD,EAAMsD,EACb,CACD,OAAOA,CACV,CAQD,SAASw6B,GAAiB99B,EAAK49B,EAAMt6B,EAAK,CAMtC,QALIu6B,EAASD,EAAK,MAAMjpB,EAAO,EAC3BopB,EAAeF,EAAO,OACtBlgC,EAAI,EACJqgC,EAAY,CAAA,EACZC,EAAgBD,EACbrgC,EAAIogC,EAAcpgC,IACrBqgC,EAAYA,EAAUH,EAAOlgC,IAAMA,EAAI,EAAIogC,EAAe,CAAE,EAAGz6B,EACnE1C,EAAU,OAAOZ,EAAKi+B,EAAe,EAAI,CAC5C,CAMD,SAAS7Z,GAAiBxB,EAAQ,CAC9B,IAAIsb,EAAexlB,GAAwB,aAC3CwlB,EAAet1B,EAAKs1B,CAAY,GAAKrhC,EAAM,EAAIqhC,EAAa,MAAMp9B,EAAS,EAAIo9B,EAE3E3/B,EAAc,IAAI2/B,CAAY,GAAK,CAAC9rB,GACpC7P,GAAK27B,EAActb,CAAM,CAEhC,CAYD,SAASgB,GAAWua,EAASnY,EAAOiC,EAAO,CACvC,GAAIA,EACA,OAAOA,EACX,GAAIrf,EAAKu1B,CAAO,GAAKthC,EAAM,GAAK+L,EAAKod,CAAK,GAAKnpB,EAAM,GACjD,QAASuB,KAAQ+/B,EACb,GAAI//B,IAAS,IACT,GAAI+/B,EAAQrhC,EAAQ,KAAKsB,CAAI,GAAK4nB,EAAMlpB,EAAQ,KAAKsB,CAAI,GACrD,GAAIwlB,GAAWua,EAAQ//B,GAAO4nB,EAAM5nB,EAAK,EACrC,MAAO,OAGX,OAAO,OAMnB,QAAO+/B,IAAYnY,EAEvB,MAAO,EACV,CAQD,SAASqC,IAAa,CAClB,OAAOznB,EAAU,OAAO,MAAM,KAAM,CAAC,EAAI,EAAE,OAAO,CAAE,EAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAC9E,CAKD,SAAS0pB,GAASpnB,EAAIgE,EAAS,CAC3B,OAAOiK,GAAgB,SAAS,KAAKjO,EAAIgE,CAAO,CACnD,CAKD,SAASmjB,GAAYnnB,EAAIgE,EAAS,CAC9B,OAAOiK,GAAgB,YAAY,KAAKjO,EAAIgE,CAAO,CACtD,CAKD,SAAS4oB,GAAe5sB,EAAIgE,EAASk3B,EAAO,CACxC,OAAOA,EAAQ9T,GAASpnB,EAAIgE,CAAO,EAAImjB,GAAYnnB,EAAIgE,CAAO,CACjE,CAKD,SAAS+X,GAAO/b,EAAI,CAChB,OAAOiO,GAAgB,OAAO,KAAKjO,CAAE,CACxC,CAQD,SAASse,GAAUte,EAAIH,EAAU,CAC7B,OAAOoO,GAAgB,KAAK,KAAKjO,EAAIH,CAAQ,EAAE,GAAG,CAAC,CACtD,CASDmJ,EAAM,MAAQ,UAAY,CACtBgH,GAAY,EAChC,EAegBhH,EAAM,OAAS,SAAU+b,EAAO,CAC5B,GAAI,CAAA7V,EAGJ,KAAIisB,EACAC,EACAC,EAAW31B,EAAKqf,CAAK,GAAKprB,EAAM,EAChC2hC,EACAC,EACAC,EAEJ,OAAIH,EACItW,IAAU5T,IACVgqB,EAAevY,GAAsB,EACrCwY,EAAehZ,GAA4B,EAC3CkZ,EAAeH,GAAgBC,EAC3BE,GACA1c,GAAO,CACH,oBAAqBwc,EACrB,gBAAiBnsB,EAAexV,EAAY+b,EAChF,CAAiC,GAGAuP,IAAU3T,GACXqJ,IACA8gB,EAAUhhB,GAA8BF,GAAsB,YAAa,CAAA,EAC3EmhB,EAAahhB,GAAiCF,GAAyB,YAAa,CAAA,GAGpFihB,EAAUvyB,EAAM,OAAOmI,EAAQ,EAG9B4T,IAAU,QACfnG,GAAO,CACH,iBAAkB,GAClB,oBAAqB,EACrD,CAA6B,GAILmG,EAAQ/U,IAAa+U,EACrB/U,GAAY,IACR,CAAChH,EAAM,OAAOoI,EAAQ,GAAK2T,IAC3BnG,GAAO,CAAE,OAAQmG,CAAK,CAAE,GAGhC4J,KAEO2M,GAAgBC,GAAWC,EACtD,EAQgBxyB,EAAM,QAAU,SAAU6lB,EAAYpvB,EAAO,CACzC,IAAIg8B,EAAS,CAAA,EACTC,EAGJ,GAAIh+B,EAAU,cAAcmxB,CAAU,GAAK,CAACnxB,EAAU,cAAcmxB,CAAU,EAC1E,GAAInpB,EAAKmpB,CAAU,GAAKl1B,EAAM,EAC1B,GAAI,UAAU,OAAS,EACnBihC,GAAiBa,EAAQ5M,EAAYpvB,CAAK,EAC1Ci8B,EAAa9M,GAAW6M,CAAM,MAG9B,QAAOhB,GAAiBllB,GAAiBsZ,CAAU,MAGvD,QAAOtZ,QAGXmmB,EAAa9M,GAAWC,CAAU,EAGjCnxB,EAAU,cAAcg+B,CAAU,GACnC9c,GAAO,CAAE,gBAAiB8c,CAAU,CAAE,CAE9D,EAKgB1yB,EAAM,QAAU,UAAY,CACxB,GAAI,CAAAkG,EAIJ,CAAAlB,GAAe,OAAOhF,CAAK,EAG3BsX,KAGA5D,GAAoBlG,EAAoB,EACxCkG,GAAoBnG,EAAwB,EAG5C,QAASolB,KAAWlmB,GAChBzM,EAAM,UAAU2yB,CAAO,EAG3B,KAAO/gB,GAAehhB,EAAQ,GAAK,GAC/BghB,GAAe,IAAG,IAGtBwG,GAA0B,EAAI,EAG1BvK,IACAkF,GAAOlF,EAAmB,EAC1BD,IACAmF,GAAOnF,EAAsB,EAC7BpH,IACAuM,GAAOxF,EAAwB,EAGnCua,GAAmB,EAAI,EACvBwG,GAAwB,EAAI,EAC5BvI,GAAkB,EAAI,EAGtB,QAASt0B,EAAI,EAAGA,EAAIub,GAAkBpc,EAAQ,GAAIa,IAC9CiD,EAAUsY,GAAkBvb,EAAE,EAAE,IAAIsb,GAAwBiL,EAAoB,EACpFhL,GAAoBvc,EAEpByV,EAAa,GACbc,GAAY,GAGZjL,GAAU+I,EAAqB,CAAC,EAChC4gB,GAAiB,aAAa,EAMlD,EAuEgB1lB,EAAM,OAAS,SAAU4yB,EAAar6B,EAAUT,EAAQC,EAAU,CAC9D,GAAI,UAAU,SAAW,GAAK66B,IAAgBniC,EAAW,CACrD,IAAIoiC,EAAQ3rB,GACR4rB,EAAQ3rB,GACR4rB,EAAkBpiB,IAAsB5J,IAAUzB,EAAmB,EACrE0tB,EAAkBriB,IAAsB5J,IAAUzB,EAAmB,EACrE2tB,EAAUJ,EAAM,eAChBK,EAAeL,EAAM,oBACrBM,EAAaN,EAAM,WACvB,OAAAK,EAAeH,EAAkB,EAAIG,EAAeA,EACpDD,EAAUF,EAAkBI,EAAaF,EAAUA,EACnDA,GAAWD,EAAkB,GAAK,EAClCG,GAAcH,EAAkB,GAAK,EAE9B,CACH,SAAU,CACN,EAAGC,EACH,EAAGH,EAAM,cACZ,EACD,MAAO,CACH,EAAGI,EACH,EAAGJ,EAAM,mBACZ,EACD,IAAK,CACD,EAAGK,EACH,EAAGL,EAAM,UACZ,EACD,aAAc,CACV,EAAGD,EAAM,cACT,EAAGC,EAAM,aACZ,EACD,aAAc,CACV,EAAGD,EAAM,cACT,EAAGC,EAAM,aACZ,EACD,kBAAmB,CACf,EAAGD,EAAM,mBACT,EAAGC,EAAM,kBACZ,EACD,YAAa,CACT,EAAGD,EAAM,aACT,EAAGC,EAAM,YACZ,EACD,oBAAqB,CACjB,EAAGD,EAAM,qBACT,EAAGC,EAAM,oBACZ,EACD,MAAO/rB,GACP,gBAAiB4J,EAC7C,CACqB,CAED3Q,EAAM,OAAOoI,EAAQ,EAErB,IAAIgrB,EAAeziB,GACf0iB,EAAwB,CAAC9qB,GAAOV,GAAU,GAAG,EAC7CyrB,GAAwB,CAAC9qB,GAAOd,GAAS,GAAG,EAC5C6rB,GAAuB,CAAC,KAAM,KAAM,KAAM,IAAI,EAC9CC,EAAmB92B,EAAKnE,CAAQ,GAAK5H,EAAM,EAC3C8iC,GAAmBD,EAAmBj7B,EAAS,SAAWR,EAC1DtG,GACAiiC,GAAc,CAAA,EACdp7B,GAAgB,CAAA,EAChBq7B,GACAC,GACAC,GACAC,GAAS,MACTC,GAAW,QACXC,GAAY,SACZC,GAAa,UACbC,GAAY,SACZC,GAAW,QACXC,GAAc,WACdC,GAAYzjC,EAAQ,EACpB0jC,GACAC,EACAC,GACAC,GACAC,GACAC,GAA+B,CAACpsB,GAAOC,GAAO,KAAM,IAAI,EACxDosB,GAAgC,CAACb,GAAUD,GAAQE,GAAWC,EAAU,EACxEY,GAAiC,CAACX,GAAWC,GAAUC,EAAW,EAClEU,GAA0BlC,EAAYhiC,EAAQ,KAAK,IAAI,EACvDmkC,GAAkBD,GAA0BlC,EAAY,GAAKA,EAC7DoC,GAA0BD,cAA2BrgC,GAAaV,GAAS+gC,cAA2B/gC,GAAS,GAC/GihC,GAA+BD,GAA0B,GAAQ9vB,GAAc6vB,EAAe,EAC9FG,GAAuB,UAAY,CAC/BvB,IACAnO,GAA6B,EAAI,EACjCoO,IACApO,GAA6B,EAAK,CAC9D,EACwB2P,GAAwBz4B,EAAK+2B,EAAgB,GAAK9iC,EAAM,EAAIF,EAAY,UAAY,CACpFykC,KACAzB,IACxB,EACoB,SAAS2B,GAAyBC,EAAWC,EAAe,CACxD,IAAK7jC,GAAI,EAAGA,GAAI6jC,EAAcjB,IAAY5iC,KACtC,GAAI4jC,IAAcC,EAAc7jC,IAC5B,MAAO,GAEf,MAAO,EACV,CACD,SAAS8jC,GAAaC,EAAK5C,EAAa,CACpC,IAAI6C,GAAkBD,EAAMnC,EAAwBC,GAGpD,GAFAV,EAAcl2B,EAAKk2B,CAAW,GAAKjiC,EAAM,GAAK+L,EAAKk2B,CAAW,GAAKjiC,EAAM,EAAI,CAACiiC,EAAaA,CAAW,EAAIA,EAEtGvgC,EAAc,IAAIugC,CAAW,EAC7B,OAAO4C,EAAM5C,EAAY,GAAKA,EAAY,GACzC,GAAIl2B,EAAKk2B,CAAW,GAAKjiC,EAAM,GAGhC,IAAKc,GAAI,EAAGA,GAAIgkC,GAAgBpB,IAAY5iC,KACxC,GAAIgkC,GAAgBhkC,MAAMmhC,EACtB,OAAOA,EAAY6C,GAAgBhkC,KAElD,CACD,SAASikC,GAAeF,EAAKG,EAAW,CACpC,IAAItD,GAAW31B,EAAKi5B,CAAS,GAAKhlC,EAAM,EACpCilC,GACAC,GACAC,GAAaN,EAAMtuB,GAAwBC,GAC3CkV,GAAayZ,GAAW,eACxBnI,GAAYmI,GAAW,WACvBC,GAAO,MACP36B,GACA46B,GAAWjvB,IAAUyuB,EACrBS,GAAqBD,IAAY1wB,EAAmB,GAAK,CAAC8tB,EAC1D8C,GAAa,UACbC,GAAW,KACXC,GA0BJ,GAzBI/D,IAEIsD,EAAUtB,IAAa,IACvB+B,GAAmBT,EAAU,OAAO,EAAG,CAAC,EACpC9/B,EAAQugC,GAAkB7C,EAAoB,EAAI,KAClDqC,GAAWQ,KAInBT,EAAYC,GAAWD,EAAU,OAAO,CAAC,EAAIA,EAC7CA,EAAYA,EACXO,IAAY,OAAQ,CAAC,EACrBA,IAAY,KAAM,CAAC,EACnBA,IAAY,QAASD,GAAqB,IAAMphC,GAAayT,EAAkB,EAC/E4tB,IAAY,MAAOD,GAAqB,IAAMphC,GAAayT,EAAkB,EAC7E4tB,IAAY,MAAOrhC,CAAS,EAC5BqhC,IAAY,KAAMH,GAAQpI,IAAaqI,IAAY1wB,EAAmB,EAAI,GAAK,GAAK,GAAM,EAC1F4wB,IAAY,MAAOH,GAAO3uB,GAAc,CAAC,EACzC8uB,IAAY,MAAOH,GAAO3uB,GAAc,CAAC,EAC1CyuB,GAASrd,GAAoB,MAAMmd,CAAS,EAAInd,GAAoB2d,GAASR,CAAS,EAAG,EAAI,EAAE,QAAS,EAAGA,CAAS,GAGpHE,GAASF,EAGTE,KAAWplC,GAAa,CAAC,MAAMolC,EAAM,GAAKn5B,EAAKm5B,EAAM,GAAKllC,EAAM,EAAG,CACnE,IAAI0lC,GAAoBjD,GAAgB4C,GACpCM,GAAqBja,IAAcga,IAAqB/wB,EAAmB,EAAI,GAAK,GACpFixB,GAASF,IAAqB/wB,EAAmB,EACjDkxB,GAASH,IAAqB/wB,EAAmB,EAErD,OADAgxB,GAAqBC,GAAU5I,GAAY2I,GAAsBA,GACzDV,QACC,KACDx6B,GAAak7B,GAAqBT,GAClC,UACC,KACDz6B,GAAak7B,GAAqBT,GAClC,UACC,KACDz6B,GAAak7B,GAAqBT,GAClC,UACC,KACDz6B,GAAak7B,GAAqBT,GAClC,cAEAz6B,GAAay6B,GACb,MAERz6B,GAAam7B,GAAS5I,GAAYvyB,GAAaA,GAC/CA,IAAco7B,GAAS,GAAK,EAC5Bp7B,GAAa46B,IAAY1wB,EAAmB,EAAIvR,EAAK,IAAI,EAAGA,EAAK,IAAI45B,GAAWvyB,EAAU,CAAC,EAAIrH,EAAK,IAAI,EAAGA,EAAK,IAAI45B,GAAWvyB,EAAU,CAAC,CAC7I,CACD,OAAOA,KAAeihB,GAAa5rB,EAAY2K,EAClD,CACD,SAASq7B,GAAgBhgC,EAAOigC,EAAmBC,GAAcrB,GAAe,CAC5E,IAAIsB,GAAgB,CAACD,GAAcA,EAAY,EAC3CE,GAAYn6B,EAAKjG,CAAK,EACtBqgC,GACAC,GAGJ,GAAIF,IAAaH,EACbjgC,EAAQ,CAACA,EAAOA,CAAK,UAEhBogC,IAAalmC,EAAM,GAExB,GADAmmC,GAAiBrgC,EAAM49B,IACnByC,GAAiB,GAAKA,GAAiB,EACvCrgC,EAAQmgC,OAIR,KAFIE,KAAmB,IACnBrgC,EAAM,GAAKkgC,IACVllC,GAAI,EAAGA,GAAIqlC,GAAgBrlC,KAE5B,GADAslC,GAAetgC,EAAMhF,IACjBiL,EAAKq6B,EAAY,GAAKL,GAAqB,CAACtB,GAAyB2B,GAAczB,EAAa,EAAG,CACnG7+B,EAAQmgC,GACR,KACH,OAIJC,IAAalmC,EAAM,EACxB8F,EAAQ,CAACA,EAAM8R,KAAUouB,GAAclgC,EAAM+R,KAAUmuB,EAAY,EAEnElgC,EAAQmgC,GACZ,MAAO,CAAE,EAAGngC,EAAM,GAAI,EAAGA,EAAM,GAClC,CACD,SAASugC,GAAeC,EAA+B,CACnD,IAAI5lC,EAAS,CAAA,EACTgkC,GACA6B,GACAC,GAAkB,CAACzvB,GAASC,GAAWC,GAAYC,EAAQ,EAC/D,IAAKpW,GAAI,EAAGA,GAAIwlC,EAA8B5C,KACtC5iC,KAAM0lC,GAAgB9C,IAD4B5iC,KAGtD4jC,GAAY4B,EAA8BxlC,IAC1CylC,GAAgBx6B,EAAK24B,EAAS,EAC1B6B,IAAiBvmC,EAAM,EACvBU,EAAO,KAAKgkC,GAAY7c,GAAoBkc,GAAa,IAAIntB,GAAkB4vB,GAAgB1lC,GAAE,CAAC,EAAI,CAAC,EAEvGJ,EAAO,KAAK6lC,IAAiBvmC,EAAM,EAAI0kC,GAAY,CAAC,EAE5D,OAAOhkC,CACV,CAED,GAAI2jC,IAA2BC,GAA8B,CAEzD,IAAIjV,GAAS8U,GAA0BlC,EAAY,OAAS,EACxDwE,GAAOtC,GAA0BlC,EAAY,KAAO,EACpDjK,GAASmM,GAA0BlC,EAAY,OAAS,EACxDyE,GAAQvC,GAA0BlC,EAAY,MAAQ,EACtD0E,GAAgB,CAAC,EAAG,EAAG,EAAG,CAAC,EAC3BC,GAAa76B,EAAKsjB,EAAM,EACxBwX,GAGJ,GAFA9C,GAAeM,GAA0BD,GAAkBrgC,EAAUqgC,EAAe,EAEhFL,GAAaL,IAAa,EAAG,CAEzBkD,IAAc5mC,EAAM,GAAK4mC,IAAc5mC,EAAM,EAC7CqvB,GAASgX,GAAe,CAAChX,GAAQA,GAAQA,GAAQA,EAAM,CAAC,EACnDuX,IAAc5mC,EAAM,GACzB6mC,GAAexX,GAAOqU,IAClBmD,KAAiB,EACjBxX,GAASgX,GAAe,CAAChX,GAAO,GAAIA,GAAO,GAAIA,GAAO,GAAIA,GAAO,EAAE,CAAC,EAC/DwX,IAAgB,EACrBxX,GAASgX,GAAehX,EAAM,EAE9BA,GAASsX,IAERC,IAAc5mC,EAAM,EACzBqvB,GAASgX,GAAe,CAAChX,GAAOtY,IAAUsY,GAAOrY,IAAYqY,GAAOpY,IAAaoY,GAAOnY,GAAS,CAAC,EAElGmY,GAASsX,GAGbhD,GAAec,GAAyBgC,GAAMzC,EAA4B,EAAIyC,GAAO,KACrF7C,EAAiBkC,GAAgB9N,GAAQh4B,EAAM,EAAGujC,GAAWW,EAA8B,EAC3FL,GAAgBiC,GAAgBY,GAAO1mC,EAAM,EAAGojC,GAAUa,EAA6B,EACvFH,GAAiBzU,GAEjB,IAAIyX,GAAiB,CACjB,EAAGvwB,GAAsB,eACzB,EAAGC,GAAoB,cACvD,EAEgCuwB,GAAiBjqB,GAAgB,SAGjCkqB,GAAgBjD,GAAa,SAC7BkD,GAAc,CACd,EAAGrD,EAAe,GAAKJ,IAAYG,IAAgB9rB,GACnD,EAAG+rB,EAAe,GAAKJ,IAAYG,IAAgB/rB,EACnF,EAC4BovB,GAAcjwB,KAAY+sB,GAAe,GACzCkD,GAAc9vB,KAAa4sB,GAAe,GAC1C,IAAIoD,GAA2B,CAC3B,EAAG9jC,EAAK,MAAM4jC,GAAc9vB,IAAY6vB,GAAe7vB,IAAY4vB,GAAe,CAAC,EACnF,EAAG1jC,EAAK,MAAM4jC,GAAcjwB,IAAWgwB,GAAehwB,IAAW+vB,GAAe,CAAC,CACjH,EAW4B,GAVI1wB,KACI,CAACzB,EAAmB,GAAK,CAACA,EAAmB,IAC7CuyB,GAAyB,EAAI9jC,EAAK,MAAM2jC,GAAe7vB,IAAY8vB,GAAc9vB,IAAY4vB,GAAe,CAAC,GAC7GnyB,EAAmB,GAAK8tB,IACxByE,GAAyB,GAAK,IAC9BvyB,EAAmB,GAAK8tB,IACxByE,GAAyB,EAAI9jC,EAAK,MAAM2jC,GAAe7vB,IAAY8vB,GAAc9vB,KAAaX,GAAsB,WAAauwB,GAAe,EAAE,IAItJjD,GAAc,GAAKT,IAAYS,GAAc,GAAKT,IAAYQ,EAAe,GAAKH,IAAeG,EAAe,GAAKH,IAAertB,GAAQ,CAC5I,IAAI+wB,GAAepD,GAAa,GAC5BqD,GAAiBlyB,EAAoBiyB,GAAalnC,EAAQ,KAAI,EAAK,CACnE,MAAOknC,GAAalnC,EAAQ,IAC5B,OAAQknC,GAAalnC,EAAQ,GACjE,EACoConC,GAAc,CACd,EAAGD,GAAe/vB,GAAaysB,GAAe,GAAKA,GAAe,GAClE,EAAGsD,GAAe9vB,IAAcwsB,GAAe,GAAKA,GAAe,EACvG,EACoCwD,GAAgB,SAAUzC,EAAK,CAC/B,IAAI0C,EAAOxW,GAAiB8T,CAAG,EAC3B7T,GAAKuW,EAAK,KACVC,GAAKD,EAAK,UACVlV,GAAKkV,EAAK,KACVE,GAAa5D,GAAcxR,MAAQwS,GAAMzuB,GAASgtB,GAAoBD,IACtEuE,GAAgB7D,GAAcxR,KAAOgR,GACrCsE,GAAiB9D,GAAcxR,KAAOiR,GACtCsE,GAAchE,EAAevR,KAAOmR,GACpCqE,GAAiBjE,EAAevR,KAAOoR,GACvCqE,GAASrxB,GAAcua,IACvB+W,GAAWhB,GAAeS,IAC1BQ,GAASX,GAAYrW,IACrBiX,GAAWjB,GAAcQ,IACzBU,GAASR,GAAgB,EAAI,EAC7BS,GAAsBF,GAAYD,GAAS,EAC3CI,GAAuBL,GAAYD,GAAS,EAC5CO,GACAL,IAAUF,IACPG,IAAYF,IACZE,GAAWD,IAAUD,GAAWD,GAEnCF,GACAX,GAAY5U,IAAM,GACZ4U,GAAY5U,OACdsV,IAAkBE,MAClBZ,GAAY5U,IAAMwV,GAAiBQ,GAAW,GAC9CZ,GAAaO,GAASF,GAASK,GAAsBC,GAAuBD,GAAsBC,IAEtGlB,GAAyB7U,KAAOoV,IAAcC,IAAkBI,GAASI,GAAWF,GAASE,KAAYrD,GAAOzuB,IAAUqsB,EAAe,GAAK,GAAK,EAE3L,EACgC6E,GAAc,EAAI,EAClBA,GAAc,EAAK,CACtB,CAEGL,GAAY,GACZ,OAAOC,GAAyB,EAChCD,GAAY,GACZ,OAAOC,GAAyB,EAEpCjF,EAAciF,EACjB,CACJ,CAEDnE,GAAY5+B,IAAkB4gC,GAAe,GAAMH,GAAa,GAAM3C,CAAW,CAAC,EAClFc,GAAY3+B,IAAiB2gC,GAAe,GAAOH,GAAa,GAAO3C,CAAW,CAAC,EACnFe,GAAeD,GAAY5+B,MAAoBrE,EAC/CmjC,GAAcF,GAAY3+B,MAAmBtE,GAExCkjC,IAAgBC,MAAiBr7B,EAAW,GAAKi7B,GAC9CA,GACAj7B,EAAS,SAAW48B,GACpBznB,GAAiB,QAAQgmB,GAAan7B,CAAQ,IAG9Cs7B,GAAmB,CACf,SAAUt7B,EACV,SAAU48B,EAC1C,EACgC9iC,EAAc,IAAIyF,CAAM,GAAKpD,EAAU,cAAcoD,CAAM,GAC3DQ,GAAcxD,IAAkBgD,EAAO,IAAMA,EAAO,EACpDQ,GAAcvD,IAAiB+C,EAAO,IAAMA,EAAO,EACnD+7B,GAAiB,cAAgBv7B,IAGjCu7B,GAAiB,OAAS/7B,EAE9B4V,GAAiB,QAAQgmB,GAAaG,EAAgB,IAItDF,IACAjmB,GAAiB5Y,IAAgB4+B,GAAY5+B,GAAe,EAC5D8+B,IACAlmB,GAAiB3Y,IAAe2+B,GAAY3+B,GAAc,EAC9DmgC,KAExB,EAMgBl1B,EAAM,WAAa,SAAUi5B,EAAQC,EAAQC,EAAQ,CACjD,OAAAzrB,GAAiB,KAAKurB,EAAQC,EAAQC,CAAM,EACrCn5B,CAC3B,EAOgBA,EAAM,YAAc,SAAUo5B,EAAa,CACvC,IAAItlC,EAAM,CACN,OAAQ0a,GACR,KAAMC,GACN,QAASG,GACT,SAAUC,GACV,QAASC,GACT,oBAAqB,CACjB,UAAWd,GAA4B,GACvC,MAAOC,GAAiC,GACxC,OAAQC,GAAkC,EAC7C,EACD,kBAAmB,CACf,UAAWC,GAA0B,GACrC,MAAOC,GAA+B,GACtC,OAAQC,GAAgC,EAC3C,EACD,gBAAiBN,GAAwB,EACjE,EACoB,OAAOrR,EAAK08B,CAAW,GAAKzoC,EAAM,EAAI8gC,GAAiB39B,EAAKslC,CAAW,EAAItlC,CAC/F,EAOgBkM,EAAM,SAAW,SAAUq5B,EAAe,CACtC,SAASC,EAAQxlC,EAAK,CAClB,GAAI,CAACY,EAAU,cAAcZ,CAAG,EAC5B,OAAOA,EACX,IAAIylC,EAAWpd,GAAW,CAAE,EAAEroB,CAAG,EAC7B0lC,EAAqB,SAAUthC,EAAMC,EAAI,CACrCohC,EAAS3oC,EAAQ,KAAKsH,CAAI,IAC1BqhC,EAASphC,GAAMohC,EAASrhC,GACxB,OAAOqhC,EAASrhC,GAEhD,EACwB,OAAAshC,EAAmB,IAAKxxB,CAAS,EACjCwxB,EAAmB,IAAKvxB,EAAU,EAClC,OAAOsxB,EAAS,EACTA,CAE/B,CAAoB,IAAIzlC,EAAM,CACN,UAAW,CAAC,CAACwlC,EAAQpzB,CAAU,EAC/B,SAAU,CAAC,CAACozB,EAAQtyB,EAAS,EAC7B,WAAYsyB,EAAQ,CAAC7nB,EAA2B,EAChD,UAAW6nB,EAAQlqB,EAAe,EAClC,WAAYkqB,EAAQjqB,EAAgB,EACpC,QAASiqB,EAAQ/pB,EAAgB,EACjC,eAAgB+pB,EAAQtpB,EAAoB,EAC5C,aAAcspB,EAAQnqB,EAAkB,EACxC,YAAamqB,EAAQpqB,EAAiB,EACtC,kBAAmBoqB,EAAQtqB,EAAuB,EAClD,aAAcsqB,EAAQlyB,EAAa,EACnC,SAAUkyB,EAAQvqB,EAAc,EAChC,cAAeuqB,EAAQjzB,EAAc,CAC7D,EACoB,OAAO3J,EAAK28B,CAAa,GAAK1oC,EAAM,EAAI8gC,GAAiB39B,EAAKulC,CAAa,EAAIvlC,CACnG,EAOgBkM,EAAM,IAAM,SAAU2yB,EAAS,CAC3B,IAAIthC,EACAooC,EAAiB/sB,GAA0B,MAAM,GAAG,EACpDjb,EAAI,EACR,GAAIiL,EAAKi2B,CAAO,GAAKhiC,EAAM,GACvB,GAAI8b,GAAY7b,EAAQ,KAAK+hC,CAAO,EAEhC,IADAthC,EAAS8qB,GAAW,CAAA,EAAI1P,GAAYkmB,EAAQ,EACrClhC,EAAIgoC,EAAe,OAAQhoC,IAC9B,OAAOJ,EAAOooC,EAAehoC,QAGpC,CACDJ,EAAS,CAAA,EACT,IAAKI,KAAKgb,GACNpb,EAAOI,GAAK0qB,GAAW,CAAA,EAAInc,EAAM,IAAIvO,CAAC,CAAC,CAC9C,CACD,OAAOJ,CAC3B,EAQgB2O,EAAM,OAAS,SAAU2yB,EAAS+G,EAAkB,CAChD,IAAIC,EAAyBt9B,EAAQ,UAAUs2B,CAAO,EAClDz2B,EACA09B,EACAC,EACAC,EACAC,EAAoB,GACxB,GAAIJ,EAAwB,CACxB,GAAKltB,GAAY7b,EAAQ,KAAK+hC,CAAO,EAuBjC,OAAO3yB,EAAM,IAAI2yB,CAAO,EAjBxB,GALAz2B,EAAWy9B,EAAuB,iBAAiB,KAAK35B,EACpDmc,GAAW,CAAA,EAAIwd,EAAuB,cAAc,EACpDjlC,EACArC,CAAa,EAEb6J,IACA29B,EAAmB39B,EAAS,SACxBQ,EAAKm9B,CAAgB,GAAKlpC,EAAM,IAChCmpC,EAAiBD,EAAiBtpC,CAAM,EACxCwpC,EAAoBr9B,EAAKo9B,CAAc,GAAKnpC,EAAM,EAAImpC,EAAiBC,GAEvEA,GACA,OAAAttB,GAAYkmB,GAAWz2B,EACvB09B,EAAgB19B,EAAS,MACrBQ,EAAKk9B,CAAa,GAAKjpC,EAAM,GAC7BipC,EAAcF,CAAgB,EAE3B15B,EAAM,IAAI2yB,CAAO,CAMvC,MAEG,QAAQ,KAAK,8BAAiCA,EAAU,qBAAsB,CACtG,EAOgB3yB,EAAM,UAAY,SAAU2yB,EAAS,CACjC,IAAIz2B,EAAWuQ,GAAYkmB,GACvBqH,EACJ,OAAI99B,GACA,OAAOuQ,GAAYkmB,GAEnBqH,EAAkB99B,EAAS,QACvBQ,EAAKs9B,CAAe,GAAKrpC,EAAM,GAC/BqpC,IAEG,IAEJ,EAC3B,EASgB,SAASC,GAAUtmB,EAAepe,EAASwP,EAAY,CACnDuH,GAAkB9I,EAAQ,eAC1BiC,EAA0BjC,EAAQ,uBAClCmC,EAAuBwW,GAAW,CAAA,EAAI3Y,EAAQ,mBAAmB,EACjE4B,EAA6B+W,GAAW,CAAA,EAAI3Y,EAAQ,yBAAyB,EAC7E6B,GAA6B8W,GAAW,CAAA,EAAI3Y,EAAQ,yBAAyB,EAC7E8B,EAAqB6W,GAAW,CAAA,EAAI3Y,EAAQ,iBAAiB,EAG7DoiB,GAAWzJ,GAAW,CAAA,EAAI7P,GAAiB/W,CAAO,CAAC,EAEnDmQ,EAAWlC,EAAQ,QACnBgC,GAAehC,EAAQ,KACvB+B,GAAyB/B,EAAQ,sBACjCoC,EAAqBpC,EAAQ,kBAC7BqC,EAAoBrC,EAAQ,iBAC5BsC,EAAwBtC,EAAQ,qBAChCuC,EAAyBvC,EAAQ,sBACjCwC,EAA2BxC,EAAQ,wBACZA,EAAQ,oBAC/B0J,GAAmBxY,EAAUif,EAAc,aAAa,EACxDpF,GAAyBrB,GAAiB,GAC1CD,GAAiBvY,EAAU6Z,GAAuB,aAAeA,GAAuB,YAAY,EACpGD,GAAuBrB,GAAe,GACtCE,GAAemI,GAAUpI,GAAkB,MAAM,EACjDE,GAAekI,GAAUnI,GAAc,MAAM,EAC7CE,GAAiB3Y,EAAUif,CAAa,EACxCnF,GAAuBnB,GAAe,GACtClH,EAAckH,GAAe,GAAG,UAAU,EAC1CjH,EAAUiH,GAAe,GAAG,MAAM,EAClChH,GAAiBkI,KAA2B/d,GA6D5C8V,GAAaH,EACPkH,GAAe,SAAShD,EAAyB,GAAKgD,GAAe,OAAQ,EAAC,SAAS1C,EAAwB,EAC/G0C,GAAe,SAAS5D,EAAqB,GAAK4D,GAAe,SAAS5E,GAAU8B,EAAwB,EAAE3Z,EAAQ,GAE5H,IAAIspC,EACAC,EAGJ,OAAI/0B,EAA2B,GAAKA,EAA2B,GAAK,CAACoH,GAAwB,yBAAyB,YAClHvG,EAAe,GACfyf,GAAiB,2BAA2B,EACxCpf,KACAyf,GAAkB,EAAI,EACtB+B,GAAmB,EAAI,EACvBwG,GAAwB,EAAI,GAGhCroB,EAAe,GACfC,EAAa,GACbc,GAAY,GAELhH,IAGPoG,IACA8zB,EAAiB,CAAA,EACjBA,EAAe,EAAInmC,EAAK,IAAIsZ,GAAevY,IAAe,EAAIqY,GAAarY,IAAiB,EAAEmY,GAAenY,IAAiB,CAAA,EAC9HolC,EAAe,EAAInmC,EAAK,IAAIsZ,GAAetY,IAAc,EAAIoY,GAAapY,IAAgB,EAAEkY,GAAelY,IAAgB,CAAA,EAE3HolC,EAA6B,UAAY,CACrCzsB,GAAiB,WAAW9c,EAAQ,EAAE,EACtC+hB,GAA6BjF,GAAkB7E,GAAyBsxB,EAA4B,GAAM,EAAI,CACjH,GAILpU,KACA+B,KACAwG,KAGA3H,KACA6B,GAAqB,EAAI,EACzBA,GAAqB,EAAK,EAC1B+F,KAGAzY,KAGApC,GAAoBlG,GAAsB+J,EAAa,EAEnDnR,IAEAsH,GAAiB5Y,IAAgBolC,EAAe,CAAC,EAAEnlC,IAAemlC,EAAe,CAAC,EAG9E1pC,GAAS,eAAiBmjB,GAAiB9E,GAAuB,QAElEnB,GAAiB,KAAK9c,EAAQ,GAAI,IAAI,EACtCie,GAAuB,MAAK,EAM5B8D,GAA6BjF,GAAkB7E,GAAyBsxB,EAA4B,GAAO,EAAI,IAKvHn6B,EAAM,OAAOmI,EAAQ,EAGrBlC,EAAe,GACfyf,GAAiB,eAAe,EAGhCrvB,GAAK+V,GAAsB,SAAU3U,EAAOhB,EAAO,CAAEivB,GAAiBjvB,EAAM,EAAGA,EAAM,CAAC,CAAI,CAAA,EAC1F2V,GAAuB,CAAA,EAGnB1P,EAAKqI,CAAU,GAAKpU,EAAM,IAC1BoU,EAAa,CAACA,CAAU,GACxB1S,EAAc,IAAI0S,CAAU,EAC5B1O,GAAK0O,EAAY,SAAUtN,EAAOhB,EAAO,CAAEuJ,EAAM,OAAOvJ,CAAK,CAAE,CAAE,EAC5D/B,EAAU,cAAcqQ,CAAU,GACvC1O,GAAK0O,EAAY,SAAU9O,EAAKQ,EAAO,CAAEuJ,EAAM,OAAO/J,EAAKQ,CAAK,CAAI,CAAA,EAGxE,WAAW,UAAY,CACfmP,GAAsB,CAACM,GACvBkY,GAAS9Q,EAAcxD,EAAwB,CACtD,EAAE,GAAG,EAEC9J,EACV,CAED,OAAI3D,EAAQ,MAAM49B,GAAUn1B,EAAqBvP,EAASwP,EAAU,CAAC,GACjEhJ,GAAU+I,EAAqB9E,CAAK,EAGjCA,CACV,CASD,OAAA3D,EAAU9L,EAAOG,IAAc,SAAU0pC,EAAsB7kC,EAASwP,GAAY,CAChF,GAAI,UAAUnU,EAAQ,KAAO,EACzB,OAAO,KAEX,IAAIgD,EAAM,CAAA,EACNymC,GAAiB3lC,EAAU,cAAca,CAAO,EAChD4P,EACA9T,EAGJ,OAAK+oC,GAULA,EAAuBA,EAAqBxpC,EAAQ,IAAMH,EAAY2pC,EAAuB,CAACA,EAAqB,IAAMA,CAAoB,EAC7Ix6B,IAEIw6B,EAAqBxpC,EAAQ,GAAK,IAC9BypC,GACA3lC,EAAU,KAAK0lC,EAAsB,SAAU3oC,GAAGC,EAAG,CACjDyT,EAAOzT,EACHyT,IAAS1U,GACTmD,EAAI,KAAKiR,GAA0BM,EAAM5P,EAASwP,GAAYzI,EAAiBC,CAAsB,CAAC,CACtI,CAAyB,EAGD7H,EAAU,KAAK0lC,EAAsB,SAAU3oC,GAAGC,EAAG,CACjDyT,EAAOpJ,GAAUrK,CAAC,GACb6D,IAAY,KAAO8G,EAAQ,MAAM8I,CAAI,GAAO9S,EAAc,KAAKkD,CAAO,GAAK5E,EAAM,GAAK4E,EAAQ7D,EAAGyT,CAAI,GAEjG5P,IAAY9E,IACjBmD,EAAI,KAAKuR,CAAI,CAC7C,CAAyB,EAEL9T,EAASuC,EAAIhD,EAAQ,KAAO,EAAIgD,EAAI,GAAKA,GAEtCvC,GA/BIgpC,IAAkB,CAAC9kC,EAAUlE,EAASuC,CAgCjE,EAMYyI,EAAQ,QAAU,UAAY,CAC1BuD,IACA,IAAI4D,EAAU9O,EAAU,OAAO,GAAM,CAAA,EAAI4H,CAAe,EACxD,cAAOkH,EAAQ,KACRA,CACvB,EAMYnH,EAAQ,eAAiB,SAAUi+B,EAAmB,CAClD16B,IACA,IAAI26B,EAAqBj+B,EAAgB,eACzC,GAAIg+B,IAAsB7pC,EACtB,OAAOiE,EAAU,OAAO,GAAM,CAAE,EAAE6lC,CAAkB,EAGxDj+B,EAAgB,eAAiB5H,EAAU,OAAO,GAAM,CAAE,EAAE6lC,EAAoB99B,EAAgB,UAAU69B,EAAmB79B,EAAgB,UAAW,GAAM89B,CAAkB,EAAE,QAAQ,CAC1M,EAOYl+B,EAAQ,MAAQ,SAAUm+B,EAAY,CAClC,OAAOA,aAAsBn+B,GAAW,CAACm+B,EAAW,SAAQ,EAAG,SAC/E,EAYYn+B,EAAQ,UAAY,SAAUo+B,EAAeC,EAAW36B,GAAgB,CACpE,IAAI46B,EAAoBtoC,EAAc,KAAKooC,CAAa,GAAK9pC,EAAM,EAC/DwL,GAAS,UAAUvL,EAAQ,GAC3Ba,EAAI,EACR,GAAI0K,GAAS,GAAK,CAACw+B,EAEf,OAAOjmC,EAAU,OAAO,GAAM,CAAE,OAAQ8H,EAAmB5L,EAAQ,IAAM4L,CAAkB,EAE1F,GAAIm+B,GACL,GAAItoC,EAAc,KAAKqoC,CAAS,GAAK/pC,EAAM,EAEvC6L,EAAmB,KAAK,CACpB,KAAMi+B,EACN,iBAAkBC,EAClB,eAAgB36B,EAC5C,CAAyB,MAGD,MAAOtO,EAAI+K,EAAmB5L,EAAQ,GAAIa,IACtC,GAAI+K,EAAmB/K,GAAG,OAASgpC,EAC/B,GAAIt+B,GAAS,EACTK,EAAmB,OAAO/K,EAAG,CAAC,MAE9B,QAAOiD,EAAU,OAAO,GAAM,CAAE,EAAE8H,EAAmB/K,EAAE,EAK3F,EAEmB4K,CACnB,IAEQ,OAAIrI,IAAUA,GAAO,KAOjBA,GAAO,GAAG,kBAAoB,SAAUuB,EAASwP,EAAY,CACzD,IAAI61B,EAAY,KAChB,OAAI5mC,GAAO,cAAcuB,CAAO,GAC5BvB,GAAO,KAAK4mC,EAAW,UAAY,CAAEx+B,GAAO,KAAM7G,EAASwP,CAAU,CAAE,CAAE,EAClE61B,GAGAx+B,GAAOw+B,EAAWrlC,CAAO,CACpD,GAEe6G,EACV,CACL,0BChgNA,SAASy+B,IAAW,CAAE,OAAAA,GAAW,OAAO,QAAU,SAAUxnC,GAAQ,CAAE,QAAS5B,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CAAE,IAAIqpC,GAAS,UAAUrpC,GAAI,QAASwE,KAAO6kC,GAAc,OAAO,UAAU,eAAe,KAAKA,GAAQ7kC,CAAG,IAAK5C,GAAO4C,GAAO6kC,GAAO7kC,GAAW,CAAC,OAAO5C,IAAkBwnC,GAAS,MAAM,KAAM,SAAS,CAAI,CAE7T,SAASE,GAAyBD,GAAQE,EAAU,CAAE,GAAIF,IAAU,KAAM,MAAO,GAAI,IAAIznC,GAAS4nC,GAA8BH,GAAQE,CAAQ,EAAO/kC,EAAKxE,GAAG,GAAI,OAAO,sBAAuB,CAAE,IAAIypC,EAAmB,OAAO,sBAAsBJ,EAAM,EAAG,IAAKrpC,GAAI,EAAGA,GAAIypC,EAAiB,OAAQzpC,KAAOwE,EAAMilC,EAAiBzpC,IAAQ,EAAAupC,EAAS,QAAQ/kC,CAAG,GAAK,KAAiB,CAAC,OAAO,UAAU,qBAAqB,KAAK6kC,GAAQ7kC,CAAG,IAAa5C,GAAO4C,GAAO6kC,GAAO7kC,IAAO,CAAG,OAAO5C,EAAS,CAE5e,SAAS4nC,GAA8BH,GAAQE,EAAU,CAAE,GAAIF,IAAU,KAAM,MAAO,CAAE,EAAE,IAAIznC,GAAS,CAAE,EAAM8nC,EAAa,OAAO,KAAKL,EAAM,EAAO7kC,GAAKxE,EAAG,IAAKA,EAAI,EAAGA,EAAI0pC,EAAW,OAAQ1pC,IAAOwE,GAAMklC,EAAW1pC,GAAQ,EAAAupC,EAAS,QAAQ/kC,EAAG,GAAK,KAAa5C,GAAO4C,IAAO6kC,GAAO7kC,KAAQ,OAAO5C,EAAS,CAWzS,IAAC+nC,GAA6B,SAAoCC,EAAM,CAChF,IAAIC,GAAeD,EAAK,QACpB9lC,EAAU+lC,KAAiB,OAAS,CAAE,EAAGA,GACzCv2B,GAAas2B,EAAK,WAClBxgC,EAAYwgC,EAAK,UACjB1/B,EAAW0/B,EAAK,SAChBE,GAAOR,GAAyBM,EAAM,CAAC,UAAW,aAAc,YAAa,UAAU,CAAC,EAExFG,EAAcC,GAAM,SACpBjB,EAAaiB,GAAM,SACvBA,OAAAA,GAAM,UAAU,UAAY,CAC1B,OAAAjB,EAAW,QAAUkB,GAAkBF,EAAY,QAASjmC,EAASwP,EAAU,EAC/E42B,GAAoBnB,EAAW,QAAS3/B,CAAS,EAC1C,UAAY,CACb6gC,GAAkB,MAAMlB,EAAW,OAAO,IAC5CA,EAAW,QAAQ,UACnBA,EAAW,QAAU,KAE7B,CACG,EAAE,CAAE,CAAA,EACLiB,GAAM,UAAU,UAAY,CACtBC,GAAkB,MAAMlB,EAAW,OAAO,GAC5CA,EAAW,QAAQ,QAAQjlC,CAAO,CAExC,EAAK,CAACA,CAAO,CAAC,EACZkmC,GAAM,UAAU,UAAY,CACtBC,GAAkB,MAAMlB,EAAW,OAAO,GAC5CmB,GAAoBnB,EAAW,QAAS3/B,CAAS,CAEvD,EAAK,CAACA,CAAS,CAAC,EACM4gC,GAAM,cAAc,MAAOZ,GAAS,CACtD,UAAW,SACZ,EAAEU,GAAM,CACP,IAAKC,CACT,CAAG,EAAgBC,GAAM,cAAc,MAAO,CAC1C,UAAW,yBACf,CAAG,EAAgBA,GAAM,cAAc,MAAO,CAC1C,UAAW,YACf,EAAkBA,GAAM,cAAc,MAAO,CACzC,UAAW,aACf,EAAkBA,GAAM,cAAc,MAAO,CACzC,UAAW,YACZ,EAAE9/B,CAAQ,CAAC,CAAC,EAAgB8/B,GAAM,cAAc,MAAO,CACtD,UAAW,uCACf,EAAkBA,GAAM,cAAc,MAAO,CACzC,UAAW,oBACf,EAAkBA,GAAM,cAAc,MAAO,CACzC,UAAW,qBACZ,CAAA,CAAC,CAAC,EAAgBA,GAAM,cAAc,MAAO,CAC5C,UAAW,oCACf,EAAkBA,GAAM,cAAc,MAAO,CACzC,UAAW,oBACf,EAAkBA,GAAM,cAAc,MAAO,CACzC,UAAW,qBACZ,CAAA,CAAC,CAAC,EAAgBA,GAAM,cAAc,MAAO,CAC5C,UAAW,qBACZ,CAAA,CAAC,CACJ,EACAL,GAA2B,YAAc,6BAEzC,SAASO,GAAoBnB,GAAY3/B,EAAW,CAClD,GAAI6gC,GAAkB,MAAMlB,EAAU,EAAG,CACvC,IAAIoB,GAAwBpB,GAAW,YAAa,EAChDqB,EAAOD,GAAsB,KAE7B5iB,GAAQ,IAAI,OAAO,wBAAwB,OAAOwhB,GAAW,QAAO,EAAG,UAAU,QAAQ,MAAO,IAAI,EAAG,GAAG,EAAG,GAAG,EAChHsB,EAAeD,EAAK,UAAU,MAAM,GAAG,EAAE,OAAO,SAAUzqC,EAAM,CAClE,OAAOA,EAAK,MAAM4nB,EAAK,CAC7B,CAAK,EAAE,KAAK,GAAG,EACX6iB,EAAK,UAAY,GAAG,OAAOC,EAAc,GAAG,EAAE,OAAOjhC,GAAa,EAAE,CACrE,CACH"}
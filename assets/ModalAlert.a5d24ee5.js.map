{"version":3,"file":"ModalAlert.a5d24ee5.js","sources":["../../src/documentation/components/Organisms/ModalAlertDoc/ModalAlertDoc.tsx","../../src/documentation/pages/Organisms/ModalAlert.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { ModalAlert } from '@/organisms'\nimport { BtnPrimary } from '@/molecules'\nimport { ModalAlertProps } from '@/organisms/ModalAlert/types'\n\nexport function ModalAlertDoc(): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const optionsModal: ModalAlertProps = {\n    showModal: isOpen,\n    typeAlert: 'info',\n    title: '¿Seguro que deseas borrar esta pregunta?',\n    description: 'Por favor escoge otro horario.',\n    optionsButton: [\n      {\n        id: '1',\n        label: 'Opcion 1',\n        action: () => {\n          setIsOpen(false)\n        },\n      },\n      {\n        id: '2',\n        label: 'Opcion 2',\n        action: () => {\n          setIsOpen(false)\n        },\n      },\n    ],\n  }\n  return (\n    <>\n      <BtnPrimary onClick={() => setIsOpen(true)}>Ejemplo modal</BtnPrimary>\n      <ModalAlert {...optionsModal} />\n    </>\n  )\n}\n\nexport default ModalAlertDoc\n","import { MyHeading, MyText, MyTittle, Code } from '@/documentation/components'\nimport { ModalAlertDoc } from '@/documentation/components/Organisms'\n// import { ModalAlert } from '@/organisms'\n// ModalAlertDoc\n// import { dataFake } from '@/organisms/CourseList/utils'\n\nexport const ViewModalAlert = (): JSX.Element => {\n  return (\n    <>\n      <MyHeading>ModalAlert</MyHeading>\n      <MyText>\n        Componente que muestra una alerta en forma de modal, se puede mostrar con un 1 o 2 botones y\n        contiene 4 tipos de alertas:<code> warning, error, success e info</code>.\n        <br />\n        <br />\n        El modal se pegara al provider de <code>Chakra-ui</code> de la aplicacion, de tal modo que\n        hara el portal desde el root de la aplicacion, asegurando que siempre se muestre por encima\n        de cualquier componente\n      </MyText>\n      <MyTittle>Types definidos</MyTittle>\n      <MyText>La modal se comporta bajo los siguientes types:</MyText>\n      <Code\n        text={`//Propiedades del modal\nexport interface ModalAlertProps {\n  showModal: boolean // Muestra/Oculta el modal\n  typeAlert: 'success' | 'error' | 'warning' | 'info' // Tipos de alerta\n  title?: string // Titulo del modal\n  description?: string // Mensaje del modal\n  optionsButton: optionsButton[] // Boton del modal en array\n}\n// Propiedades del boton\ninterface optionsButton {\n  id: string // Identifica el boton para mostrar el divider\n  label: string // Texto del boton\n  action: () => void // Funcion que dispara el boton\n}\n`}\n      />\n      El componente se importa de la siguiente manera:\n      <Code text=\"import { ModalAlert } from '@eclass/ui-kit'\" />\n      <MyTittle>Modo de uso</MyTittle>\n      <MyText>\n        El modal tipo <code>info</code> con 2 opciones\n      </MyText>\n      <ModalAlertDoc />\n      <Code\n        text={`//Importar el modal\nimport { ModalAlert, BtnPrimary } from '@eclass/ui-kit'\nimport { useState } from 'react'\nimport { Button } from '@chakra-ui/react'\n\nexport function ModalAlertDoc(){\n  const [isOpen, setIsOpen] = useState(false)\n  const optionsModal = {\n    showModal: isOpen,\n    typeAlert: 'info',\n    title: '¿Seguro que deseas borrar esta pregunta?',\n    description: 'Por favor escoge otro horario.',\n    optionsButton: [{\n        id: '1',\n        label: 'Opcion 1',\n        action: () => { setIsOpen(false) }\n        },{\n        id: '2',\n        label: 'Opcion 2',\n        action: () => { setIsOpen(false) }\n        }],\n  }\n  return (<>\n      <BtnPrimary onClick={() => setIsOpen(true)}>Open Modal</BtnPrimary>\n      <ModalAlert {...optionsModal} />\n    </>)}\n}`}\n      />\n    </>\n  )\n}\n\nexport default ViewModalAlert\n"],"names":["ModalAlertDoc","isOpen","setIsOpen","useState","_Fragment","children","_jsx","BtnPrimary","onClick","ModalAlert","showModal","typeAlert","title","description","optionsButton","id","label","action","optionsModal","ViewModalAlert","MyHeading","_jsxs","MyText","MyTittle","Code","text"],"mappings":"iWAKO,SAASA,GAA6B,CAC3C,KAAM,CAACC,EAAQC,CAAS,EAAIC,mBAAS,EAAK,EAuB1C,SACEC,EAAA,CAAAC,SAAA,CACEC,EAACC,EAAU,CAACC,QAASA,IAAMN,EAAU,EAAI,EAAEG,SAAC,eAAA,CAAyB,EACrEC,EAACG,EAAU,CAAA,GAzBuB,CACpCC,UAAWT,EACXU,UAAW,OACXC,MAAO,8CACPC,YAAa,iCACbC,cAAe,CACb,CACEC,GAAI,IACJC,MAAO,WACPC,OAAQA,IAAM,CACZf,EAAU,EAAK,CACjB,CAAA,EAEF,CACEa,GAAI,IACJC,MAAO,WACPC,OAAQA,IAAM,CACZf,EAAU,EAAK,CACjB,CAAA,CACD,CAAA,CAMegB,CAAe,CAAC,CAAA,CAChC,CAEN,CC7BO,MAAMC,EAAiBA,MAE1Bf,EAAA,CAAAC,SAAA,CACEC,EAACc,EAAS,CAAAf,SAAC,YAAA,CAAqB,EAChCgB,EAACC,EAAM,CAAAjB,SAAA,CAAC,4HAEsBC,EAAA,OAAA,CAAAD,SAAM,iCAAqC,CAAA,EAAC,IACxEC,EAAK,KAAA,CAAA,CAAA,EACLA,EAAK,KAAA,CAAA,CAAA,EAC6B,uCAAA,OAAA,CAAAD,SAAM,WAAe,CAAA,EAGzD,wJAAA,CAAA,CAAQ,EACRC,EAACiB,EAAQ,CAAAlB,SAAC,iBAAA,CAAyB,EACnCC,EAACgB,EAAM,CAAAjB,SAAC,iDAAA,CAAuD,EAC/DC,EAACkB,EAAI,CACHC,KAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA,CAeR,EAAC,mDAEFnB,EAACkB,EAAI,CAACC,KAAK,6CAAA,CAA+C,EAC1DnB,EAACiB,EAAQ,CAAAlB,SAAC,aAAA,CAAqB,EAC/BgB,EAACC,EAAM,CAAAjB,SAAA,CAAC,iBACQC,EAAA,OAAA,CAAAD,SAAM,MAAU,CAAA,EAChC,iBAAA,CAAA,CAAQ,EACPL,EAAAA,GAAe,CAAA,IACfwB,EAAI,CACHC,KAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA,CA2BR,CAAC,CAAA,CACF"}
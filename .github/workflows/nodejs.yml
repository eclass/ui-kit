name: Node.js CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18, 20]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add Know Hosts
        run: |
          ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
        shell: bash
      - name: Regenerate package-lock.json
        run: npm i
      - name: Clean node_modules after regenerate
        run: rm -rf node_modules
      - name: Clean install on CI
        run: npm ci
      - name: Linter code check
        run: npm run lint:check
      - name: Testing JEST
        run: npm run test
      - name: Upload package-lock.json regenerate
        uses: actions/upload-artifact@v3
        with:
          name: package-lock
          path: package-lock.json
  release:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: 'npm'
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add Know Hosts
        run: |
          ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
        shell: bash
      - name: Download artifact package-lock.json
        uses: actions/download-artifact@v3
        with:
          name: package-lock
          path: package-lock.json
      - name: Clean node_modules after regenerate
        run: rm -rf node_modules
      - name: Clean install on CI
        run: npm ci
      - name: Build library
        run: npm run build
      - name: Release version
        run: npx semantic-release@18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-pages:
    name: Build to GitHub Pages
    needs: release
    runs-on: ubuntu-latest
    env:
      VITE_REACT_DEPLOY_DOCUMENTATION: DOCUMENTATION

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: 'npm'
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add Know Hosts
        run: |
          ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
        shell: bash
      - name: Download artifact package-lock.json
        uses: actions/download-artifact@v3
        with:
          name: package-lock
          path: package-lock.json
      - name: Clean node_modules after regenerate
        run: rm -rf node_modules
      - name: Clean install on CI
        run: npm ci
      - name: Generate new Build to Pages
        run: npm run deploy
      - name: Upload deploy-ready build files
        uses: actions/upload-artifact@v3
        with:
          name: deploy-files
          path: ./dist

  deploy-pages:
    name: Deploy GitHub Pages
    needs: build-pages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    env:
      VITE_REACT_DEPLOY_DOCUMENTATION: DOCUMENTATION

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy-files
          path: ./dist

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add Know Hosts
        run: |
          ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
        shell: bash

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        env:
          GH_TOKEN: eclass:${{ secrets.GITHUB_TOKEN }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
